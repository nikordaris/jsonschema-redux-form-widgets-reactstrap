// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render Varied Array Fields Should render ModalVariedArrayCard 1`] = `
<div>
  <div
    className="container-0-13 card"
  >
    <div
      className="header-0-14 card-header"
    >
      <div
        className="headerTitle-0-16"
      >
        Varied Array Card
      </div>
      <div
        className="addButton-0-15"
      >
        <button
          className="btn btn-primary btn-sm"
          onClick={[Function]}
          type="button"
        >
          Add
        </button>
      </div>
    </div>
    <ul
      className="list-group list-group-flush"
    />
  </div>
</div>
`;

exports[`Render Varied Array Fields Should render ModalVariedArrayInline 1`] = `
<div>
  <div
    className="container-0-17"
  >
    <div
      className="header-0-18"
    >
      <div
        className="headerTitle-0-20"
      >
        Varied Array Inline
      </div>
      <div
        className="addButton-0-19"
      >
        <button
          className="btn btn-primary btn-sm"
          onClick={[Function]}
          type="button"
        >
          Add
        </button>
      </div>
    </div>
    <div
      className={undefined}
    />
  </div>
</div>
`;

exports[`Render Varied Array Fields Should render VariedArrayCard 1`] = `
<div
  className="container-0-0 card"
>
  <div
    className="header-0-1 card-header"
  >
    Varied Array Card
  </div>
  <div
    className="card-body"
  >
    <div
      className="select-0-2"
    >
      <select
        className="form-control"
        id="selectItem"
        onChange={[Function]}
        value=""
      >
        <option
          disabled={true}
          value=""
        >
          Select 
          Varied Array Card
        </option>
        <option
          value="Bar"
        >
          Bar
        </option>
        <option
          value="Baz"
        >
          Baz
        </option>
      </select>
      <button
        className="btn btn-primary disabled"
        disabled={true}
        id="addItemBtn"
        onClick={[Function]}
        type="button"
      >
        Add
      </button>
    </div>
    <div
      className={undefined}
    />
  </div>
</div>
`;

exports[`Render Varied Array Fields Should render VariedArrayInline 1`] = `
<div
  className="container-0-3"
>
  <div
    className="header-0-4"
  >
    Varied Array Inline
  </div>
  <div
    className={undefined}
  >
    <div
      className="select-0-5"
    >
      <select
        className="form-control"
        id="selectItem"
        onChange={[Function]}
        value=""
      >
        <option
          disabled={true}
          value=""
        >
          Select 
          Varied Array Inline
        </option>
        <option
          value="Bar"
        >
          Bar
        </option>
        <option
          value="Baz"
        >
          Baz
        </option>
      </select>
      <button
        className="btn btn-primary disabled"
        disabled={true}
        id="addItemBtn"
        onClick={[Function]}
        type="button"
      >
        Add
      </button>
    </div>
    <div
      className={undefined}
    />
  </div>
</div>
`;

exports[`Render Varied Array Fields should add item to array, modify it, and remove it 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    form="TestForm"
    name="foobar"
    schemaVis={
      Object {
        "components": Object {
          "CardItem": [Function],
          "CardWithHeader": [Function],
          "Color": [Function],
          "Date": [Function],
          "DateTime": [Function],
          "Email": [Function],
          "ListItemTemplate": [Function],
          "ModalUniformedArrayCard": [Function],
          "ModalUniformedArrayInline": [Function],
          "ModalVariedArrayCard": [Function],
          "ModalVariedArrayInline": [Function],
          "Number": [Function],
          "Password": [Function],
          "SingleSelect": [Function],
          "Text": [Function],
          "TextArea": [Function],
          "UniformedArrayCard": [Function],
          "UniformedArrayInline": [Function],
          "VariedArrayCard": [Function],
          "VariedArrayInline": [Function],
        },
        "prefix": "meta.vis",
        "schema": Object {
          "id": "VariedArrayCard",
          "items": Object {
            "anyOf": Array [
              Object {
                "id": "Bar",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "bar": Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 2,
                      },
                    },
                    "title": "Bar",
                    "type": "string",
                  },
                  "name": Object {
                    "id": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Bar",
                "type": "object",
              },
              Object {
                "id": "Baz",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "baz": Object {
                    "id": "Baz",
                    "meta": Object {
                      "vis": Object {
                        "component": "Number",
                        "ordinal": 2,
                      },
                    },
                    "title": "Baz",
                    "type": "number",
                  },
                  "name": Object {
                    "it": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Baz",
                "type": "object",
              },
            ],
            "id": "FooCard",
            "meta": Object {
              "vis": Object {
                "component": "SingleSelect",
              },
            },
            "title": "Foo Card",
            "type": "object",
          },
          "title": "Varied Array Card",
          "type": "array",
        },
      }
    }
  >
    <Connect(Form(StyledComponent))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="TestForm"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      name="foobar"
      persistentSubmitErrors={false}
      pure={true}
      schemaVis={
        Object {
          "components": Object {
            "CardItem": [Function],
            "CardWithHeader": [Function],
            "Color": [Function],
            "Date": [Function],
            "DateTime": [Function],
            "Email": [Function],
            "ListItemTemplate": [Function],
            "ModalUniformedArrayCard": [Function],
            "ModalUniformedArrayInline": [Function],
            "ModalVariedArrayCard": [Function],
            "ModalVariedArrayInline": [Function],
            "Number": [Function],
            "Password": [Function],
            "SingleSelect": [Function],
            "Text": [Function],
            "TextArea": [Function],
            "UniformedArrayCard": [Function],
            "UniformedArrayInline": [Function],
            "VariedArrayCard": [Function],
            "VariedArrayInline": [Function],
          },
          "prefix": "meta.vis",
          "schema": Object {
            "id": "VariedArrayCard",
            "items": Object {
              "anyOf": Array [
                Object {
                  "id": "Bar",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "bar": Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 2,
                        },
                      },
                      "title": "Bar",
                      "type": "string",
                    },
                    "name": Object {
                      "id": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Bar",
                  "type": "object",
                },
                Object {
                  "id": "Baz",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "baz": Object {
                      "id": "Baz",
                      "meta": Object {
                        "vis": Object {
                          "component": "Number",
                          "ordinal": 2,
                        },
                      },
                      "title": "Baz",
                      "type": "number",
                    },
                    "name": Object {
                      "it": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Baz",
                  "type": "object",
                },
              ],
              "id": "FooCard",
              "meta": Object {
                "vis": Object {
                  "component": "SingleSelect",
                },
              },
              "title": "Foo Card",
              "type": "object",
            },
            "title": "Varied Array Card",
            "type": "array",
          },
        }
      }
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      withRef={true}
    >
      <Form(StyledComponent)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncErrors={undefined}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={false}
        dispatch={[Function]}
        enableReinitialize={false}
        error={undefined}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="TestForm"
        getFormState={[Function]}
        initialValues={undefined}
        initialize={[Function]}
        initialized={false}
        invalid={false}
        keepDirtyOnReinitialize={false}
        name="foobar"
        persistentSubmitErrors={false}
        pristine={true}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "foobar": Object {
              "count": 1,
              "name": "foobar",
              "type": "FieldArray",
            },
          }
        }
        reset={[Function]}
        schemaVis={
          Object {
            "components": Object {
              "CardItem": [Function],
              "CardWithHeader": [Function],
              "Color": [Function],
              "Date": [Function],
              "DateTime": [Function],
              "Email": [Function],
              "ListItemTemplate": [Function],
              "ModalUniformedArrayCard": [Function],
              "ModalUniformedArrayInline": [Function],
              "ModalVariedArrayCard": [Function],
              "ModalVariedArrayInline": [Function],
              "Number": [Function],
              "Password": [Function],
              "SingleSelect": [Function],
              "Text": [Function],
              "TextArea": [Function],
              "UniformedArrayCard": [Function],
              "UniformedArrayInline": [Function],
              "VariedArrayCard": [Function],
              "VariedArrayInline": [Function],
            },
            "prefix": "meta.vis",
            "schema": Object {
              "id": "VariedArrayCard",
              "items": Object {
                "anyOf": Array [
                  Object {
                    "id": "Bar",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "bar": Object {
                        "id": "Bar",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 2,
                          },
                        },
                        "title": "Bar",
                        "type": "string",
                      },
                      "name": Object {
                        "id": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Bar",
                    "type": "object",
                  },
                  Object {
                    "id": "Baz",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "baz": Object {
                        "id": "Baz",
                        "meta": Object {
                          "vis": Object {
                            "component": "Number",
                            "ordinal": 2,
                          },
                        },
                        "title": "Baz",
                        "type": "number",
                      },
                      "name": Object {
                        "it": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Baz",
                    "type": "object",
                  },
                ],
                "id": "FooCard",
                "meta": Object {
                  "vis": Object {
                    "component": "SingleSelect",
                  },
                },
                "title": "Foo Card",
                "type": "object",
              },
              "title": "Varied Array Card",
              "type": "array",
            },
          }
        }
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldError={[Function]}
        shouldValidate={[Function]}
        shouldWarn={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={Object {}}
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        triggerSubmit={undefined}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={true}
        validExceptSubmit={true}
        values={Object {}}
        warning={undefined}
        withRef={true}
      >
        <StyledComponent
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={false}
          dispatch={[Function]}
          error={undefined}
          form="TestForm"
          handleSubmit={[Function]}
          initialValues={undefined}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          name="foobar"
          pristine={true}
          pure={true}
          reset={[Function]}
          schemaVis={
            Object {
              "components": Object {
                "CardItem": [Function],
                "CardWithHeader": [Function],
                "Color": [Function],
                "Date": [Function],
                "DateTime": [Function],
                "Email": [Function],
                "ListItemTemplate": [Function],
                "ModalUniformedArrayCard": [Function],
                "ModalUniformedArrayInline": [Function],
                "ModalVariedArrayCard": [Function],
                "ModalVariedArrayInline": [Function],
                "Number": [Function],
                "Password": [Function],
                "SingleSelect": [Function],
                "Text": [Function],
                "TextArea": [Function],
                "UniformedArrayCard": [Function],
                "UniformedArrayInline": [Function],
                "VariedArrayCard": [Function],
                "VariedArrayInline": [Function],
              },
              "prefix": "meta.vis",
              "schema": Object {
                "id": "VariedArrayCard",
                "items": Object {
                  "anyOf": Array [
                    Object {
                      "id": "Bar",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "bar": Object {
                          "id": "Bar",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 2,
                            },
                          },
                          "title": "Bar",
                          "type": "string",
                        },
                        "name": Object {
                          "id": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Bar",
                      "type": "object",
                    },
                    Object {
                      "id": "Baz",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "baz": Object {
                          "id": "Baz",
                          "meta": Object {
                            "vis": Object {
                              "component": "Number",
                              "ordinal": 2,
                            },
                          },
                          "title": "Baz",
                          "type": "number",
                        },
                        "name": Object {
                          "it": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Baz",
                      "type": "object",
                    },
                  ],
                  "id": "FooCard",
                  "meta": Object {
                    "vis": Object {
                      "component": "SingleSelect",
                    },
                  },
                  "title": "Foo Card",
                  "type": "object",
                },
                "title": "Varied Array Card",
                "type": "array",
              },
            }
          }
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          triggerSubmit={undefined}
          untouch={[Function]}
          valid={true}
          warning={undefined}
          withRef={true}
        >
          <ModalVariedArrayCard
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            classes={
              Object {
                "addButton": "addButton-0-30",
                "container": "container-0-28",
                "header": "header-0-29",
                "headerTitle": "headerTitle-0-31",
              }
            }
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={false}
            dispatch={[Function]}
            error={undefined}
            form="TestForm"
            handleSubmit={[Function]}
            initialValues={undefined}
            initialize={[Function]}
            initialized={false}
            invalid={false}
            name="foobar"
            pristine={true}
            pure={true}
            reset={[Function]}
            schemaVis={
              Object {
                "components": Object {
                  "CardItem": [Function],
                  "CardWithHeader": [Function],
                  "Color": [Function],
                  "Date": [Function],
                  "DateTime": [Function],
                  "Email": [Function],
                  "ListItemTemplate": [Function],
                  "ModalUniformedArrayCard": [Function],
                  "ModalUniformedArrayInline": [Function],
                  "ModalVariedArrayCard": [Function],
                  "ModalVariedArrayInline": [Function],
                  "Number": [Function],
                  "Password": [Function],
                  "SingleSelect": [Function],
                  "Text": [Function],
                  "TextArea": [Function],
                  "UniformedArrayCard": [Function],
                  "UniformedArrayInline": [Function],
                  "VariedArrayCard": [Function],
                  "VariedArrayInline": [Function],
                },
                "prefix": "meta.vis",
                "schema": Object {
                  "id": "VariedArrayCard",
                  "items": Object {
                    "anyOf": Array [
                      Object {
                        "id": "Bar",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "bar": Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 2,
                              },
                            },
                            "title": "Bar",
                            "type": "string",
                          },
                          "name": Object {
                            "id": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Bar",
                        "type": "object",
                      },
                      Object {
                        "id": "Baz",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "baz": Object {
                            "id": "Baz",
                            "meta": Object {
                              "vis": Object {
                                "component": "Number",
                                "ordinal": 2,
                              },
                            },
                            "title": "Baz",
                            "type": "number",
                          },
                          "name": Object {
                            "it": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Baz",
                        "type": "object",
                      },
                    ],
                    "id": "FooCard",
                    "meta": Object {
                      "vis": Object {
                        "component": "SingleSelect",
                      },
                    },
                    "title": "Foo Card",
                    "type": "object",
                  },
                  "title": "Varied Array Card",
                  "type": "array",
                },
              }
            }
            sheet={
              StyleSheet {
                "attached": true,
                "classes": Object {
                  "addButton": "addButton-0-30",
                  "container": "container-0-28",
                  "header": "header-0-29",
                  "headerTitle": "headerTitle-0-31",
                },
                "deployed": true,
                "linked": false,
                "options": Object {
                  "Renderer": [Function],
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "generateClassName": [Function],
                  "index": 0,
                  "insertionPoint": undefined,
                  "jss": Jss {
                    "generateClassName": [Function],
                    "options": Object {
                      "Renderer": [Function],
                      "createGenerateClassName": [Function],
                      "plugins": Array [
                        Object {
                          "onCreateRule": [Function],
                          "onProcessRule": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessRule": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                      ],
                    },
                    "plugins": PluginsRegistry {
                      "hooks": Object {
                        "onChangeValue": Array [
                          [Function],
                          [Function],
                        ],
                        "onCreateRule": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "onProcessRule": Array [
                          [Function],
                          [Function],
                        ],
                        "onProcessSheet": Array [],
                        "onProcessStyle": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                    },
                    "version": "8.1.0",
                  },
                  "parent": [Circular],
                  "sheet": [Circular],
                },
                "renderer": DomRenderer {
                  "element": <style
                    data-jss=""
                    type="text/css"
                  >
                    
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                  </style>,
                  "getSelector": [Function],
                  "getStyle": [Function],
                  "hasInsertedRules": false,
                  "setSelector": [Function],
                  "setStyle": [Function],
                  "sheet": [Circular],
                },
                "rules": RuleList {
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "index": Array [
                    Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    Object {
                      "margin-left": "auto",
                    },
                    Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  ],
                  "map": Object {
                    ".addButton-0-30": Object {
                      "margin-left": "auto",
                    },
                    ".container-0-28": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    ".header-0-29": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    ".headerTitle-0-31": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                    "addButton": Object {
                      "margin-left": "auto",
                    },
                    "container": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    "headerTitle": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  },
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "raw": Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  },
                },
              }
            }
            styles={
              Object {
                "addButton": Object {
                  "marginLeft": "auto",
                },
                "container": Object {
                  "marginBottom": 10,
                  "marginTop": 15,
                },
                "header": Object {
                  "display": "inline-flex",
                  "padding": 5,
                  "paddingLeft": 10,
                },
                "headerTitle": Object {
                  "marginBottom": "auto",
                  "marginTop": "auto",
                },
              }
            }
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            touch={[Function]}
            triggerSubmit={undefined}
            untouch={[Function]}
            valid={true}
            warning={undefined}
            withRef={true}
          >
            <FieldArray
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              asyncValidate={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              bodyProps={
                Object {
                  "flush": true,
                }
              }
              change={[Function]}
              classes={
                Object {
                  "addButton": "addButton-0-30",
                  "container": "container-0-28",
                  "header": "header-0-29",
                  "headerTitle": "headerTitle-0-31",
                }
              }
              clearAsyncError={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              component={[Function]}
              destroy={[Function]}
              dirty={false}
              dispatch={[Function]}
              error={undefined}
              form="TestForm"
              formName="variedArrayCardItem"
              handleSubmit={[Function]}
              initialValues={undefined}
              initialize={[Function]}
              initialized={false}
              invalid={false}
              name="foobar"
              pristine={true}
              pure={true}
              reset={[Function]}
              schemaVis={
                Object {
                  "components": Object {
                    "CardItem": [Function],
                    "CardWithHeader": [Function],
                    "Color": [Function],
                    "Date": [Function],
                    "DateTime": [Function],
                    "Email": [Function],
                    "ListItemTemplate": [Function],
                    "ModalUniformedArrayCard": [Function],
                    "ModalUniformedArrayInline": [Function],
                    "ModalVariedArrayCard": [Function],
                    "ModalVariedArrayInline": [Function],
                    "Number": [Function],
                    "Password": [Function],
                    "SingleSelect": [Function],
                    "Text": [Function],
                    "TextArea": [Function],
                    "UniformedArrayCard": [Function],
                    "UniformedArrayInline": [Function],
                    "VariedArrayCard": [Function],
                    "VariedArrayInline": [Function],
                  },
                  "prefix": "meta.vis",
                  "schema": Object {
                    "id": "VariedArrayCard",
                    "items": Object {
                      "anyOf": Array [
                        Object {
                          "id": "Bar",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "bar": Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Bar",
                              "type": "string",
                            },
                            "name": Object {
                              "id": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Bar",
                          "type": "object",
                        },
                        Object {
                          "id": "Baz",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "baz": Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Number",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Baz",
                              "type": "number",
                            },
                            "name": Object {
                              "it": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Baz",
                          "type": "object",
                        },
                      ],
                      "id": "FooCard",
                      "meta": Object {
                        "vis": Object {
                          "component": "SingleSelect",
                        },
                      },
                      "title": "Foo Card",
                      "type": "object",
                    },
                    "title": "Varied Array Card",
                    "type": "array",
                  },
                }
              }
              sheet={
                StyleSheet {
                  "attached": true,
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "deployed": true,
                  "linked": false,
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "renderer": DomRenderer {
                    "element": <style
                      data-jss=""
                      type="text/css"
                    >
                      
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                    </style>,
                    "getSelector": [Function],
                    "getStyle": [Function],
                    "hasInsertedRules": false,
                    "setSelector": [Function],
                    "setStyle": [Function],
                    "sheet": [Circular],
                  },
                  "rules": RuleList {
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "index": Array [
                      Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      Object {
                        "margin-left": "auto",
                      },
                      Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    ],
                    "map": Object {
                      ".addButton-0-30": Object {
                        "margin-left": "auto",
                      },
                      ".container-0-28": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      ".header-0-29": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      ".headerTitle-0-31": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                      "addButton": Object {
                        "margin-left": "auto",
                      },
                      "container": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      "headerTitle": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    },
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "raw": Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    },
                  },
                }
              }
              styles={
                Object {
                  "addButton": Object {
                    "marginLeft": "auto",
                  },
                  "container": Object {
                    "marginBottom": 10,
                    "marginTop": 15,
                  },
                  "header": Object {
                    "display": "inline-flex",
                    "padding": 5,
                    "paddingLeft": 10,
                  },
                  "headerTitle": Object {
                    "marginBottom": "auto",
                    "marginTop": "auto",
                  },
                }
              }
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              touch={[Function]}
              triggerSubmit={undefined}
              untouch={[Function]}
              valid={true}
              validate={[Function]}
              warning={undefined}
              withRef={true}
            >
              <Connect(ConnectedFieldArray)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "TestForm",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "name": "foobar",
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": undefined,
                    "reset": [Function],
                    "schemaVis": Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    },
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldError": [Function],
                    "shouldValidate": [Function],
                    "shouldWarn": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {},
                    "warning": undefined,
                    "withRef": true,
                  }
                }
                anyTouched={false}
                array={
                  Object {
                    "insert": [Function],
                    "move": [Function],
                    "pop": [Function],
                    "push": [Function],
                    "remove": [Function],
                    "removeAll": [Function],
                    "shift": [Function],
                    "splice": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                  }
                }
                asyncValidate={[Function]}
                asyncValidating={false}
                autofill={[Function]}
                blur={[Function]}
                bodyProps={
                  Object {
                    "flush": true,
                  }
                }
                change={[Function]}
                classes={
                  Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  }
                }
                clearAsyncError={[Function]}
                clearSubmit={[Function]}
                clearSubmitErrors={[Function]}
                component={[Function]}
                destroy={[Function]}
                dirty={false}
                dispatch={[Function]}
                error={undefined}
                form="TestForm"
                formName="variedArrayCardItem"
                handleSubmit={[Function]}
                initialValues={undefined}
                initialize={[Function]}
                initialized={false}
                invalid={false}
                name="foobar"
                pristine={true}
                pure={true}
                reset={[Function]}
                schemaVis={
                  Object {
                    "components": Object {
                      "CardItem": [Function],
                      "CardWithHeader": [Function],
                      "Color": [Function],
                      "Date": [Function],
                      "DateTime": [Function],
                      "Email": [Function],
                      "ListItemTemplate": [Function],
                      "ModalUniformedArrayCard": [Function],
                      "ModalUniformedArrayInline": [Function],
                      "ModalVariedArrayCard": [Function],
                      "ModalVariedArrayInline": [Function],
                      "Number": [Function],
                      "Password": [Function],
                      "SingleSelect": [Function],
                      "Text": [Function],
                      "TextArea": [Function],
                      "UniformedArrayCard": [Function],
                      "UniformedArrayInline": [Function],
                      "VariedArrayCard": [Function],
                      "VariedArrayInline": [Function],
                    },
                    "prefix": "meta.vis",
                    "schema": Object {
                      "id": "VariedArrayCard",
                      "items": Object {
                        "anyOf": Array [
                          Object {
                            "id": "Bar",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "bar": Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Bar",
                                "type": "string",
                              },
                              "name": Object {
                                "id": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Bar",
                            "type": "object",
                          },
                          Object {
                            "id": "Baz",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "baz": Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Number",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Baz",
                                "type": "number",
                              },
                              "name": Object {
                                "it": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Baz",
                            "type": "object",
                          },
                        ],
                        "id": "FooCard",
                        "meta": Object {
                          "vis": Object {
                            "component": "SingleSelect",
                          },
                        },
                        "title": "Foo Card",
                        "type": "object",
                      },
                      "title": "Varied Array Card",
                      "type": "array",
                    },
                  }
                }
                sheet={
                  StyleSheet {
                    "attached": true,
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "deployed": true,
                    "linked": false,
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "renderer": DomRenderer {
                      "element": <style
                        data-jss=""
                        type="text/css"
                      >
                        
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                      </style>,
                      "getSelector": [Function],
                      "getStyle": [Function],
                      "hasInsertedRules": false,
                      "setSelector": [Function],
                      "setStyle": [Function],
                      "sheet": [Circular],
                    },
                    "rules": RuleList {
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "index": Array [
                        Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        Object {
                          "margin-left": "auto",
                        },
                        Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      ],
                      "map": Object {
                        ".addButton-0-30": Object {
                          "margin-left": "auto",
                        },
                        ".container-0-28": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        ".header-0-29": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        ".headerTitle-0-31": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                        "addButton": Object {
                          "margin-left": "auto",
                        },
                        "container": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        "headerTitle": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      },
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "raw": Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      },
                    },
                  }
                }
                styles={
                  Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  }
                }
                submit={[Function]}
                submitFailed={false}
                submitSucceeded={false}
                submitting={false}
                touch={[Function]}
                triggerSubmit={undefined}
                untouch={[Function]}
                valid={true}
                validate={[Function]}
                warning={undefined}
                withRef={true}
              >
                <ConnectedFieldArray
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "TestForm",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "name": "foobar",
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": undefined,
                      "reset": [Function],
                      "schemaVis": Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      },
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldError": [Function],
                      "shouldValidate": [Function],
                      "shouldWarn": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {},
                      "warning": undefined,
                      "withRef": true,
                    }
                  }
                  anyTouched={false}
                  array={
                    Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    }
                  }
                  arrayInsert={[Function]}
                  arrayMove={[Function]}
                  arrayPop={[Function]}
                  arrayPush={[Function]}
                  arrayRemove={[Function]}
                  arrayRemoveAll={[Function]}
                  arrayShift={[Function]}
                  arraySplice={[Function]}
                  arraySwap={[Function]}
                  arrayUnshift={[Function]}
                  asyncError={undefined}
                  asyncValidate={[Function]}
                  asyncValidating={false}
                  autofill={[Function]}
                  blur={[Function]}
                  bodyProps={
                    Object {
                      "flush": true,
                    }
                  }
                  change={[Function]}
                  classes={
                    Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    }
                  }
                  clearAsyncError={[Function]}
                  clearSubmit={[Function]}
                  clearSubmitErrors={[Function]}
                  component={[Function]}
                  destroy={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  error={undefined}
                  form="TestForm"
                  formName="variedArrayCardItem"
                  handleSubmit={[Function]}
                  initialValues={undefined}
                  initialize={[Function]}
                  initialized={false}
                  invalid={false}
                  length={0}
                  name="foobar"
                  pristine={true}
                  pure={true}
                  rerenderOnEveryChange={false}
                  reset={[Function]}
                  schemaVis={
                    Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    }
                  }
                  sheet={
                    StyleSheet {
                      "attached": true,
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "deployed": true,
                      "linked": false,
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "renderer": DomRenderer {
                        "element": <style
                          data-jss=""
                          type="text/css"
                        >
                          
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                        </style>,
                        "getSelector": [Function],
                        "getStyle": [Function],
                        "hasInsertedRules": false,
                        "setSelector": [Function],
                        "setStyle": [Function],
                        "sheet": [Circular],
                      },
                      "rules": RuleList {
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "index": Array [
                          Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          Object {
                            "margin-left": "auto",
                          },
                          Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        ],
                        "map": Object {
                          ".addButton-0-30": Object {
                            "margin-left": "auto",
                          },
                          ".container-0-28": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          ".header-0-29": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          ".headerTitle-0-31": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                          "addButton": Object {
                            "margin-left": "auto",
                          },
                          "container": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          "headerTitle": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        },
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "raw": Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        },
                      },
                    }
                  }
                  state={undefined}
                  styles={
                    Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    }
                  }
                  submit={[Function]}
                  submitError={undefined}
                  submitFailed={undefined}
                  submitSucceeded={false}
                  submitting={undefined}
                  syncError={undefined}
                  syncWarning={undefined}
                  touch={[Function]}
                  triggerSubmit={undefined}
                  untouch={[Function]}
                  valid={true}
                  validate={[Function]}
                  value={undefined}
                  warning={undefined}
                  withRef={true}
                >
                  <Connect(ModalVariedArray)
                    anyTouched={false}
                    array={
                      Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    asyncValidate={[Function]}
                    asyncValidating={false}
                    autofill={[Function]}
                    blur={[Function]}
                    bodyProps={
                      Object {
                        "flush": true,
                      }
                    }
                    change={[Function]}
                    classes={
                      Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      }
                    }
                    clearAsyncError={[Function]}
                    clearSubmit={[Function]}
                    clearSubmitErrors={[Function]}
                    destroy={[Function]}
                    dispatch={[Function]}
                    error={undefined}
                    fields={
                      Object {
                        "_isFieldArray": true,
                        "forEach": [Function],
                        "get": [Function],
                        "getAll": [Function],
                        "insert": [Function],
                        "length": 0,
                        "map": [Function],
                        "move": [Function],
                        "name": "foobar",
                        "pop": [Function],
                        "push": [Function],
                        "reduce": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    form="TestForm"
                    formName="variedArrayCardItem"
                    handleSubmit={[Function]}
                    initialValues={undefined}
                    initialize={[Function]}
                    initialized={false}
                    invalid={false}
                    meta={
                      Object {
                        "dirty": false,
                        "error": undefined,
                        "form": "TestForm",
                        "invalid": false,
                        "pristine": true,
                        "submitFailed": undefined,
                        "submitting": undefined,
                        "valid": true,
                        "warning": undefined,
                      }
                    }
                    pure={true}
                    reset={[Function]}
                    schemaVis={
                      Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      }
                    }
                    sheet={
                      StyleSheet {
                        "attached": true,
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "deployed": true,
                        "linked": false,
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "renderer": DomRenderer {
                          "element": <style
                            data-jss=""
                            type="text/css"
                          >
                            
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                          </style>,
                          "getSelector": [Function],
                          "getStyle": [Function],
                          "hasInsertedRules": false,
                          "setSelector": [Function],
                          "setStyle": [Function],
                          "sheet": [Circular],
                        },
                        "rules": RuleList {
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "index": Array [
                            Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            Object {
                              "margin-left": "auto",
                            },
                            Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          ],
                          "map": Object {
                            ".addButton-0-30": Object {
                              "margin-left": "auto",
                            },
                            ".container-0-28": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            ".header-0-29": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            ".headerTitle-0-31": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                            "addButton": Object {
                              "margin-left": "auto",
                            },
                            "container": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            "headerTitle": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          },
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "raw": Object {
                            "addButton": Object {
                              "marginLeft": "auto",
                            },
                            "container": Object {
                              "marginBottom": 10,
                              "marginTop": 15,
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": 5,
                              "paddingLeft": 10,
                            },
                            "headerTitle": Object {
                              "marginBottom": "auto",
                              "marginTop": "auto",
                            },
                          },
                        },
                      }
                    }
                    styles={
                      Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      }
                    }
                    submit={[Function]}
                    submitSucceeded={false}
                    touch={[Function]}
                    triggerSubmit={undefined}
                    untouch={[Function]}
                    valid={true}
                    warning={undefined}
                  >
                    <ModalVariedArray
                      addBtnProps={Object {}}
                      anyTouched={false}
                      array={
                        Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "splice": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      asyncValidate={[Function]}
                      asyncValidating={false}
                      autofill={[Function]}
                      blur={[Function]}
                      bodyProps={
                        Object {
                          "flush": true,
                        }
                      }
                      bodyTag={[Function]}
                      change={[Function]}
                      changeForm={[Function]}
                      classes={
                        Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        }
                      }
                      clearAsyncError={[Function]}
                      clearSubmit={[Function]}
                      clearSubmitErrors={[Function]}
                      dataSchemaPrefix="meta.data"
                      destroy={[Function]}
                      destroyForm={[Function]}
                      dispatch={[Function]}
                      error={undefined}
                      fields={
                        Object {
                          "_isFieldArray": true,
                          "forEach": [Function],
                          "get": [Function],
                          "getAll": [Function],
                          "insert": [Function],
                          "length": 0,
                          "map": [Function],
                          "move": [Function],
                          "name": "foobar",
                          "pop": [Function],
                          "push": [Function],
                          "reduce": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      form="TestForm"
                      formName="variedArrayCardItem"
                      handleSubmit={[Function]}
                      headerTag={[Function]}
                      initialValues={undefined}
                      initialize={[Function]}
                      initialized={false}
                      invalid={false}
                      items={undefined}
                      meta={
                        Object {
                          "dirty": false,
                          "error": undefined,
                          "form": "TestForm",
                          "invalid": false,
                          "pristine": true,
                          "submitFailed": undefined,
                          "submitting": undefined,
                          "valid": true,
                          "warning": undefined,
                        }
                      }
                      pure={true}
                      required={false}
                      reset={[Function]}
                      schemaVis={
                        Object {
                          "components": Object {
                            "CardItem": [Function],
                            "CardWithHeader": [Function],
                            "Color": [Function],
                            "Date": [Function],
                            "DateTime": [Function],
                            "Email": [Function],
                            "ListItemTemplate": [Function],
                            "ModalUniformedArrayCard": [Function],
                            "ModalUniformedArrayInline": [Function],
                            "ModalVariedArrayCard": [Function],
                            "ModalVariedArrayInline": [Function],
                            "Number": [Function],
                            "Password": [Function],
                            "SingleSelect": [Function],
                            "Text": [Function],
                            "TextArea": [Function],
                            "UniformedArrayCard": [Function],
                            "UniformedArrayInline": [Function],
                            "VariedArrayCard": [Function],
                            "VariedArrayInline": [Function],
                          },
                          "prefix": "meta.vis",
                          "schema": Object {
                            "id": "VariedArrayCard",
                            "items": Object {
                              "anyOf": Array [
                                Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "bar": Object {
                                      "id": "Bar",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Bar",
                                      "type": "string",
                                    },
                                    "name": Object {
                                      "id": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "object",
                                },
                                Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "baz": Object {
                                      "id": "Baz",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Number",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Baz",
                                      "type": "number",
                                    },
                                    "name": Object {
                                      "it": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "object",
                                },
                              ],
                              "id": "FooCard",
                              "meta": Object {
                                "vis": Object {
                                  "component": "SingleSelect",
                                },
                              },
                              "title": "Foo Card",
                              "type": "object",
                            },
                            "title": "Varied Array Card",
                            "type": "array",
                          },
                        }
                      }
                      selectInputProps={Object {}}
                      sheet={
                        StyleSheet {
                          "attached": true,
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "deployed": true,
                          "linked": false,
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "renderer": DomRenderer {
                            "element": <style
                              data-jss=""
                              type="text/css"
                            >
                              
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                            </style>,
                            "getSelector": [Function],
                            "getStyle": [Function],
                            "hasInsertedRules": false,
                            "setSelector": [Function],
                            "setStyle": [Function],
                            "sheet": [Circular],
                          },
                          "rules": RuleList {
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "index": Array [
                              Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              Object {
                                "margin-left": "auto",
                              },
                              Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            ],
                            "map": Object {
                              ".addButton-0-30": Object {
                                "margin-left": "auto",
                              },
                              ".container-0-28": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              ".header-0-29": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              ".headerTitle-0-31": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                              "addButton": Object {
                                "margin-left": "auto",
                              },
                              "container": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              "headerTitle": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            },
                            "options": Object {
                              "Renderer": [Function],
                              "classes": Object {
                                "addButton": "addButton-0-30",
                                "container": "container-0-28",
                                "header": "header-0-29",
                                "headerTitle": "headerTitle-0-31",
                              },
                              "generateClassName": [Function],
                              "index": 0,
                              "insertionPoint": undefined,
                              "jss": Jss {
                                "generateClassName": [Function],
                                "options": Object {
                                  "Renderer": [Function],
                                  "createGenerateClassName": [Function],
                                  "plugins": Array [
                                    Object {
                                      "onCreateRule": [Function],
                                      "onProcessRule": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessRule": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                  ],
                                },
                                "plugins": PluginsRegistry {
                                  "hooks": Object {
                                    "onChangeValue": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onCreateRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessRule": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessSheet": Array [],
                                    "onProcessStyle": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                },
                                "version": "8.1.0",
                              },
                              "parent": [Circular],
                              "sheet": [Circular],
                            },
                            "raw": Object {
                              "addButton": Object {
                                "marginLeft": "auto",
                              },
                              "container": Object {
                                "marginBottom": 10,
                                "marginTop": 15,
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": 5,
                                "paddingLeft": 10,
                              },
                              "headerTitle": Object {
                                "marginBottom": "auto",
                                "marginTop": "auto",
                              },
                            },
                          },
                        }
                      }
                      styles={
                        Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        }
                      }
                      submit={[Function]}
                      submitForm={[Function]}
                      submitSucceeded={false}
                      tag={[Function]}
                      touch={[Function]}
                      triggerSubmit={undefined}
                      untouch={[Function]}
                      valid={true}
                      warning={undefined}
                    >
                      <div>
                        <Card
                          className="container-0-28"
                          tag="div"
                        >
                          <div
                            className="container-0-28 card"
                          >
                            <CardHeader
                              className="header-0-29"
                              tag="div"
                            >
                              <div
                                className="header-0-29 card-header"
                              >
                                <div
                                  className="headerTitle-0-31"
                                >
                                  Varied Array Card
                                </div>
                                <div
                                  className="addButton-0-30"
                                >
                                  <Button
                                    color="primary"
                                    onClick={[Function]}
                                    size="sm"
                                    tag="button"
                                  >
                                    <button
                                      className="btn btn-primary btn-sm"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Add
                                    </button>
                                  </Button>
                                </div>
                              </div>
                            </CardHeader>
                            <ListGroup
                              className={undefined}
                              flush={true}
                              tag="ul"
                            >
                              <ul
                                className="list-group list-group-flush"
                              />
                            </ListGroup>
                          </div>
                        </Card>
                        <Modal
                          autoFocus={true}
                          backdrop={true}
                          backdropTransition={
                            Object {
                              "mountOnEnter": true,
                              "timeout": 150,
                            }
                          }
                          fade={true}
                          isOpen={true}
                          keyboard={true}
                          modalTransition={
                            Object {
                              "timeout": 300,
                            }
                          }
                          onClosed={[Function]}
                          onOpened={[Function]}
                          role="dialog"
                          toggle={[Function]}
                          zIndex={1050}
                        />
                      </div>
                    </ModalVariedArray>
                  </Connect(ModalVariedArray)>
                </ConnectedFieldArray>
              </Connect(ConnectedFieldArray)>
            </FieldArray>
          </ModalVariedArrayCard>
        </StyledComponent>
      </Form(StyledComponent)>
    </Connect(Form(StyledComponent))>
  </ReduxForm>
</Provider>
`;

exports[`Render Varied Array Fields should add item to array, modify it, and remove it 2`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    form="TestForm"
    name="foobar"
    schemaVis={
      Object {
        "components": Object {
          "CardItem": [Function],
          "CardWithHeader": [Function],
          "Color": [Function],
          "Date": [Function],
          "DateTime": [Function],
          "Email": [Function],
          "ListItemTemplate": [Function],
          "ModalUniformedArrayCard": [Function],
          "ModalUniformedArrayInline": [Function],
          "ModalVariedArrayCard": [Function],
          "ModalVariedArrayInline": [Function],
          "Number": [Function],
          "Password": [Function],
          "SingleSelect": [Function],
          "Text": [Function],
          "TextArea": [Function],
          "UniformedArrayCard": [Function],
          "UniformedArrayInline": [Function],
          "VariedArrayCard": [Function],
          "VariedArrayInline": [Function],
        },
        "prefix": "meta.vis",
        "schema": Object {
          "id": "VariedArrayCard",
          "items": Object {
            "anyOf": Array [
              Object {
                "id": "Bar",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "bar": Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 2,
                      },
                    },
                    "title": "Bar",
                    "type": "string",
                  },
                  "name": Object {
                    "id": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Bar",
                "type": "object",
              },
              Object {
                "id": "Baz",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "baz": Object {
                    "id": "Baz",
                    "meta": Object {
                      "vis": Object {
                        "component": "Number",
                        "ordinal": 2,
                      },
                    },
                    "title": "Baz",
                    "type": "number",
                  },
                  "name": Object {
                    "it": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Baz",
                "type": "object",
              },
            ],
            "id": "FooCard",
            "meta": Object {
              "vis": Object {
                "component": "SingleSelect",
              },
            },
            "title": "Foo Card",
            "type": "object",
          },
          "title": "Varied Array Card",
          "type": "array",
        },
      }
    }
  >
    <Connect(Form(StyledComponent))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="TestForm"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      name="foobar"
      persistentSubmitErrors={false}
      pure={true}
      schemaVis={
        Object {
          "components": Object {
            "CardItem": [Function],
            "CardWithHeader": [Function],
            "Color": [Function],
            "Date": [Function],
            "DateTime": [Function],
            "Email": [Function],
            "ListItemTemplate": [Function],
            "ModalUniformedArrayCard": [Function],
            "ModalUniformedArrayInline": [Function],
            "ModalVariedArrayCard": [Function],
            "ModalVariedArrayInline": [Function],
            "Number": [Function],
            "Password": [Function],
            "SingleSelect": [Function],
            "Text": [Function],
            "TextArea": [Function],
            "UniformedArrayCard": [Function],
            "UniformedArrayInline": [Function],
            "VariedArrayCard": [Function],
            "VariedArrayInline": [Function],
          },
          "prefix": "meta.vis",
          "schema": Object {
            "id": "VariedArrayCard",
            "items": Object {
              "anyOf": Array [
                Object {
                  "id": "Bar",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "bar": Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 2,
                        },
                      },
                      "title": "Bar",
                      "type": "string",
                    },
                    "name": Object {
                      "id": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Bar",
                  "type": "object",
                },
                Object {
                  "id": "Baz",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "baz": Object {
                      "id": "Baz",
                      "meta": Object {
                        "vis": Object {
                          "component": "Number",
                          "ordinal": 2,
                        },
                      },
                      "title": "Baz",
                      "type": "number",
                    },
                    "name": Object {
                      "it": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Baz",
                  "type": "object",
                },
              ],
              "id": "FooCard",
              "meta": Object {
                "vis": Object {
                  "component": "SingleSelect",
                },
              },
              "title": "Foo Card",
              "type": "object",
            },
            "title": "Varied Array Card",
            "type": "array",
          },
        }
      }
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      withRef={true}
    >
      <Form(StyledComponent)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncErrors={undefined}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={false}
        dispatch={[Function]}
        enableReinitialize={false}
        error={undefined}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="TestForm"
        getFormState={[Function]}
        initialValues={undefined}
        initialize={[Function]}
        initialized={false}
        invalid={false}
        keepDirtyOnReinitialize={false}
        name="foobar"
        persistentSubmitErrors={false}
        pristine={true}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "foobar": Object {
              "count": 1,
              "name": "foobar",
              "type": "FieldArray",
            },
          }
        }
        reset={[Function]}
        schemaVis={
          Object {
            "components": Object {
              "CardItem": [Function],
              "CardWithHeader": [Function],
              "Color": [Function],
              "Date": [Function],
              "DateTime": [Function],
              "Email": [Function],
              "ListItemTemplate": [Function],
              "ModalUniformedArrayCard": [Function],
              "ModalUniformedArrayInline": [Function],
              "ModalVariedArrayCard": [Function],
              "ModalVariedArrayInline": [Function],
              "Number": [Function],
              "Password": [Function],
              "SingleSelect": [Function],
              "Text": [Function],
              "TextArea": [Function],
              "UniformedArrayCard": [Function],
              "UniformedArrayInline": [Function],
              "VariedArrayCard": [Function],
              "VariedArrayInline": [Function],
            },
            "prefix": "meta.vis",
            "schema": Object {
              "id": "VariedArrayCard",
              "items": Object {
                "anyOf": Array [
                  Object {
                    "id": "Bar",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "bar": Object {
                        "id": "Bar",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 2,
                          },
                        },
                        "title": "Bar",
                        "type": "string",
                      },
                      "name": Object {
                        "id": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Bar",
                    "type": "object",
                  },
                  Object {
                    "id": "Baz",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "baz": Object {
                        "id": "Baz",
                        "meta": Object {
                          "vis": Object {
                            "component": "Number",
                            "ordinal": 2,
                          },
                        },
                        "title": "Baz",
                        "type": "number",
                      },
                      "name": Object {
                        "it": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Baz",
                    "type": "object",
                  },
                ],
                "id": "FooCard",
                "meta": Object {
                  "vis": Object {
                    "component": "SingleSelect",
                  },
                },
                "title": "Foo Card",
                "type": "object",
              },
              "title": "Varied Array Card",
              "type": "array",
            },
          }
        }
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldError={[Function]}
        shouldValidate={[Function]}
        shouldWarn={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={Object {}}
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        triggerSubmit={undefined}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={true}
        validExceptSubmit={true}
        values={Object {}}
        warning={undefined}
        withRef={true}
      >
        <StyledComponent
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={false}
          dispatch={[Function]}
          error={undefined}
          form="TestForm"
          handleSubmit={[Function]}
          initialValues={undefined}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          name="foobar"
          pristine={true}
          pure={true}
          reset={[Function]}
          schemaVis={
            Object {
              "components": Object {
                "CardItem": [Function],
                "CardWithHeader": [Function],
                "Color": [Function],
                "Date": [Function],
                "DateTime": [Function],
                "Email": [Function],
                "ListItemTemplate": [Function],
                "ModalUniformedArrayCard": [Function],
                "ModalUniformedArrayInline": [Function],
                "ModalVariedArrayCard": [Function],
                "ModalVariedArrayInline": [Function],
                "Number": [Function],
                "Password": [Function],
                "SingleSelect": [Function],
                "Text": [Function],
                "TextArea": [Function],
                "UniformedArrayCard": [Function],
                "UniformedArrayInline": [Function],
                "VariedArrayCard": [Function],
                "VariedArrayInline": [Function],
              },
              "prefix": "meta.vis",
              "schema": Object {
                "id": "VariedArrayCard",
                "items": Object {
                  "anyOf": Array [
                    Object {
                      "id": "Bar",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "bar": Object {
                          "id": "Bar",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 2,
                            },
                          },
                          "title": "Bar",
                          "type": "string",
                        },
                        "name": Object {
                          "id": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Bar",
                      "type": "object",
                    },
                    Object {
                      "id": "Baz",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "baz": Object {
                          "id": "Baz",
                          "meta": Object {
                            "vis": Object {
                              "component": "Number",
                              "ordinal": 2,
                            },
                          },
                          "title": "Baz",
                          "type": "number",
                        },
                        "name": Object {
                          "it": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Baz",
                      "type": "object",
                    },
                  ],
                  "id": "FooCard",
                  "meta": Object {
                    "vis": Object {
                      "component": "SingleSelect",
                    },
                  },
                  "title": "Foo Card",
                  "type": "object",
                },
                "title": "Varied Array Card",
                "type": "array",
              },
            }
          }
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          triggerSubmit={undefined}
          untouch={[Function]}
          valid={true}
          warning={undefined}
          withRef={true}
        >
          <ModalVariedArrayCard
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            classes={
              Object {
                "addButton": "addButton-0-30",
                "container": "container-0-28",
                "header": "header-0-29",
                "headerTitle": "headerTitle-0-31",
              }
            }
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={false}
            dispatch={[Function]}
            error={undefined}
            form="TestForm"
            handleSubmit={[Function]}
            initialValues={undefined}
            initialize={[Function]}
            initialized={false}
            invalid={false}
            name="foobar"
            pristine={true}
            pure={true}
            reset={[Function]}
            schemaVis={
              Object {
                "components": Object {
                  "CardItem": [Function],
                  "CardWithHeader": [Function],
                  "Color": [Function],
                  "Date": [Function],
                  "DateTime": [Function],
                  "Email": [Function],
                  "ListItemTemplate": [Function],
                  "ModalUniformedArrayCard": [Function],
                  "ModalUniformedArrayInline": [Function],
                  "ModalVariedArrayCard": [Function],
                  "ModalVariedArrayInline": [Function],
                  "Number": [Function],
                  "Password": [Function],
                  "SingleSelect": [Function],
                  "Text": [Function],
                  "TextArea": [Function],
                  "UniformedArrayCard": [Function],
                  "UniformedArrayInline": [Function],
                  "VariedArrayCard": [Function],
                  "VariedArrayInline": [Function],
                },
                "prefix": "meta.vis",
                "schema": Object {
                  "id": "VariedArrayCard",
                  "items": Object {
                    "anyOf": Array [
                      Object {
                        "id": "Bar",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "bar": Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 2,
                              },
                            },
                            "title": "Bar",
                            "type": "string",
                          },
                          "name": Object {
                            "id": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Bar",
                        "type": "object",
                      },
                      Object {
                        "id": "Baz",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "baz": Object {
                            "id": "Baz",
                            "meta": Object {
                              "vis": Object {
                                "component": "Number",
                                "ordinal": 2,
                              },
                            },
                            "title": "Baz",
                            "type": "number",
                          },
                          "name": Object {
                            "it": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Baz",
                        "type": "object",
                      },
                    ],
                    "id": "FooCard",
                    "meta": Object {
                      "vis": Object {
                        "component": "SingleSelect",
                      },
                    },
                    "title": "Foo Card",
                    "type": "object",
                  },
                  "title": "Varied Array Card",
                  "type": "array",
                },
              }
            }
            sheet={
              StyleSheet {
                "attached": true,
                "classes": Object {
                  "addButton": "addButton-0-30",
                  "container": "container-0-28",
                  "header": "header-0-29",
                  "headerTitle": "headerTitle-0-31",
                },
                "deployed": true,
                "linked": false,
                "options": Object {
                  "Renderer": [Function],
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "generateClassName": [Function],
                  "index": 0,
                  "insertionPoint": undefined,
                  "jss": Jss {
                    "generateClassName": [Function],
                    "options": Object {
                      "Renderer": [Function],
                      "createGenerateClassName": [Function],
                      "plugins": Array [
                        Object {
                          "onCreateRule": [Function],
                          "onProcessRule": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessRule": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                      ],
                    },
                    "plugins": PluginsRegistry {
                      "hooks": Object {
                        "onChangeValue": Array [
                          [Function],
                          [Function],
                        ],
                        "onCreateRule": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "onProcessRule": Array [
                          [Function],
                          [Function],
                        ],
                        "onProcessSheet": Array [],
                        "onProcessStyle": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                    },
                    "version": "8.1.0",
                  },
                  "parent": [Circular],
                  "sheet": [Circular],
                },
                "renderer": DomRenderer {
                  "element": <style
                    data-jss=""
                    type="text/css"
                  >
                    
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                  </style>,
                  "getSelector": [Function],
                  "getStyle": [Function],
                  "hasInsertedRules": false,
                  "setSelector": [Function],
                  "setStyle": [Function],
                  "sheet": [Circular],
                },
                "rules": RuleList {
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "index": Array [
                    Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    Object {
                      "margin-left": "auto",
                    },
                    Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  ],
                  "map": Object {
                    ".addButton-0-30": Object {
                      "margin-left": "auto",
                    },
                    ".container-0-28": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    ".header-0-29": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    ".headerTitle-0-31": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                    "addButton": Object {
                      "margin-left": "auto",
                    },
                    "container": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    "headerTitle": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  },
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "raw": Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  },
                },
              }
            }
            styles={
              Object {
                "addButton": Object {
                  "marginLeft": "auto",
                },
                "container": Object {
                  "marginBottom": 10,
                  "marginTop": 15,
                },
                "header": Object {
                  "display": "inline-flex",
                  "padding": 5,
                  "paddingLeft": 10,
                },
                "headerTitle": Object {
                  "marginBottom": "auto",
                  "marginTop": "auto",
                },
              }
            }
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            touch={[Function]}
            triggerSubmit={undefined}
            untouch={[Function]}
            valid={true}
            warning={undefined}
            withRef={true}
          >
            <FieldArray
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              asyncValidate={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              bodyProps={
                Object {
                  "flush": true,
                }
              }
              change={[Function]}
              classes={
                Object {
                  "addButton": "addButton-0-30",
                  "container": "container-0-28",
                  "header": "header-0-29",
                  "headerTitle": "headerTitle-0-31",
                }
              }
              clearAsyncError={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              component={[Function]}
              destroy={[Function]}
              dirty={false}
              dispatch={[Function]}
              error={undefined}
              form="TestForm"
              formName="variedArrayCardItem"
              handleSubmit={[Function]}
              initialValues={undefined}
              initialize={[Function]}
              initialized={false}
              invalid={false}
              name="foobar"
              pristine={true}
              pure={true}
              reset={[Function]}
              schemaVis={
                Object {
                  "components": Object {
                    "CardItem": [Function],
                    "CardWithHeader": [Function],
                    "Color": [Function],
                    "Date": [Function],
                    "DateTime": [Function],
                    "Email": [Function],
                    "ListItemTemplate": [Function],
                    "ModalUniformedArrayCard": [Function],
                    "ModalUniformedArrayInline": [Function],
                    "ModalVariedArrayCard": [Function],
                    "ModalVariedArrayInline": [Function],
                    "Number": [Function],
                    "Password": [Function],
                    "SingleSelect": [Function],
                    "Text": [Function],
                    "TextArea": [Function],
                    "UniformedArrayCard": [Function],
                    "UniformedArrayInline": [Function],
                    "VariedArrayCard": [Function],
                    "VariedArrayInline": [Function],
                  },
                  "prefix": "meta.vis",
                  "schema": Object {
                    "id": "VariedArrayCard",
                    "items": Object {
                      "anyOf": Array [
                        Object {
                          "id": "Bar",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "bar": Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Bar",
                              "type": "string",
                            },
                            "name": Object {
                              "id": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Bar",
                          "type": "object",
                        },
                        Object {
                          "id": "Baz",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "baz": Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Number",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Baz",
                              "type": "number",
                            },
                            "name": Object {
                              "it": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Baz",
                          "type": "object",
                        },
                      ],
                      "id": "FooCard",
                      "meta": Object {
                        "vis": Object {
                          "component": "SingleSelect",
                        },
                      },
                      "title": "Foo Card",
                      "type": "object",
                    },
                    "title": "Varied Array Card",
                    "type": "array",
                  },
                }
              }
              sheet={
                StyleSheet {
                  "attached": true,
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "deployed": true,
                  "linked": false,
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "renderer": DomRenderer {
                    "element": <style
                      data-jss=""
                      type="text/css"
                    >
                      
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                    </style>,
                    "getSelector": [Function],
                    "getStyle": [Function],
                    "hasInsertedRules": false,
                    "setSelector": [Function],
                    "setStyle": [Function],
                    "sheet": [Circular],
                  },
                  "rules": RuleList {
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "index": Array [
                      Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      Object {
                        "margin-left": "auto",
                      },
                      Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    ],
                    "map": Object {
                      ".addButton-0-30": Object {
                        "margin-left": "auto",
                      },
                      ".container-0-28": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      ".header-0-29": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      ".headerTitle-0-31": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                      "addButton": Object {
                        "margin-left": "auto",
                      },
                      "container": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      "headerTitle": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    },
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "raw": Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    },
                  },
                }
              }
              styles={
                Object {
                  "addButton": Object {
                    "marginLeft": "auto",
                  },
                  "container": Object {
                    "marginBottom": 10,
                    "marginTop": 15,
                  },
                  "header": Object {
                    "display": "inline-flex",
                    "padding": 5,
                    "paddingLeft": 10,
                  },
                  "headerTitle": Object {
                    "marginBottom": "auto",
                    "marginTop": "auto",
                  },
                }
              }
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              touch={[Function]}
              triggerSubmit={undefined}
              untouch={[Function]}
              valid={true}
              validate={[Function]}
              warning={undefined}
              withRef={true}
            >
              <Connect(ConnectedFieldArray)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "TestForm",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "name": "foobar",
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": undefined,
                    "reset": [Function],
                    "schemaVis": Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    },
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldError": [Function],
                    "shouldValidate": [Function],
                    "shouldWarn": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {},
                    "warning": undefined,
                    "withRef": true,
                  }
                }
                anyTouched={false}
                array={
                  Object {
                    "insert": [Function],
                    "move": [Function],
                    "pop": [Function],
                    "push": [Function],
                    "remove": [Function],
                    "removeAll": [Function],
                    "shift": [Function],
                    "splice": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                  }
                }
                asyncValidate={[Function]}
                asyncValidating={false}
                autofill={[Function]}
                blur={[Function]}
                bodyProps={
                  Object {
                    "flush": true,
                  }
                }
                change={[Function]}
                classes={
                  Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  }
                }
                clearAsyncError={[Function]}
                clearSubmit={[Function]}
                clearSubmitErrors={[Function]}
                component={[Function]}
                destroy={[Function]}
                dirty={false}
                dispatch={[Function]}
                error={undefined}
                form="TestForm"
                formName="variedArrayCardItem"
                handleSubmit={[Function]}
                initialValues={undefined}
                initialize={[Function]}
                initialized={false}
                invalid={false}
                name="foobar"
                pristine={true}
                pure={true}
                reset={[Function]}
                schemaVis={
                  Object {
                    "components": Object {
                      "CardItem": [Function],
                      "CardWithHeader": [Function],
                      "Color": [Function],
                      "Date": [Function],
                      "DateTime": [Function],
                      "Email": [Function],
                      "ListItemTemplate": [Function],
                      "ModalUniformedArrayCard": [Function],
                      "ModalUniformedArrayInline": [Function],
                      "ModalVariedArrayCard": [Function],
                      "ModalVariedArrayInline": [Function],
                      "Number": [Function],
                      "Password": [Function],
                      "SingleSelect": [Function],
                      "Text": [Function],
                      "TextArea": [Function],
                      "UniformedArrayCard": [Function],
                      "UniformedArrayInline": [Function],
                      "VariedArrayCard": [Function],
                      "VariedArrayInline": [Function],
                    },
                    "prefix": "meta.vis",
                    "schema": Object {
                      "id": "VariedArrayCard",
                      "items": Object {
                        "anyOf": Array [
                          Object {
                            "id": "Bar",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "bar": Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Bar",
                                "type": "string",
                              },
                              "name": Object {
                                "id": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Bar",
                            "type": "object",
                          },
                          Object {
                            "id": "Baz",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "baz": Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Number",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Baz",
                                "type": "number",
                              },
                              "name": Object {
                                "it": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Baz",
                            "type": "object",
                          },
                        ],
                        "id": "FooCard",
                        "meta": Object {
                          "vis": Object {
                            "component": "SingleSelect",
                          },
                        },
                        "title": "Foo Card",
                        "type": "object",
                      },
                      "title": "Varied Array Card",
                      "type": "array",
                    },
                  }
                }
                sheet={
                  StyleSheet {
                    "attached": true,
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "deployed": true,
                    "linked": false,
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "renderer": DomRenderer {
                      "element": <style
                        data-jss=""
                        type="text/css"
                      >
                        
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                      </style>,
                      "getSelector": [Function],
                      "getStyle": [Function],
                      "hasInsertedRules": false,
                      "setSelector": [Function],
                      "setStyle": [Function],
                      "sheet": [Circular],
                    },
                    "rules": RuleList {
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "index": Array [
                        Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        Object {
                          "margin-left": "auto",
                        },
                        Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      ],
                      "map": Object {
                        ".addButton-0-30": Object {
                          "margin-left": "auto",
                        },
                        ".container-0-28": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        ".header-0-29": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        ".headerTitle-0-31": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                        "addButton": Object {
                          "margin-left": "auto",
                        },
                        "container": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        "headerTitle": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      },
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "raw": Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      },
                    },
                  }
                }
                styles={
                  Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  }
                }
                submit={[Function]}
                submitFailed={false}
                submitSucceeded={false}
                submitting={false}
                touch={[Function]}
                triggerSubmit={undefined}
                untouch={[Function]}
                valid={true}
                validate={[Function]}
                warning={undefined}
                withRef={true}
              >
                <ConnectedFieldArray
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "TestForm",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "name": "foobar",
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": undefined,
                      "reset": [Function],
                      "schemaVis": Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      },
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldError": [Function],
                      "shouldValidate": [Function],
                      "shouldWarn": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {},
                      "warning": undefined,
                      "withRef": true,
                    }
                  }
                  anyTouched={false}
                  array={
                    Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    }
                  }
                  arrayInsert={[Function]}
                  arrayMove={[Function]}
                  arrayPop={[Function]}
                  arrayPush={[Function]}
                  arrayRemove={[Function]}
                  arrayRemoveAll={[Function]}
                  arrayShift={[Function]}
                  arraySplice={[Function]}
                  arraySwap={[Function]}
                  arrayUnshift={[Function]}
                  asyncError={undefined}
                  asyncValidate={[Function]}
                  asyncValidating={false}
                  autofill={[Function]}
                  blur={[Function]}
                  bodyProps={
                    Object {
                      "flush": true,
                    }
                  }
                  change={[Function]}
                  classes={
                    Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    }
                  }
                  clearAsyncError={[Function]}
                  clearSubmit={[Function]}
                  clearSubmitErrors={[Function]}
                  component={[Function]}
                  destroy={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  error={undefined}
                  form="TestForm"
                  formName="variedArrayCardItem"
                  handleSubmit={[Function]}
                  initialValues={undefined}
                  initialize={[Function]}
                  initialized={false}
                  invalid={false}
                  length={0}
                  name="foobar"
                  pristine={true}
                  pure={true}
                  rerenderOnEveryChange={false}
                  reset={[Function]}
                  schemaVis={
                    Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    }
                  }
                  sheet={
                    StyleSheet {
                      "attached": true,
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "deployed": true,
                      "linked": false,
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "renderer": DomRenderer {
                        "element": <style
                          data-jss=""
                          type="text/css"
                        >
                          
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                        </style>,
                        "getSelector": [Function],
                        "getStyle": [Function],
                        "hasInsertedRules": false,
                        "setSelector": [Function],
                        "setStyle": [Function],
                        "sheet": [Circular],
                      },
                      "rules": RuleList {
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "index": Array [
                          Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          Object {
                            "margin-left": "auto",
                          },
                          Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        ],
                        "map": Object {
                          ".addButton-0-30": Object {
                            "margin-left": "auto",
                          },
                          ".container-0-28": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          ".header-0-29": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          ".headerTitle-0-31": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                          "addButton": Object {
                            "margin-left": "auto",
                          },
                          "container": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          "headerTitle": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        },
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "raw": Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        },
                      },
                    }
                  }
                  state={undefined}
                  styles={
                    Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    }
                  }
                  submit={[Function]}
                  submitError={undefined}
                  submitFailed={undefined}
                  submitSucceeded={false}
                  submitting={undefined}
                  syncError={undefined}
                  syncWarning={undefined}
                  touch={[Function]}
                  triggerSubmit={undefined}
                  untouch={[Function]}
                  valid={true}
                  validate={[Function]}
                  value={undefined}
                  warning={undefined}
                  withRef={true}
                >
                  <Connect(ModalVariedArray)
                    anyTouched={false}
                    array={
                      Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    asyncValidate={[Function]}
                    asyncValidating={false}
                    autofill={[Function]}
                    blur={[Function]}
                    bodyProps={
                      Object {
                        "flush": true,
                      }
                    }
                    change={[Function]}
                    classes={
                      Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      }
                    }
                    clearAsyncError={[Function]}
                    clearSubmit={[Function]}
                    clearSubmitErrors={[Function]}
                    destroy={[Function]}
                    dispatch={[Function]}
                    error={undefined}
                    fields={
                      Object {
                        "_isFieldArray": true,
                        "forEach": [Function],
                        "get": [Function],
                        "getAll": [Function],
                        "insert": [Function],
                        "length": 0,
                        "map": [Function],
                        "move": [Function],
                        "name": "foobar",
                        "pop": [Function],
                        "push": [Function],
                        "reduce": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    form="TestForm"
                    formName="variedArrayCardItem"
                    handleSubmit={[Function]}
                    initialValues={undefined}
                    initialize={[Function]}
                    initialized={false}
                    invalid={false}
                    meta={
                      Object {
                        "dirty": false,
                        "error": undefined,
                        "form": "TestForm",
                        "invalid": false,
                        "pristine": true,
                        "submitFailed": undefined,
                        "submitting": undefined,
                        "valid": true,
                        "warning": undefined,
                      }
                    }
                    pure={true}
                    reset={[Function]}
                    schemaVis={
                      Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      }
                    }
                    sheet={
                      StyleSheet {
                        "attached": true,
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "deployed": true,
                        "linked": false,
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "renderer": DomRenderer {
                          "element": <style
                            data-jss=""
                            type="text/css"
                          >
                            
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                          </style>,
                          "getSelector": [Function],
                          "getStyle": [Function],
                          "hasInsertedRules": false,
                          "setSelector": [Function],
                          "setStyle": [Function],
                          "sheet": [Circular],
                        },
                        "rules": RuleList {
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "index": Array [
                            Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            Object {
                              "margin-left": "auto",
                            },
                            Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          ],
                          "map": Object {
                            ".addButton-0-30": Object {
                              "margin-left": "auto",
                            },
                            ".container-0-28": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            ".header-0-29": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            ".headerTitle-0-31": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                            "addButton": Object {
                              "margin-left": "auto",
                            },
                            "container": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            "headerTitle": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          },
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "raw": Object {
                            "addButton": Object {
                              "marginLeft": "auto",
                            },
                            "container": Object {
                              "marginBottom": 10,
                              "marginTop": 15,
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": 5,
                              "paddingLeft": 10,
                            },
                            "headerTitle": Object {
                              "marginBottom": "auto",
                              "marginTop": "auto",
                            },
                          },
                        },
                      }
                    }
                    styles={
                      Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      }
                    }
                    submit={[Function]}
                    submitSucceeded={false}
                    touch={[Function]}
                    triggerSubmit={undefined}
                    untouch={[Function]}
                    valid={true}
                    warning={undefined}
                  >
                    <ModalVariedArray
                      addBtnProps={Object {}}
                      anyTouched={false}
                      array={
                        Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "splice": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      asyncValidate={[Function]}
                      asyncValidating={false}
                      autofill={[Function]}
                      blur={[Function]}
                      bodyProps={
                        Object {
                          "flush": true,
                        }
                      }
                      bodyTag={[Function]}
                      change={[Function]}
                      changeForm={[Function]}
                      classes={
                        Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        }
                      }
                      clearAsyncError={[Function]}
                      clearSubmit={[Function]}
                      clearSubmitErrors={[Function]}
                      dataSchemaPrefix="meta.data"
                      destroy={[Function]}
                      destroyForm={[Function]}
                      dispatch={[Function]}
                      error={undefined}
                      fields={
                        Object {
                          "_isFieldArray": true,
                          "forEach": [Function],
                          "get": [Function],
                          "getAll": [Function],
                          "insert": [Function],
                          "length": 0,
                          "map": [Function],
                          "move": [Function],
                          "name": "foobar",
                          "pop": [Function],
                          "push": [Function],
                          "reduce": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      form="TestForm"
                      formName="variedArrayCardItem"
                      handleSubmit={[Function]}
                      headerTag={[Function]}
                      initialValues={undefined}
                      initialize={[Function]}
                      initialized={false}
                      invalid={false}
                      items={undefined}
                      meta={
                        Object {
                          "dirty": false,
                          "error": undefined,
                          "form": "TestForm",
                          "invalid": false,
                          "pristine": true,
                          "submitFailed": undefined,
                          "submitting": undefined,
                          "valid": true,
                          "warning": undefined,
                        }
                      }
                      pure={true}
                      required={false}
                      reset={[Function]}
                      schemaVis={
                        Object {
                          "components": Object {
                            "CardItem": [Function],
                            "CardWithHeader": [Function],
                            "Color": [Function],
                            "Date": [Function],
                            "DateTime": [Function],
                            "Email": [Function],
                            "ListItemTemplate": [Function],
                            "ModalUniformedArrayCard": [Function],
                            "ModalUniformedArrayInline": [Function],
                            "ModalVariedArrayCard": [Function],
                            "ModalVariedArrayInline": [Function],
                            "Number": [Function],
                            "Password": [Function],
                            "SingleSelect": [Function],
                            "Text": [Function],
                            "TextArea": [Function],
                            "UniformedArrayCard": [Function],
                            "UniformedArrayInline": [Function],
                            "VariedArrayCard": [Function],
                            "VariedArrayInline": [Function],
                          },
                          "prefix": "meta.vis",
                          "schema": Object {
                            "id": "VariedArrayCard",
                            "items": Object {
                              "anyOf": Array [
                                Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "bar": Object {
                                      "id": "Bar",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Bar",
                                      "type": "string",
                                    },
                                    "name": Object {
                                      "id": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "object",
                                },
                                Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "baz": Object {
                                      "id": "Baz",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Number",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Baz",
                                      "type": "number",
                                    },
                                    "name": Object {
                                      "it": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "object",
                                },
                              ],
                              "id": "FooCard",
                              "meta": Object {
                                "vis": Object {
                                  "component": "SingleSelect",
                                },
                              },
                              "title": "Foo Card",
                              "type": "object",
                            },
                            "title": "Varied Array Card",
                            "type": "array",
                          },
                        }
                      }
                      selectInputProps={Object {}}
                      sheet={
                        StyleSheet {
                          "attached": true,
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "deployed": true,
                          "linked": false,
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "renderer": DomRenderer {
                            "element": <style
                              data-jss=""
                              type="text/css"
                            >
                              
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                            </style>,
                            "getSelector": [Function],
                            "getStyle": [Function],
                            "hasInsertedRules": false,
                            "setSelector": [Function],
                            "setStyle": [Function],
                            "sheet": [Circular],
                          },
                          "rules": RuleList {
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "index": Array [
                              Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              Object {
                                "margin-left": "auto",
                              },
                              Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            ],
                            "map": Object {
                              ".addButton-0-30": Object {
                                "margin-left": "auto",
                              },
                              ".container-0-28": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              ".header-0-29": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              ".headerTitle-0-31": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                              "addButton": Object {
                                "margin-left": "auto",
                              },
                              "container": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              "headerTitle": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            },
                            "options": Object {
                              "Renderer": [Function],
                              "classes": Object {
                                "addButton": "addButton-0-30",
                                "container": "container-0-28",
                                "header": "header-0-29",
                                "headerTitle": "headerTitle-0-31",
                              },
                              "generateClassName": [Function],
                              "index": 0,
                              "insertionPoint": undefined,
                              "jss": Jss {
                                "generateClassName": [Function],
                                "options": Object {
                                  "Renderer": [Function],
                                  "createGenerateClassName": [Function],
                                  "plugins": Array [
                                    Object {
                                      "onCreateRule": [Function],
                                      "onProcessRule": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessRule": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                  ],
                                },
                                "plugins": PluginsRegistry {
                                  "hooks": Object {
                                    "onChangeValue": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onCreateRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessRule": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessSheet": Array [],
                                    "onProcessStyle": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                },
                                "version": "8.1.0",
                              },
                              "parent": [Circular],
                              "sheet": [Circular],
                            },
                            "raw": Object {
                              "addButton": Object {
                                "marginLeft": "auto",
                              },
                              "container": Object {
                                "marginBottom": 10,
                                "marginTop": 15,
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": 5,
                                "paddingLeft": 10,
                              },
                              "headerTitle": Object {
                                "marginBottom": "auto",
                                "marginTop": "auto",
                              },
                            },
                          },
                        }
                      }
                      styles={
                        Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        }
                      }
                      submit={[Function]}
                      submitForm={[Function]}
                      submitSucceeded={false}
                      tag={[Function]}
                      touch={[Function]}
                      triggerSubmit={undefined}
                      untouch={[Function]}
                      valid={true}
                      warning={undefined}
                    >
                      <div>
                        <Card
                          className="container-0-28"
                          tag="div"
                        >
                          <div
                            className="container-0-28 card"
                          >
                            <CardHeader
                              className="header-0-29"
                              tag="div"
                            >
                              <div
                                className="header-0-29 card-header"
                              >
                                <div
                                  className="headerTitle-0-31"
                                >
                                  Varied Array Card
                                </div>
                                <div
                                  className="addButton-0-30"
                                >
                                  <Button
                                    color="primary"
                                    onClick={[Function]}
                                    size="sm"
                                    tag="button"
                                  >
                                    <button
                                      className="btn btn-primary btn-sm"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Add
                                    </button>
                                  </Button>
                                </div>
                              </div>
                            </CardHeader>
                            <ListGroup
                              className={undefined}
                              flush={true}
                              tag="ul"
                            >
                              <ul
                                className="list-group list-group-flush"
                              />
                            </ListGroup>
                          </div>
                        </Card>
                        <Modal
                          autoFocus={true}
                          backdrop={true}
                          backdropTransition={
                            Object {
                              "mountOnEnter": true,
                              "timeout": 150,
                            }
                          }
                          fade={true}
                          isOpen={true}
                          keyboard={true}
                          modalTransition={
                            Object {
                              "timeout": 300,
                            }
                          }
                          onClosed={[Function]}
                          onOpened={[Function]}
                          role="dialog"
                          toggle={[Function]}
                          zIndex={1050}
                        />
                      </div>
                    </ModalVariedArray>
                  </Connect(ModalVariedArray)>
                </ConnectedFieldArray>
              </Connect(ConnectedFieldArray)>
            </FieldArray>
          </ModalVariedArrayCard>
        </StyledComponent>
      </Form(StyledComponent)>
    </Connect(Form(StyledComponent))>
  </ReduxForm>
</Provider>
`;

exports[`Render Varied Array Fields should add item to array, modify it, and remove it 3`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    form="TestForm"
    name="foobar"
    schemaVis={
      Object {
        "components": Object {
          "CardItem": [Function],
          "CardWithHeader": [Function],
          "Color": [Function],
          "Date": [Function],
          "DateTime": [Function],
          "Email": [Function],
          "ListItemTemplate": [Function],
          "ModalUniformedArrayCard": [Function],
          "ModalUniformedArrayInline": [Function],
          "ModalVariedArrayCard": [Function],
          "ModalVariedArrayInline": [Function],
          "Number": [Function],
          "Password": [Function],
          "SingleSelect": [Function],
          "Text": [Function],
          "TextArea": [Function],
          "UniformedArrayCard": [Function],
          "UniformedArrayInline": [Function],
          "VariedArrayCard": [Function],
          "VariedArrayInline": [Function],
        },
        "prefix": "meta.vis",
        "schema": Object {
          "id": "VariedArrayCard",
          "items": Object {
            "anyOf": Array [
              Object {
                "id": "Bar",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "bar": Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 2,
                      },
                    },
                    "title": "Bar",
                    "type": "string",
                  },
                  "name": Object {
                    "id": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Bar",
                "type": "object",
              },
              Object {
                "id": "Baz",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "baz": Object {
                    "id": "Baz",
                    "meta": Object {
                      "vis": Object {
                        "component": "Number",
                        "ordinal": 2,
                      },
                    },
                    "title": "Baz",
                    "type": "number",
                  },
                  "name": Object {
                    "it": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Baz",
                "type": "object",
              },
            ],
            "id": "FooCard",
            "meta": Object {
              "vis": Object {
                "component": "SingleSelect",
              },
            },
            "title": "Foo Card",
            "type": "object",
          },
          "title": "Varied Array Card",
          "type": "array",
        },
      }
    }
  >
    <Connect(Form(StyledComponent))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="TestForm"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      name="foobar"
      persistentSubmitErrors={false}
      pure={true}
      schemaVis={
        Object {
          "components": Object {
            "CardItem": [Function],
            "CardWithHeader": [Function],
            "Color": [Function],
            "Date": [Function],
            "DateTime": [Function],
            "Email": [Function],
            "ListItemTemplate": [Function],
            "ModalUniformedArrayCard": [Function],
            "ModalUniformedArrayInline": [Function],
            "ModalVariedArrayCard": [Function],
            "ModalVariedArrayInline": [Function],
            "Number": [Function],
            "Password": [Function],
            "SingleSelect": [Function],
            "Text": [Function],
            "TextArea": [Function],
            "UniformedArrayCard": [Function],
            "UniformedArrayInline": [Function],
            "VariedArrayCard": [Function],
            "VariedArrayInline": [Function],
          },
          "prefix": "meta.vis",
          "schema": Object {
            "id": "VariedArrayCard",
            "items": Object {
              "anyOf": Array [
                Object {
                  "id": "Bar",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "bar": Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 2,
                        },
                      },
                      "title": "Bar",
                      "type": "string",
                    },
                    "name": Object {
                      "id": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Bar",
                  "type": "object",
                },
                Object {
                  "id": "Baz",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "baz": Object {
                      "id": "Baz",
                      "meta": Object {
                        "vis": Object {
                          "component": "Number",
                          "ordinal": 2,
                        },
                      },
                      "title": "Baz",
                      "type": "number",
                    },
                    "name": Object {
                      "it": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Baz",
                  "type": "object",
                },
              ],
              "id": "FooCard",
              "meta": Object {
                "vis": Object {
                  "component": "SingleSelect",
                },
              },
              "title": "Foo Card",
              "type": "object",
            },
            "title": "Varied Array Card",
            "type": "array",
          },
        }
      }
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      withRef={true}
    >
      <Form(StyledComponent)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncErrors={undefined}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={true}
        dispatch={[Function]}
        enableReinitialize={false}
        error={undefined}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="TestForm"
        getFormState={[Function]}
        initialValues={undefined}
        initialize={[Function]}
        initialized={false}
        invalid={false}
        keepDirtyOnReinitialize={false}
        name="foobar"
        persistentSubmitErrors={false}
        pristine={false}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "foobar": Object {
              "count": 1,
              "name": "foobar",
              "type": "FieldArray",
            },
          }
        }
        reset={[Function]}
        schemaVis={
          Object {
            "components": Object {
              "CardItem": [Function],
              "CardWithHeader": [Function],
              "Color": [Function],
              "Date": [Function],
              "DateTime": [Function],
              "Email": [Function],
              "ListItemTemplate": [Function],
              "ModalUniformedArrayCard": [Function],
              "ModalUniformedArrayInline": [Function],
              "ModalVariedArrayCard": [Function],
              "ModalVariedArrayInline": [Function],
              "Number": [Function],
              "Password": [Function],
              "SingleSelect": [Function],
              "Text": [Function],
              "TextArea": [Function],
              "UniformedArrayCard": [Function],
              "UniformedArrayInline": [Function],
              "VariedArrayCard": [Function],
              "VariedArrayInline": [Function],
            },
            "prefix": "meta.vis",
            "schema": Object {
              "id": "VariedArrayCard",
              "items": Object {
                "anyOf": Array [
                  Object {
                    "id": "Bar",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "bar": Object {
                        "id": "Bar",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 2,
                          },
                        },
                        "title": "Bar",
                        "type": "string",
                      },
                      "name": Object {
                        "id": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Bar",
                    "type": "object",
                  },
                  Object {
                    "id": "Baz",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "baz": Object {
                        "id": "Baz",
                        "meta": Object {
                          "vis": Object {
                            "component": "Number",
                            "ordinal": 2,
                          },
                        },
                        "title": "Baz",
                        "type": "number",
                      },
                      "name": Object {
                        "it": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Baz",
                    "type": "object",
                  },
                ],
                "id": "FooCard",
                "meta": Object {
                  "vis": Object {
                    "component": "SingleSelect",
                  },
                },
                "title": "Foo Card",
                "type": "object",
              },
              "title": "Varied Array Card",
              "type": "array",
            },
          }
        }
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldError={[Function]}
        shouldValidate={[Function]}
        shouldWarn={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={Object {}}
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        triggerSubmit={undefined}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={true}
        validExceptSubmit={true}
        values={
          Object {
            "foobar": Array [
              Object {
                "bar": "bar",
                "name": "name",
              },
            ],
          }
        }
        warning={undefined}
        withRef={true}
      >
        <StyledComponent
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={true}
          dispatch={[Function]}
          error={undefined}
          form="TestForm"
          handleSubmit={[Function]}
          initialValues={undefined}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          name="foobar"
          pristine={false}
          pure={true}
          reset={[Function]}
          schemaVis={
            Object {
              "components": Object {
                "CardItem": [Function],
                "CardWithHeader": [Function],
                "Color": [Function],
                "Date": [Function],
                "DateTime": [Function],
                "Email": [Function],
                "ListItemTemplate": [Function],
                "ModalUniformedArrayCard": [Function],
                "ModalUniformedArrayInline": [Function],
                "ModalVariedArrayCard": [Function],
                "ModalVariedArrayInline": [Function],
                "Number": [Function],
                "Password": [Function],
                "SingleSelect": [Function],
                "Text": [Function],
                "TextArea": [Function],
                "UniformedArrayCard": [Function],
                "UniformedArrayInline": [Function],
                "VariedArrayCard": [Function],
                "VariedArrayInline": [Function],
              },
              "prefix": "meta.vis",
              "schema": Object {
                "id": "VariedArrayCard",
                "items": Object {
                  "anyOf": Array [
                    Object {
                      "id": "Bar",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "bar": Object {
                          "id": "Bar",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 2,
                            },
                          },
                          "title": "Bar",
                          "type": "string",
                        },
                        "name": Object {
                          "id": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Bar",
                      "type": "object",
                    },
                    Object {
                      "id": "Baz",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "baz": Object {
                          "id": "Baz",
                          "meta": Object {
                            "vis": Object {
                              "component": "Number",
                              "ordinal": 2,
                            },
                          },
                          "title": "Baz",
                          "type": "number",
                        },
                        "name": Object {
                          "it": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Baz",
                      "type": "object",
                    },
                  ],
                  "id": "FooCard",
                  "meta": Object {
                    "vis": Object {
                      "component": "SingleSelect",
                    },
                  },
                  "title": "Foo Card",
                  "type": "object",
                },
                "title": "Varied Array Card",
                "type": "array",
              },
            }
          }
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          triggerSubmit={undefined}
          untouch={[Function]}
          valid={true}
          warning={undefined}
          withRef={true}
        >
          <ModalVariedArrayCard
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            classes={
              Object {
                "addButton": "addButton-0-30",
                "container": "container-0-28",
                "header": "header-0-29",
                "headerTitle": "headerTitle-0-31",
              }
            }
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={true}
            dispatch={[Function]}
            error={undefined}
            form="TestForm"
            handleSubmit={[Function]}
            initialValues={undefined}
            initialize={[Function]}
            initialized={false}
            invalid={false}
            name="foobar"
            pristine={false}
            pure={true}
            reset={[Function]}
            schemaVis={
              Object {
                "components": Object {
                  "CardItem": [Function],
                  "CardWithHeader": [Function],
                  "Color": [Function],
                  "Date": [Function],
                  "DateTime": [Function],
                  "Email": [Function],
                  "ListItemTemplate": [Function],
                  "ModalUniformedArrayCard": [Function],
                  "ModalUniformedArrayInline": [Function],
                  "ModalVariedArrayCard": [Function],
                  "ModalVariedArrayInline": [Function],
                  "Number": [Function],
                  "Password": [Function],
                  "SingleSelect": [Function],
                  "Text": [Function],
                  "TextArea": [Function],
                  "UniformedArrayCard": [Function],
                  "UniformedArrayInline": [Function],
                  "VariedArrayCard": [Function],
                  "VariedArrayInline": [Function],
                },
                "prefix": "meta.vis",
                "schema": Object {
                  "id": "VariedArrayCard",
                  "items": Object {
                    "anyOf": Array [
                      Object {
                        "id": "Bar",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "bar": Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 2,
                              },
                            },
                            "title": "Bar",
                            "type": "string",
                          },
                          "name": Object {
                            "id": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Bar",
                        "type": "object",
                      },
                      Object {
                        "id": "Baz",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "baz": Object {
                            "id": "Baz",
                            "meta": Object {
                              "vis": Object {
                                "component": "Number",
                                "ordinal": 2,
                              },
                            },
                            "title": "Baz",
                            "type": "number",
                          },
                          "name": Object {
                            "it": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Baz",
                        "type": "object",
                      },
                    ],
                    "id": "FooCard",
                    "meta": Object {
                      "vis": Object {
                        "component": "SingleSelect",
                      },
                    },
                    "title": "Foo Card",
                    "type": "object",
                  },
                  "title": "Varied Array Card",
                  "type": "array",
                },
              }
            }
            sheet={
              StyleSheet {
                "attached": true,
                "classes": Object {
                  "addButton": "addButton-0-30",
                  "container": "container-0-28",
                  "header": "header-0-29",
                  "headerTitle": "headerTitle-0-31",
                },
                "deployed": true,
                "linked": false,
                "options": Object {
                  "Renderer": [Function],
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "generateClassName": [Function],
                  "index": 0,
                  "insertionPoint": undefined,
                  "jss": Jss {
                    "generateClassName": [Function],
                    "options": Object {
                      "Renderer": [Function],
                      "createGenerateClassName": [Function],
                      "plugins": Array [
                        Object {
                          "onCreateRule": [Function],
                          "onProcessRule": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessRule": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                      ],
                    },
                    "plugins": PluginsRegistry {
                      "hooks": Object {
                        "onChangeValue": Array [
                          [Function],
                          [Function],
                        ],
                        "onCreateRule": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "onProcessRule": Array [
                          [Function],
                          [Function],
                        ],
                        "onProcessSheet": Array [],
                        "onProcessStyle": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                    },
                    "version": "8.1.0",
                  },
                  "parent": [Circular],
                  "sheet": [Circular],
                },
                "renderer": DomRenderer {
                  "element": <style
                    data-jss=""
                    type="text/css"
                  >
                    
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                  </style>,
                  "getSelector": [Function],
                  "getStyle": [Function],
                  "hasInsertedRules": false,
                  "setSelector": [Function],
                  "setStyle": [Function],
                  "sheet": [Circular],
                },
                "rules": RuleList {
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "index": Array [
                    Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    Object {
                      "margin-left": "auto",
                    },
                    Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  ],
                  "map": Object {
                    ".addButton-0-30": Object {
                      "margin-left": "auto",
                    },
                    ".container-0-28": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    ".header-0-29": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    ".headerTitle-0-31": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                    "addButton": Object {
                      "margin-left": "auto",
                    },
                    "container": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    "headerTitle": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  },
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "raw": Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  },
                },
              }
            }
            styles={
              Object {
                "addButton": Object {
                  "marginLeft": "auto",
                },
                "container": Object {
                  "marginBottom": 10,
                  "marginTop": 15,
                },
                "header": Object {
                  "display": "inline-flex",
                  "padding": 5,
                  "paddingLeft": 10,
                },
                "headerTitle": Object {
                  "marginBottom": "auto",
                  "marginTop": "auto",
                },
              }
            }
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            touch={[Function]}
            triggerSubmit={undefined}
            untouch={[Function]}
            valid={true}
            warning={undefined}
            withRef={true}
          >
            <FieldArray
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              asyncValidate={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              bodyProps={
                Object {
                  "flush": true,
                }
              }
              change={[Function]}
              classes={
                Object {
                  "addButton": "addButton-0-30",
                  "container": "container-0-28",
                  "header": "header-0-29",
                  "headerTitle": "headerTitle-0-31",
                }
              }
              clearAsyncError={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              component={[Function]}
              destroy={[Function]}
              dirty={true}
              dispatch={[Function]}
              error={undefined}
              form="TestForm"
              formName="variedArrayCardItem"
              handleSubmit={[Function]}
              initialValues={undefined}
              initialize={[Function]}
              initialized={false}
              invalid={false}
              name="foobar"
              pristine={false}
              pure={true}
              reset={[Function]}
              schemaVis={
                Object {
                  "components": Object {
                    "CardItem": [Function],
                    "CardWithHeader": [Function],
                    "Color": [Function],
                    "Date": [Function],
                    "DateTime": [Function],
                    "Email": [Function],
                    "ListItemTemplate": [Function],
                    "ModalUniformedArrayCard": [Function],
                    "ModalUniformedArrayInline": [Function],
                    "ModalVariedArrayCard": [Function],
                    "ModalVariedArrayInline": [Function],
                    "Number": [Function],
                    "Password": [Function],
                    "SingleSelect": [Function],
                    "Text": [Function],
                    "TextArea": [Function],
                    "UniformedArrayCard": [Function],
                    "UniformedArrayInline": [Function],
                    "VariedArrayCard": [Function],
                    "VariedArrayInline": [Function],
                  },
                  "prefix": "meta.vis",
                  "schema": Object {
                    "id": "VariedArrayCard",
                    "items": Object {
                      "anyOf": Array [
                        Object {
                          "id": "Bar",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "bar": Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Bar",
                              "type": "string",
                            },
                            "name": Object {
                              "id": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Bar",
                          "type": "object",
                        },
                        Object {
                          "id": "Baz",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "baz": Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Number",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Baz",
                              "type": "number",
                            },
                            "name": Object {
                              "it": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Baz",
                          "type": "object",
                        },
                      ],
                      "id": "FooCard",
                      "meta": Object {
                        "vis": Object {
                          "component": "SingleSelect",
                        },
                      },
                      "title": "Foo Card",
                      "type": "object",
                    },
                    "title": "Varied Array Card",
                    "type": "array",
                  },
                }
              }
              sheet={
                StyleSheet {
                  "attached": true,
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "deployed": true,
                  "linked": false,
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "renderer": DomRenderer {
                    "element": <style
                      data-jss=""
                      type="text/css"
                    >
                      
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                    </style>,
                    "getSelector": [Function],
                    "getStyle": [Function],
                    "hasInsertedRules": false,
                    "setSelector": [Function],
                    "setStyle": [Function],
                    "sheet": [Circular],
                  },
                  "rules": RuleList {
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "index": Array [
                      Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      Object {
                        "margin-left": "auto",
                      },
                      Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    ],
                    "map": Object {
                      ".addButton-0-30": Object {
                        "margin-left": "auto",
                      },
                      ".container-0-28": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      ".header-0-29": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      ".headerTitle-0-31": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                      "addButton": Object {
                        "margin-left": "auto",
                      },
                      "container": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      "headerTitle": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    },
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "raw": Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    },
                  },
                }
              }
              styles={
                Object {
                  "addButton": Object {
                    "marginLeft": "auto",
                  },
                  "container": Object {
                    "marginBottom": 10,
                    "marginTop": 15,
                  },
                  "header": Object {
                    "display": "inline-flex",
                    "padding": 5,
                    "paddingLeft": 10,
                  },
                  "headerTitle": Object {
                    "marginBottom": "auto",
                    "marginTop": "auto",
                  },
                }
              }
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              touch={[Function]}
              triggerSubmit={undefined}
              untouch={[Function]}
              valid={true}
              validate={[Function]}
              warning={undefined}
              withRef={true}
            >
              <Connect(ConnectedFieldArray)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": true,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "TestForm",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "name": "foobar",
                    "persistentSubmitErrors": false,
                    "pristine": false,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "foobar": Object {
                        "count": 1,
                        "name": "foobar",
                        "type": "FieldArray",
                      },
                    },
                    "reset": [Function],
                    "schemaVis": Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    },
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldError": [Function],
                    "shouldValidate": [Function],
                    "shouldWarn": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {
                      "foobar": Array [
                        Object {
                          "bar": "bar",
                          "name": "name",
                        },
                      ],
                    },
                    "warning": undefined,
                    "withRef": true,
                  }
                }
                anyTouched={false}
                array={
                  Object {
                    "insert": [Function],
                    "move": [Function],
                    "pop": [Function],
                    "push": [Function],
                    "remove": [Function],
                    "removeAll": [Function],
                    "shift": [Function],
                    "splice": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                  }
                }
                asyncValidate={[Function]}
                asyncValidating={false}
                autofill={[Function]}
                blur={[Function]}
                bodyProps={
                  Object {
                    "flush": true,
                  }
                }
                change={[Function]}
                classes={
                  Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  }
                }
                clearAsyncError={[Function]}
                clearSubmit={[Function]}
                clearSubmitErrors={[Function]}
                component={[Function]}
                destroy={[Function]}
                dirty={true}
                dispatch={[Function]}
                error={undefined}
                form="TestForm"
                formName="variedArrayCardItem"
                handleSubmit={[Function]}
                initialValues={undefined}
                initialize={[Function]}
                initialized={false}
                invalid={false}
                name="foobar"
                pristine={false}
                pure={true}
                reset={[Function]}
                schemaVis={
                  Object {
                    "components": Object {
                      "CardItem": [Function],
                      "CardWithHeader": [Function],
                      "Color": [Function],
                      "Date": [Function],
                      "DateTime": [Function],
                      "Email": [Function],
                      "ListItemTemplate": [Function],
                      "ModalUniformedArrayCard": [Function],
                      "ModalUniformedArrayInline": [Function],
                      "ModalVariedArrayCard": [Function],
                      "ModalVariedArrayInline": [Function],
                      "Number": [Function],
                      "Password": [Function],
                      "SingleSelect": [Function],
                      "Text": [Function],
                      "TextArea": [Function],
                      "UniformedArrayCard": [Function],
                      "UniformedArrayInline": [Function],
                      "VariedArrayCard": [Function],
                      "VariedArrayInline": [Function],
                    },
                    "prefix": "meta.vis",
                    "schema": Object {
                      "id": "VariedArrayCard",
                      "items": Object {
                        "anyOf": Array [
                          Object {
                            "id": "Bar",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "bar": Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Bar",
                                "type": "string",
                              },
                              "name": Object {
                                "id": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Bar",
                            "type": "object",
                          },
                          Object {
                            "id": "Baz",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "baz": Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Number",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Baz",
                                "type": "number",
                              },
                              "name": Object {
                                "it": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Baz",
                            "type": "object",
                          },
                        ],
                        "id": "FooCard",
                        "meta": Object {
                          "vis": Object {
                            "component": "SingleSelect",
                          },
                        },
                        "title": "Foo Card",
                        "type": "object",
                      },
                      "title": "Varied Array Card",
                      "type": "array",
                    },
                  }
                }
                sheet={
                  StyleSheet {
                    "attached": true,
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "deployed": true,
                    "linked": false,
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "renderer": DomRenderer {
                      "element": <style
                        data-jss=""
                        type="text/css"
                      >
                        
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                      </style>,
                      "getSelector": [Function],
                      "getStyle": [Function],
                      "hasInsertedRules": false,
                      "setSelector": [Function],
                      "setStyle": [Function],
                      "sheet": [Circular],
                    },
                    "rules": RuleList {
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "index": Array [
                        Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        Object {
                          "margin-left": "auto",
                        },
                        Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      ],
                      "map": Object {
                        ".addButton-0-30": Object {
                          "margin-left": "auto",
                        },
                        ".container-0-28": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        ".header-0-29": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        ".headerTitle-0-31": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                        "addButton": Object {
                          "margin-left": "auto",
                        },
                        "container": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        "headerTitle": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      },
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "raw": Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      },
                    },
                  }
                }
                styles={
                  Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  }
                }
                submit={[Function]}
                submitFailed={false}
                submitSucceeded={false}
                submitting={false}
                touch={[Function]}
                triggerSubmit={undefined}
                untouch={[Function]}
                valid={true}
                validate={[Function]}
                warning={undefined}
                withRef={true}
              >
                <ConnectedFieldArray
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": true,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "TestForm",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "name": "foobar",
                      "persistentSubmitErrors": false,
                      "pristine": false,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "foobar": Object {
                          "count": 1,
                          "name": "foobar",
                          "type": "FieldArray",
                        },
                      },
                      "reset": [Function],
                      "schemaVis": Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      },
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldError": [Function],
                      "shouldValidate": [Function],
                      "shouldWarn": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {
                        "foobar": Array [
                          Object {
                            "bar": "bar",
                            "name": "name",
                          },
                        ],
                      },
                      "warning": undefined,
                      "withRef": true,
                    }
                  }
                  anyTouched={false}
                  array={
                    Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    }
                  }
                  arrayInsert={[Function]}
                  arrayMove={[Function]}
                  arrayPop={[Function]}
                  arrayPush={[Function]}
                  arrayRemove={[Function]}
                  arrayRemoveAll={[Function]}
                  arrayShift={[Function]}
                  arraySplice={[Function]}
                  arraySwap={[Function]}
                  arrayUnshift={[Function]}
                  asyncError={undefined}
                  asyncValidate={[Function]}
                  asyncValidating={false}
                  autofill={[Function]}
                  blur={[Function]}
                  bodyProps={
                    Object {
                      "flush": true,
                    }
                  }
                  change={[Function]}
                  classes={
                    Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    }
                  }
                  clearAsyncError={[Function]}
                  clearSubmit={[Function]}
                  clearSubmitErrors={[Function]}
                  component={[Function]}
                  destroy={[Function]}
                  dirty={true}
                  dispatch={[Function]}
                  error={undefined}
                  form="TestForm"
                  formName="variedArrayCardItem"
                  handleSubmit={[Function]}
                  initialValues={undefined}
                  initialize={[Function]}
                  initialized={false}
                  invalid={false}
                  length={1}
                  name="foobar"
                  pristine={false}
                  pure={true}
                  rerenderOnEveryChange={false}
                  reset={[Function]}
                  schemaVis={
                    Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    }
                  }
                  sheet={
                    StyleSheet {
                      "attached": true,
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "deployed": true,
                      "linked": false,
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "renderer": DomRenderer {
                        "element": <style
                          data-jss=""
                          type="text/css"
                        >
                          
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                        </style>,
                        "getSelector": [Function],
                        "getStyle": [Function],
                        "hasInsertedRules": false,
                        "setSelector": [Function],
                        "setStyle": [Function],
                        "sheet": [Circular],
                      },
                      "rules": RuleList {
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "index": Array [
                          Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          Object {
                            "margin-left": "auto",
                          },
                          Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        ],
                        "map": Object {
                          ".addButton-0-30": Object {
                            "margin-left": "auto",
                          },
                          ".container-0-28": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          ".header-0-29": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          ".headerTitle-0-31": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                          "addButton": Object {
                            "margin-left": "auto",
                          },
                          "container": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          "headerTitle": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        },
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "raw": Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        },
                      },
                    }
                  }
                  state={undefined}
                  styles={
                    Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    }
                  }
                  submit={[Function]}
                  submitError={undefined}
                  submitFailed={undefined}
                  submitSucceeded={false}
                  submitting={undefined}
                  syncError={undefined}
                  syncWarning={undefined}
                  touch={[Function]}
                  triggerSubmit={undefined}
                  untouch={[Function]}
                  valid={true}
                  validate={[Function]}
                  value={
                    Array [
                      Object {
                        "bar": "bar",
                        "name": "name",
                      },
                    ]
                  }
                  warning={undefined}
                  withRef={true}
                >
                  <Connect(ModalVariedArray)
                    anyTouched={false}
                    array={
                      Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    asyncValidate={[Function]}
                    asyncValidating={false}
                    autofill={[Function]}
                    blur={[Function]}
                    bodyProps={
                      Object {
                        "flush": true,
                      }
                    }
                    change={[Function]}
                    classes={
                      Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      }
                    }
                    clearAsyncError={[Function]}
                    clearSubmit={[Function]}
                    clearSubmitErrors={[Function]}
                    destroy={[Function]}
                    dispatch={[Function]}
                    error={undefined}
                    fields={
                      Object {
                        "_isFieldArray": true,
                        "forEach": [Function],
                        "get": [Function],
                        "getAll": [Function],
                        "insert": [Function],
                        "length": 1,
                        "map": [Function],
                        "move": [Function],
                        "name": "foobar",
                        "pop": [Function],
                        "push": [Function],
                        "reduce": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    form="TestForm"
                    formName="variedArrayCardItem"
                    handleSubmit={[Function]}
                    initialValues={undefined}
                    initialize={[Function]}
                    initialized={false}
                    invalid={false}
                    meta={
                      Object {
                        "dirty": true,
                        "error": undefined,
                        "form": "TestForm",
                        "invalid": false,
                        "pristine": false,
                        "submitFailed": undefined,
                        "submitting": undefined,
                        "valid": true,
                        "warning": undefined,
                      }
                    }
                    pure={true}
                    reset={[Function]}
                    schemaVis={
                      Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      }
                    }
                    sheet={
                      StyleSheet {
                        "attached": true,
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "deployed": true,
                        "linked": false,
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "renderer": DomRenderer {
                          "element": <style
                            data-jss=""
                            type="text/css"
                          >
                            
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                          </style>,
                          "getSelector": [Function],
                          "getStyle": [Function],
                          "hasInsertedRules": false,
                          "setSelector": [Function],
                          "setStyle": [Function],
                          "sheet": [Circular],
                        },
                        "rules": RuleList {
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "index": Array [
                            Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            Object {
                              "margin-left": "auto",
                            },
                            Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          ],
                          "map": Object {
                            ".addButton-0-30": Object {
                              "margin-left": "auto",
                            },
                            ".container-0-28": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            ".header-0-29": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            ".headerTitle-0-31": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                            "addButton": Object {
                              "margin-left": "auto",
                            },
                            "container": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            "headerTitle": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          },
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "raw": Object {
                            "addButton": Object {
                              "marginLeft": "auto",
                            },
                            "container": Object {
                              "marginBottom": 10,
                              "marginTop": 15,
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": 5,
                              "paddingLeft": 10,
                            },
                            "headerTitle": Object {
                              "marginBottom": "auto",
                              "marginTop": "auto",
                            },
                          },
                        },
                      }
                    }
                    styles={
                      Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      }
                    }
                    submit={[Function]}
                    submitSucceeded={false}
                    touch={[Function]}
                    triggerSubmit={undefined}
                    untouch={[Function]}
                    valid={true}
                    warning={undefined}
                  >
                    <ModalVariedArray
                      addBtnProps={Object {}}
                      anyTouched={false}
                      array={
                        Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "splice": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      asyncValidate={[Function]}
                      asyncValidating={false}
                      autofill={[Function]}
                      blur={[Function]}
                      bodyProps={
                        Object {
                          "flush": true,
                        }
                      }
                      bodyTag={[Function]}
                      change={[Function]}
                      changeForm={[Function]}
                      classes={
                        Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        }
                      }
                      clearAsyncError={[Function]}
                      clearSubmit={[Function]}
                      clearSubmitErrors={[Function]}
                      dataSchemaPrefix="meta.data"
                      destroy={[Function]}
                      destroyForm={[Function]}
                      dispatch={[Function]}
                      error={undefined}
                      fields={
                        Object {
                          "_isFieldArray": true,
                          "forEach": [Function],
                          "get": [Function],
                          "getAll": [Function],
                          "insert": [Function],
                          "length": 1,
                          "map": [Function],
                          "move": [Function],
                          "name": "foobar",
                          "pop": [Function],
                          "push": [Function],
                          "reduce": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      form="TestForm"
                      formName="variedArrayCardItem"
                      handleSubmit={[Function]}
                      headerTag={[Function]}
                      initialValues={undefined}
                      initialize={[Function]}
                      initialized={false}
                      invalid={false}
                      items={
                        Array [
                          Object {
                            "bar": "bar",
                            "name": "name",
                          },
                        ]
                      }
                      meta={
                        Object {
                          "dirty": true,
                          "error": undefined,
                          "form": "TestForm",
                          "invalid": false,
                          "pristine": false,
                          "submitFailed": undefined,
                          "submitting": undefined,
                          "valid": true,
                          "warning": undefined,
                        }
                      }
                      pure={true}
                      required={false}
                      reset={[Function]}
                      schemaVis={
                        Object {
                          "components": Object {
                            "CardItem": [Function],
                            "CardWithHeader": [Function],
                            "Color": [Function],
                            "Date": [Function],
                            "DateTime": [Function],
                            "Email": [Function],
                            "ListItemTemplate": [Function],
                            "ModalUniformedArrayCard": [Function],
                            "ModalUniformedArrayInline": [Function],
                            "ModalVariedArrayCard": [Function],
                            "ModalVariedArrayInline": [Function],
                            "Number": [Function],
                            "Password": [Function],
                            "SingleSelect": [Function],
                            "Text": [Function],
                            "TextArea": [Function],
                            "UniformedArrayCard": [Function],
                            "UniformedArrayInline": [Function],
                            "VariedArrayCard": [Function],
                            "VariedArrayInline": [Function],
                          },
                          "prefix": "meta.vis",
                          "schema": Object {
                            "id": "VariedArrayCard",
                            "items": Object {
                              "anyOf": Array [
                                Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "bar": Object {
                                      "id": "Bar",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Bar",
                                      "type": "string",
                                    },
                                    "name": Object {
                                      "id": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "object",
                                },
                                Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "baz": Object {
                                      "id": "Baz",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Number",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Baz",
                                      "type": "number",
                                    },
                                    "name": Object {
                                      "it": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "object",
                                },
                              ],
                              "id": "FooCard",
                              "meta": Object {
                                "vis": Object {
                                  "component": "SingleSelect",
                                },
                              },
                              "title": "Foo Card",
                              "type": "object",
                            },
                            "title": "Varied Array Card",
                            "type": "array",
                          },
                        }
                      }
                      selectInputProps={Object {}}
                      sheet={
                        StyleSheet {
                          "attached": true,
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "deployed": true,
                          "linked": false,
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "renderer": DomRenderer {
                            "element": <style
                              data-jss=""
                              type="text/css"
                            >
                              
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                            </style>,
                            "getSelector": [Function],
                            "getStyle": [Function],
                            "hasInsertedRules": false,
                            "setSelector": [Function],
                            "setStyle": [Function],
                            "sheet": [Circular],
                          },
                          "rules": RuleList {
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "index": Array [
                              Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              Object {
                                "margin-left": "auto",
                              },
                              Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            ],
                            "map": Object {
                              ".addButton-0-30": Object {
                                "margin-left": "auto",
                              },
                              ".container-0-28": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              ".header-0-29": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              ".headerTitle-0-31": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                              "addButton": Object {
                                "margin-left": "auto",
                              },
                              "container": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              "headerTitle": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            },
                            "options": Object {
                              "Renderer": [Function],
                              "classes": Object {
                                "addButton": "addButton-0-30",
                                "container": "container-0-28",
                                "header": "header-0-29",
                                "headerTitle": "headerTitle-0-31",
                              },
                              "generateClassName": [Function],
                              "index": 0,
                              "insertionPoint": undefined,
                              "jss": Jss {
                                "generateClassName": [Function],
                                "options": Object {
                                  "Renderer": [Function],
                                  "createGenerateClassName": [Function],
                                  "plugins": Array [
                                    Object {
                                      "onCreateRule": [Function],
                                      "onProcessRule": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessRule": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                  ],
                                },
                                "plugins": PluginsRegistry {
                                  "hooks": Object {
                                    "onChangeValue": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onCreateRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessRule": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessSheet": Array [],
                                    "onProcessStyle": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                },
                                "version": "8.1.0",
                              },
                              "parent": [Circular],
                              "sheet": [Circular],
                            },
                            "raw": Object {
                              "addButton": Object {
                                "marginLeft": "auto",
                              },
                              "container": Object {
                                "marginBottom": 10,
                                "marginTop": 15,
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": 5,
                                "paddingLeft": 10,
                              },
                              "headerTitle": Object {
                                "marginBottom": "auto",
                                "marginTop": "auto",
                              },
                            },
                          },
                        }
                      }
                      styles={
                        Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        }
                      }
                      submit={[Function]}
                      submitForm={[Function]}
                      submitSucceeded={false}
                      tag={[Function]}
                      touch={[Function]}
                      triggerSubmit={undefined}
                      untouch={[Function]}
                      valid={true}
                      warning={undefined}
                    >
                      <div>
                        <Card
                          className="container-0-28"
                          tag="div"
                        >
                          <div
                            className="container-0-28 card"
                          >
                            <CardHeader
                              className="header-0-29"
                              tag="div"
                            >
                              <div
                                className="header-0-29 card-header"
                              >
                                <div
                                  className="headerTitle-0-31"
                                >
                                  Varied Array Card
                                </div>
                                <div
                                  className="addButton-0-30"
                                >
                                  <Button
                                    color="primary"
                                    onClick={[Function]}
                                    size="sm"
                                    tag="button"
                                  >
                                    <button
                                      className="btn btn-primary btn-sm"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Add
                                    </button>
                                  </Button>
                                </div>
                              </div>
                            </CardHeader>
                            <ListGroup
                              className={undefined}
                              flush={true}
                              tag="ul"
                            >
                              <ul
                                className="list-group list-group-flush"
                              >
                                <SchemaVis
                                  componentProps={
                                    Object {
                                      "ListItemTemplate": Object {
                                        "removeBtnProps": Object {
                                          "onClick": [Function],
                                        },
                                        "selectBtnProps": Object {
                                          "onClick": [Function],
                                        },
                                      },
                                    }
                                  }
                                  components={
                                    Object {
                                      "CardItem": [Function],
                                      "CardWithHeader": [Function],
                                      "Color": [Function],
                                      "Date": [Function],
                                      "DateTime": [Function],
                                      "Email": [Function],
                                      "ListItemTemplate": [Function],
                                      "ModalUniformedArrayCard": [Function],
                                      "ModalUniformedArrayInline": [Function],
                                      "ModalVariedArrayCard": [Function],
                                      "ModalVariedArrayInline": [Function],
                                      "Number": [Function],
                                      "Password": [Function],
                                      "SingleSelect": [Function],
                                      "Text": [Function],
                                      "TextArea": [Function],
                                      "UniformedArrayCard": [Function],
                                      "UniformedArrayInline": [Function],
                                      "VariedArrayCard": [Function],
                                      "VariedArrayInline": [Function],
                                    }
                                  }
                                  data={
                                    Object {
                                      "bar": "bar",
                                      "name": "name",
                                    }
                                  }
                                  id="schemaVis"
                                  key="0"
                                  prefix="meta.data"
                                  schema={
                                    Object {
                                      "id": "Bar",
                                      "meta": Object {
                                        "data": Object {
                                          "component": "ListItemTemplate",
                                          "template": Array [
                                            "\${name} (Bar: \${bar})",
                                            "\${name}",
                                          ],
                                        },
                                      },
                                      "properties": Object {
                                        "bar": Object {
                                          "id": "Bar",
                                          "meta": Object {
                                            "vis": Object {
                                              "component": "Text",
                                              "ordinal": 2,
                                            },
                                          },
                                          "title": "Bar",
                                          "type": "string",
                                        },
                                        "name": Object {
                                          "id": "Name",
                                          "meta": Object {
                                            "vis": Object {
                                              "component": "Text",
                                              "ordinal": 1,
                                            },
                                          },
                                          "title": "Name",
                                          "type": "string",
                                        },
                                      },
                                      "title": "Bar",
                                      "type": "object",
                                    }
                                  }
                                  styles={Object {}}
                                  tag="div"
                                >
                                  <StyledComponent
                                    data={
                                      Object {
                                        "bar": "bar",
                                        "name": "name",
                                      }
                                    }
                                    id="schemaVis"
                                    key="schemaVis"
                                    name={undefined}
                                    removeBtnProps={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    required={false}
                                    schemaVis={
                                      Object {
                                        "componentProps": Object {
                                          "ListItemTemplate": Object {
                                            "removeBtnProps": Object {
                                              "onClick": [Function],
                                            },
                                            "selectBtnProps": Object {
                                              "onClick": [Function],
                                            },
                                          },
                                        },
                                        "components": Object {
                                          "CardItem": [Function],
                                          "CardWithHeader": [Function],
                                          "Color": [Function],
                                          "Date": [Function],
                                          "DateTime": [Function],
                                          "Email": [Function],
                                          "ListItemTemplate": [Function],
                                          "ModalUniformedArrayCard": [Function],
                                          "ModalUniformedArrayInline": [Function],
                                          "ModalVariedArrayCard": [Function],
                                          "ModalVariedArrayInline": [Function],
                                          "Number": [Function],
                                          "Password": [Function],
                                          "SingleSelect": [Function],
                                          "Text": [Function],
                                          "TextArea": [Function],
                                          "UniformedArrayCard": [Function],
                                          "UniformedArrayInline": [Function],
                                          "VariedArrayCard": [Function],
                                          "VariedArrayInline": [Function],
                                        },
                                        "defaultComponents": undefined,
                                        "definitions": Object {},
                                        "prefix": "meta.data",
                                        "schema": Object {
                                          "id": "Bar",
                                          "meta": Object {
                                            "data": Object {
                                              "component": "ListItemTemplate",
                                              "template": Array [
                                                "\${name} (Bar: \${bar})",
                                                "\${name}",
                                              ],
                                            },
                                          },
                                          "properties": Object {
                                            "bar": Object {
                                              "id": "Bar",
                                              "meta": Object {
                                                "vis": Object {
                                                  "component": "Text",
                                                  "ordinal": 2,
                                                },
                                              },
                                              "title": "Bar",
                                              "type": "string",
                                            },
                                            "name": Object {
                                              "id": "Name",
                                              "meta": Object {
                                                "vis": Object {
                                                  "component": "Text",
                                                  "ordinal": 1,
                                                },
                                              },
                                              "title": "Name",
                                              "type": "string",
                                            },
                                          },
                                          "title": "Bar",
                                          "type": "object",
                                        },
                                      }
                                    }
                                    selectBtnProps={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    styles={Object {}}
                                  >
                                    <ListItemTemplate
                                      classes={
                                        Object {
                                          ".list-group-item": "list-group-item",
                                          "listItem": "listItem-0-35",
                                          "removeItem": "removeItem-0-36",
                                        }
                                      }
                                      data={
                                        Object {
                                          "bar": "bar",
                                          "name": "name",
                                        }
                                      }
                                      id="schemaVis"
                                      name={undefined}
                                      removeBtnProps={
                                        Object {
                                          "onClick": [Function],
                                        }
                                      }
                                      required={false}
                                      schemaVis={
                                        Object {
                                          "componentProps": Object {
                                            "ListItemTemplate": Object {
                                              "removeBtnProps": Object {
                                                "onClick": [Function],
                                              },
                                              "selectBtnProps": Object {
                                                "onClick": [Function],
                                              },
                                            },
                                          },
                                          "components": Object {
                                            "CardItem": [Function],
                                            "CardWithHeader": [Function],
                                            "Color": [Function],
                                            "Date": [Function],
                                            "DateTime": [Function],
                                            "Email": [Function],
                                            "ListItemTemplate": [Function],
                                            "ModalUniformedArrayCard": [Function],
                                            "ModalUniformedArrayInline": [Function],
                                            "ModalVariedArrayCard": [Function],
                                            "ModalVariedArrayInline": [Function],
                                            "Number": [Function],
                                            "Password": [Function],
                                            "SingleSelect": [Function],
                                            "Text": [Function],
                                            "TextArea": [Function],
                                            "UniformedArrayCard": [Function],
                                            "UniformedArrayInline": [Function],
                                            "VariedArrayCard": [Function],
                                            "VariedArrayInline": [Function],
                                          },
                                          "defaultComponents": undefined,
                                          "definitions": Object {},
                                          "prefix": "meta.data",
                                          "schema": Object {
                                            "id": "Bar",
                                            "meta": Object {
                                              "data": Object {
                                                "component": "ListItemTemplate",
                                                "template": Array [
                                                  "\${name} (Bar: \${bar})",
                                                  "\${name}",
                                                ],
                                              },
                                            },
                                            "properties": Object {
                                              "bar": Object {
                                                "id": "Bar",
                                                "meta": Object {
                                                  "vis": Object {
                                                    "component": "Text",
                                                    "ordinal": 2,
                                                  },
                                                },
                                                "title": "Bar",
                                                "type": "string",
                                              },
                                              "name": Object {
                                                "id": "Name",
                                                "meta": Object {
                                                  "vis": Object {
                                                    "component": "Text",
                                                    "ordinal": 1,
                                                  },
                                                },
                                                "title": "Name",
                                                "type": "string",
                                              },
                                            },
                                            "title": "Bar",
                                            "type": "object",
                                          },
                                        }
                                      }
                                      selectBtnProps={
                                        Object {
                                          "onClick": [Function],
                                        }
                                      }
                                      sheet={
                                        StyleSheet {
                                          "attached": true,
                                          "classes": Object {
                                            ".list-group-item": "list-group-item",
                                            "listItem": "listItem-0-35",
                                            "removeItem": "removeItem-0-36",
                                          },
                                          "deployed": true,
                                          "linked": false,
                                          "options": Object {
                                            "Renderer": [Function],
                                            "classes": Object {
                                              ".list-group-item": "list-group-item",
                                              "listItem": "listItem-0-35",
                                              "removeItem": "removeItem-0-36",
                                            },
                                            "generateClassName": [Function],
                                            "index": 0,
                                            "insertionPoint": undefined,
                                            "jss": Jss {
                                              "generateClassName": [Function],
                                              "options": Object {
                                                "Renderer": [Function],
                                                "createGenerateClassName": [Function],
                                                "plugins": Array [
                                                  Object {
                                                    "onCreateRule": [Function],
                                                    "onProcessRule": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessRule": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                ],
                                              },
                                              "plugins": PluginsRegistry {
                                                "hooks": Object {
                                                  "onChangeValue": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onCreateRule": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onProcessRule": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onProcessSheet": Array [],
                                                  "onProcessStyle": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                              },
                                              "version": "8.1.0",
                                            },
                                            "parent": [Circular],
                                            "sheet": [Circular],
                                          },
                                          "renderer": DomRenderer {
                                            "element": <style
                                              data-jss=""
                                              type="text/css"
                                            >
                                              
.listItem-0-35 {
  width: 100%;
  display: inline-flex;
  border-top: 1px solid #DDD;
}
.removeItem-0-36 {
  float: right;
  padding: 7px 12px 7px 12px;
  margin-top: auto;
  margin-left: 10px;
  margin-right: 10px;
  margin-bottom: auto;
}
.list-group-item {
  border-top: none;
}

                                            </style>,
                                            "getSelector": [Function],
                                            "getStyle": [Function],
                                            "hasInsertedRules": false,
                                            "setSelector": [Function],
                                            "setStyle": [Function],
                                            "sheet": [Circular],
                                          },
                                          "rules": RuleList {
                                            "classes": Object {
                                              ".list-group-item": "list-group-item",
                                              "listItem": "listItem-0-35",
                                              "removeItem": "removeItem-0-36",
                                            },
                                            "index": Array [
                                              Object {
                                                "border-top": "1px solid #DDD",
                                                "display": "inline-flex",
                                                "width": "100%",
                                              },
                                              Object {
                                                "float": "right",
                                                "margin-bottom": "auto",
                                                "margin-left": "10px",
                                                "margin-right": "10px",
                                                "margin-top": "auto",
                                                "padding": "7px 12px 7px 12px",
                                              },
                                              GlobalContainerRule {
                                                "isProcessed": true,
                                                "key": "@global",
                                                "options": Object {
                                                  "Renderer": [Function],
                                                  "classes": Object {
                                                    ".list-group-item": "list-group-item",
                                                    "listItem": "listItem-0-35",
                                                    "removeItem": "removeItem-0-36",
                                                  },
                                                  "generateClassName": [Function],
                                                  "jss": Jss {
                                                    "generateClassName": [Function],
                                                    "options": Object {
                                                      "Renderer": [Function],
                                                      "createGenerateClassName": [Function],
                                                      "plugins": Array [
                                                        Object {
                                                          "onCreateRule": [Function],
                                                          "onProcessRule": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onChangeValue": [Function],
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onChangeValue": [Function],
                                                          "onProcessRule": [Function],
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                      ],
                                                    },
                                                    "plugins": PluginsRegistry {
                                                      "hooks": Object {
                                                        "onChangeValue": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onCreateRule": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onProcessRule": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onProcessSheet": Array [],
                                                        "onProcessStyle": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                    },
                                                    "version": "8.1.0",
                                                  },
                                                  "parent": [Circular],
                                                  "sheet": [Circular],
                                                },
                                                "rules": RuleList {
                                                  "classes": Object {
                                                    ".list-group-item": "list-group-item",
                                                    "listItem": "listItem-0-35",
                                                    "removeItem": "removeItem-0-36",
                                                  },
                                                  "index": Array [
                                                    Object {
                                                      "border-top": "none",
                                                    },
                                                  ],
                                                  "map": Object {
                                                    ".list-group-item": Object {
                                                      "border-top": "none",
                                                    },
                                                  },
                                                  "options": Object {
                                                    "Renderer": [Function],
                                                    "classes": Object {
                                                      ".list-group-item": "list-group-item",
                                                      "listItem": "listItem-0-35",
                                                      "removeItem": "removeItem-0-36",
                                                    },
                                                    "generateClassName": [Function],
                                                    "jss": Jss {
                                                      "generateClassName": [Function],
                                                      "options": Object {
                                                        "Renderer": [Function],
                                                        "createGenerateClassName": [Function],
                                                        "plugins": Array [
                                                          Object {
                                                            "onCreateRule": [Function],
                                                            "onProcessRule": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onChangeValue": [Function],
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onChangeValue": [Function],
                                                            "onProcessRule": [Function],
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                        ],
                                                      },
                                                      "plugins": PluginsRegistry {
                                                        "hooks": Object {
                                                          "onChangeValue": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onCreateRule": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onProcessRule": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onProcessSheet": Array [],
                                                          "onProcessStyle": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                      },
                                                      "version": "8.1.0",
                                                    },
                                                    "parent": [Circular],
                                                    "sheet": [Circular],
                                                  },
                                                  "raw": Object {
                                                    ".list-group-item": Object {
                                                      "borderTop": "none",
                                                    },
                                                  },
                                                },
                                                "type": "global",
                                              },
                                            ],
                                            "map": Object {
                                              ".listItem-0-35": Object {
                                                "border-top": "1px solid #DDD",
                                                "display": "inline-flex",
                                                "width": "100%",
                                              },
                                              ".removeItem-0-36": Object {
                                                "float": "right",
                                                "margin-bottom": "auto",
                                                "margin-left": "10px",
                                                "margin-right": "10px",
                                                "margin-top": "auto",
                                                "padding": "7px 12px 7px 12px",
                                              },
                                              "@global": GlobalContainerRule {
                                                "isProcessed": true,
                                                "key": "@global",
                                                "options": Object {
                                                  "Renderer": [Function],
                                                  "classes": Object {
                                                    ".list-group-item": "list-group-item",
                                                    "listItem": "listItem-0-35",
                                                    "removeItem": "removeItem-0-36",
                                                  },
                                                  "generateClassName": [Function],
                                                  "jss": Jss {
                                                    "generateClassName": [Function],
                                                    "options": Object {
                                                      "Renderer": [Function],
                                                      "createGenerateClassName": [Function],
                                                      "plugins": Array [
                                                        Object {
                                                          "onCreateRule": [Function],
                                                          "onProcessRule": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onChangeValue": [Function],
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onChangeValue": [Function],
                                                          "onProcessRule": [Function],
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                      ],
                                                    },
                                                    "plugins": PluginsRegistry {
                                                      "hooks": Object {
                                                        "onChangeValue": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onCreateRule": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onProcessRule": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onProcessSheet": Array [],
                                                        "onProcessStyle": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                    },
                                                    "version": "8.1.0",
                                                  },
                                                  "parent": [Circular],
                                                  "sheet": [Circular],
                                                },
                                                "rules": RuleList {
                                                  "classes": Object {
                                                    ".list-group-item": "list-group-item",
                                                    "listItem": "listItem-0-35",
                                                    "removeItem": "removeItem-0-36",
                                                  },
                                                  "index": Array [
                                                    Object {
                                                      "border-top": "none",
                                                    },
                                                  ],
                                                  "map": Object {
                                                    ".list-group-item": Object {
                                                      "border-top": "none",
                                                    },
                                                  },
                                                  "options": Object {
                                                    "Renderer": [Function],
                                                    "classes": Object {
                                                      ".list-group-item": "list-group-item",
                                                      "listItem": "listItem-0-35",
                                                      "removeItem": "removeItem-0-36",
                                                    },
                                                    "generateClassName": [Function],
                                                    "jss": Jss {
                                                      "generateClassName": [Function],
                                                      "options": Object {
                                                        "Renderer": [Function],
                                                        "createGenerateClassName": [Function],
                                                        "plugins": Array [
                                                          Object {
                                                            "onCreateRule": [Function],
                                                            "onProcessRule": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onChangeValue": [Function],
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onChangeValue": [Function],
                                                            "onProcessRule": [Function],
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                        ],
                                                      },
                                                      "plugins": PluginsRegistry {
                                                        "hooks": Object {
                                                          "onChangeValue": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onCreateRule": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onProcessRule": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onProcessSheet": Array [],
                                                          "onProcessStyle": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                      },
                                                      "version": "8.1.0",
                                                    },
                                                    "parent": [Circular],
                                                    "sheet": [Circular],
                                                  },
                                                  "raw": Object {
                                                    ".list-group-item": Object {
                                                      "borderTop": "none",
                                                    },
                                                  },
                                                },
                                                "type": "global",
                                              },
                                              "listItem": Object {
                                                "border-top": "1px solid #DDD",
                                                "display": "inline-flex",
                                                "width": "100%",
                                              },
                                              "removeItem": Object {
                                                "float": "right",
                                                "margin-bottom": "auto",
                                                "margin-left": "10px",
                                                "margin-right": "10px",
                                                "margin-top": "auto",
                                                "padding": "7px 12px 7px 12px",
                                              },
                                            },
                                            "options": Object {
                                              "Renderer": [Function],
                                              "classes": Object {
                                                ".list-group-item": "list-group-item",
                                                "listItem": "listItem-0-35",
                                                "removeItem": "removeItem-0-36",
                                              },
                                              "generateClassName": [Function],
                                              "index": 0,
                                              "insertionPoint": undefined,
                                              "jss": Jss {
                                                "generateClassName": [Function],
                                                "options": Object {
                                                  "Renderer": [Function],
                                                  "createGenerateClassName": [Function],
                                                  "plugins": Array [
                                                    Object {
                                                      "onCreateRule": [Function],
                                                      "onProcessRule": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onChangeValue": [Function],
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onChangeValue": [Function],
                                                      "onProcessRule": [Function],
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                  ],
                                                },
                                                "plugins": PluginsRegistry {
                                                  "hooks": Object {
                                                    "onChangeValue": Array [
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "onCreateRule": Array [
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "onProcessRule": Array [
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "onProcessSheet": Array [],
                                                    "onProcessStyle": Array [
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                },
                                                "version": "8.1.0",
                                              },
                                              "parent": [Circular],
                                              "sheet": [Circular],
                                            },
                                            "raw": Object {
                                              "@global": Object {
                                                ".list-group-item": Object {
                                                  "borderTop": "none",
                                                },
                                              },
                                              "listItem": Object {
                                                "borderTop": "1px solid #DDD",
                                                "display": "inline-flex",
                                                "width": "100%",
                                              },
                                              "removeItem": Object {
                                                "float": "right",
                                                "marginBottom": "auto",
                                                "marginLeft": 10,
                                                "marginRight": 10,
                                                "marginTop": "auto",
                                                "padding": Array [
                                                  7,
                                                  12,
                                                  7,
                                                  12,
                                                ],
                                              },
                                            },
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@global": Object {
                                            ".list-group-item": Object {
                                              "borderTop": "none",
                                            },
                                          },
                                          "listItem": Object {
                                            "borderTop": "1px solid #DDD",
                                            "display": "inline-flex",
                                            "width": "100%",
                                          },
                                          "removeItem": Object {
                                            "float": "right",
                                            "marginBottom": "auto",
                                            "marginLeft": 10,
                                            "marginRight": 10,
                                            "marginTop": "auto",
                                            "padding": Array [
                                              7,
                                              12,
                                              7,
                                              12,
                                            ],
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="listItem-0-35"
                                      >
                                        <ListGroupItem
                                          action={true}
                                          id="arrayListItem"
                                          onClick={[Function]}
                                          tag="li"
                                        >
                                          <li
                                            className="list-group-item-action list-group-item"
                                            id="arrayListItem"
                                            onClick={[Function]}
                                          >
                                            name (Bar: bar)
                                          </li>
                                        </ListGroupItem>
                                        <Button
                                          className="removeItem-0-36"
                                          color="danger"
                                          id="removeItemBtn"
                                          onClick={[Function]}
                                          size="sm"
                                          tag="button"
                                        >
                                          <button
                                            className="removeItem-0-36 btn btn-danger btn-sm"
                                            id="removeItemBtn"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Remove
                                          </button>
                                        </Button>
                                      </div>
                                    </ListItemTemplate>
                                  </StyledComponent>
                                </SchemaVis>
                              </ul>
                            </ListGroup>
                          </div>
                        </Card>
                        <Modal
                          autoFocus={true}
                          backdrop={true}
                          backdropTransition={
                            Object {
                              "mountOnEnter": true,
                              "timeout": 150,
                            }
                          }
                          fade={true}
                          isOpen={false}
                          keyboard={true}
                          modalTransition={
                            Object {
                              "timeout": 300,
                            }
                          }
                          onClosed={[Function]}
                          onOpened={[Function]}
                          role="dialog"
                          toggle={[Function]}
                          zIndex={1050}
                        />
                      </div>
                    </ModalVariedArray>
                  </Connect(ModalVariedArray)>
                </ConnectedFieldArray>
              </Connect(ConnectedFieldArray)>
            </FieldArray>
          </ModalVariedArrayCard>
        </StyledComponent>
      </Form(StyledComponent)>
    </Connect(Form(StyledComponent))>
  </ReduxForm>
</Provider>
`;

exports[`Render Varied Array Fields should add item to array, modify it, and remove it 4`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    form="TestForm"
    name="foobar"
    schemaVis={
      Object {
        "components": Object {
          "CardItem": [Function],
          "CardWithHeader": [Function],
          "Color": [Function],
          "Date": [Function],
          "DateTime": [Function],
          "Email": [Function],
          "ListItemTemplate": [Function],
          "ModalUniformedArrayCard": [Function],
          "ModalUniformedArrayInline": [Function],
          "ModalVariedArrayCard": [Function],
          "ModalVariedArrayInline": [Function],
          "Number": [Function],
          "Password": [Function],
          "SingleSelect": [Function],
          "Text": [Function],
          "TextArea": [Function],
          "UniformedArrayCard": [Function],
          "UniformedArrayInline": [Function],
          "VariedArrayCard": [Function],
          "VariedArrayInline": [Function],
        },
        "prefix": "meta.vis",
        "schema": Object {
          "id": "VariedArrayCard",
          "items": Object {
            "anyOf": Array [
              Object {
                "id": "Bar",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "bar": Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 2,
                      },
                    },
                    "title": "Bar",
                    "type": "string",
                  },
                  "name": Object {
                    "id": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Bar",
                "type": "object",
              },
              Object {
                "id": "Baz",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "baz": Object {
                    "id": "Baz",
                    "meta": Object {
                      "vis": Object {
                        "component": "Number",
                        "ordinal": 2,
                      },
                    },
                    "title": "Baz",
                    "type": "number",
                  },
                  "name": Object {
                    "it": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Baz",
                "type": "object",
              },
            ],
            "id": "FooCard",
            "meta": Object {
              "vis": Object {
                "component": "SingleSelect",
              },
            },
            "title": "Foo Card",
            "type": "object",
          },
          "title": "Varied Array Card",
          "type": "array",
        },
      }
    }
  >
    <Connect(Form(StyledComponent))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="TestForm"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      name="foobar"
      persistentSubmitErrors={false}
      pure={true}
      schemaVis={
        Object {
          "components": Object {
            "CardItem": [Function],
            "CardWithHeader": [Function],
            "Color": [Function],
            "Date": [Function],
            "DateTime": [Function],
            "Email": [Function],
            "ListItemTemplate": [Function],
            "ModalUniformedArrayCard": [Function],
            "ModalUniformedArrayInline": [Function],
            "ModalVariedArrayCard": [Function],
            "ModalVariedArrayInline": [Function],
            "Number": [Function],
            "Password": [Function],
            "SingleSelect": [Function],
            "Text": [Function],
            "TextArea": [Function],
            "UniformedArrayCard": [Function],
            "UniformedArrayInline": [Function],
            "VariedArrayCard": [Function],
            "VariedArrayInline": [Function],
          },
          "prefix": "meta.vis",
          "schema": Object {
            "id": "VariedArrayCard",
            "items": Object {
              "anyOf": Array [
                Object {
                  "id": "Bar",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "bar": Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 2,
                        },
                      },
                      "title": "Bar",
                      "type": "string",
                    },
                    "name": Object {
                      "id": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Bar",
                  "type": "object",
                },
                Object {
                  "id": "Baz",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "baz": Object {
                      "id": "Baz",
                      "meta": Object {
                        "vis": Object {
                          "component": "Number",
                          "ordinal": 2,
                        },
                      },
                      "title": "Baz",
                      "type": "number",
                    },
                    "name": Object {
                      "it": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Baz",
                  "type": "object",
                },
              ],
              "id": "FooCard",
              "meta": Object {
                "vis": Object {
                  "component": "SingleSelect",
                },
              },
              "title": "Foo Card",
              "type": "object",
            },
            "title": "Varied Array Card",
            "type": "array",
          },
        }
      }
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      withRef={true}
    >
      <Form(StyledComponent)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncErrors={undefined}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={true}
        dispatch={[Function]}
        enableReinitialize={false}
        error={undefined}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="TestForm"
        getFormState={[Function]}
        initialValues={undefined}
        initialize={[Function]}
        initialized={false}
        invalid={false}
        keepDirtyOnReinitialize={false}
        name="foobar"
        persistentSubmitErrors={false}
        pristine={false}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "foobar": Object {
              "count": 1,
              "name": "foobar",
              "type": "FieldArray",
            },
          }
        }
        reset={[Function]}
        schemaVis={
          Object {
            "components": Object {
              "CardItem": [Function],
              "CardWithHeader": [Function],
              "Color": [Function],
              "Date": [Function],
              "DateTime": [Function],
              "Email": [Function],
              "ListItemTemplate": [Function],
              "ModalUniformedArrayCard": [Function],
              "ModalUniformedArrayInline": [Function],
              "ModalVariedArrayCard": [Function],
              "ModalVariedArrayInline": [Function],
              "Number": [Function],
              "Password": [Function],
              "SingleSelect": [Function],
              "Text": [Function],
              "TextArea": [Function],
              "UniformedArrayCard": [Function],
              "UniformedArrayInline": [Function],
              "VariedArrayCard": [Function],
              "VariedArrayInline": [Function],
            },
            "prefix": "meta.vis",
            "schema": Object {
              "id": "VariedArrayCard",
              "items": Object {
                "anyOf": Array [
                  Object {
                    "id": "Bar",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "bar": Object {
                        "id": "Bar",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 2,
                          },
                        },
                        "title": "Bar",
                        "type": "string",
                      },
                      "name": Object {
                        "id": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Bar",
                    "type": "object",
                  },
                  Object {
                    "id": "Baz",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "baz": Object {
                        "id": "Baz",
                        "meta": Object {
                          "vis": Object {
                            "component": "Number",
                            "ordinal": 2,
                          },
                        },
                        "title": "Baz",
                        "type": "number",
                      },
                      "name": Object {
                        "it": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Baz",
                    "type": "object",
                  },
                ],
                "id": "FooCard",
                "meta": Object {
                  "vis": Object {
                    "component": "SingleSelect",
                  },
                },
                "title": "Foo Card",
                "type": "object",
              },
              "title": "Varied Array Card",
              "type": "array",
            },
          }
        }
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldError={[Function]}
        shouldValidate={[Function]}
        shouldWarn={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={Object {}}
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        triggerSubmit={undefined}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={true}
        validExceptSubmit={true}
        values={
          Object {
            "foobar": Array [
              Object {
                "bar": "bar",
                "name": "name",
              },
            ],
          }
        }
        warning={undefined}
        withRef={true}
      >
        <StyledComponent
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={true}
          dispatch={[Function]}
          error={undefined}
          form="TestForm"
          handleSubmit={[Function]}
          initialValues={undefined}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          name="foobar"
          pristine={false}
          pure={true}
          reset={[Function]}
          schemaVis={
            Object {
              "components": Object {
                "CardItem": [Function],
                "CardWithHeader": [Function],
                "Color": [Function],
                "Date": [Function],
                "DateTime": [Function],
                "Email": [Function],
                "ListItemTemplate": [Function],
                "ModalUniformedArrayCard": [Function],
                "ModalUniformedArrayInline": [Function],
                "ModalVariedArrayCard": [Function],
                "ModalVariedArrayInline": [Function],
                "Number": [Function],
                "Password": [Function],
                "SingleSelect": [Function],
                "Text": [Function],
                "TextArea": [Function],
                "UniformedArrayCard": [Function],
                "UniformedArrayInline": [Function],
                "VariedArrayCard": [Function],
                "VariedArrayInline": [Function],
              },
              "prefix": "meta.vis",
              "schema": Object {
                "id": "VariedArrayCard",
                "items": Object {
                  "anyOf": Array [
                    Object {
                      "id": "Bar",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "bar": Object {
                          "id": "Bar",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 2,
                            },
                          },
                          "title": "Bar",
                          "type": "string",
                        },
                        "name": Object {
                          "id": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Bar",
                      "type": "object",
                    },
                    Object {
                      "id": "Baz",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "baz": Object {
                          "id": "Baz",
                          "meta": Object {
                            "vis": Object {
                              "component": "Number",
                              "ordinal": 2,
                            },
                          },
                          "title": "Baz",
                          "type": "number",
                        },
                        "name": Object {
                          "it": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Baz",
                      "type": "object",
                    },
                  ],
                  "id": "FooCard",
                  "meta": Object {
                    "vis": Object {
                      "component": "SingleSelect",
                    },
                  },
                  "title": "Foo Card",
                  "type": "object",
                },
                "title": "Varied Array Card",
                "type": "array",
              },
            }
          }
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          triggerSubmit={undefined}
          untouch={[Function]}
          valid={true}
          warning={undefined}
          withRef={true}
        >
          <ModalVariedArrayCard
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            classes={
              Object {
                "addButton": "addButton-0-30",
                "container": "container-0-28",
                "header": "header-0-29",
                "headerTitle": "headerTitle-0-31",
              }
            }
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={true}
            dispatch={[Function]}
            error={undefined}
            form="TestForm"
            handleSubmit={[Function]}
            initialValues={undefined}
            initialize={[Function]}
            initialized={false}
            invalid={false}
            name="foobar"
            pristine={false}
            pure={true}
            reset={[Function]}
            schemaVis={
              Object {
                "components": Object {
                  "CardItem": [Function],
                  "CardWithHeader": [Function],
                  "Color": [Function],
                  "Date": [Function],
                  "DateTime": [Function],
                  "Email": [Function],
                  "ListItemTemplate": [Function],
                  "ModalUniformedArrayCard": [Function],
                  "ModalUniformedArrayInline": [Function],
                  "ModalVariedArrayCard": [Function],
                  "ModalVariedArrayInline": [Function],
                  "Number": [Function],
                  "Password": [Function],
                  "SingleSelect": [Function],
                  "Text": [Function],
                  "TextArea": [Function],
                  "UniformedArrayCard": [Function],
                  "UniformedArrayInline": [Function],
                  "VariedArrayCard": [Function],
                  "VariedArrayInline": [Function],
                },
                "prefix": "meta.vis",
                "schema": Object {
                  "id": "VariedArrayCard",
                  "items": Object {
                    "anyOf": Array [
                      Object {
                        "id": "Bar",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "bar": Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 2,
                              },
                            },
                            "title": "Bar",
                            "type": "string",
                          },
                          "name": Object {
                            "id": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Bar",
                        "type": "object",
                      },
                      Object {
                        "id": "Baz",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "baz": Object {
                            "id": "Baz",
                            "meta": Object {
                              "vis": Object {
                                "component": "Number",
                                "ordinal": 2,
                              },
                            },
                            "title": "Baz",
                            "type": "number",
                          },
                          "name": Object {
                            "it": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Baz",
                        "type": "object",
                      },
                    ],
                    "id": "FooCard",
                    "meta": Object {
                      "vis": Object {
                        "component": "SingleSelect",
                      },
                    },
                    "title": "Foo Card",
                    "type": "object",
                  },
                  "title": "Varied Array Card",
                  "type": "array",
                },
              }
            }
            sheet={
              StyleSheet {
                "attached": true,
                "classes": Object {
                  "addButton": "addButton-0-30",
                  "container": "container-0-28",
                  "header": "header-0-29",
                  "headerTitle": "headerTitle-0-31",
                },
                "deployed": true,
                "linked": false,
                "options": Object {
                  "Renderer": [Function],
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "generateClassName": [Function],
                  "index": 0,
                  "insertionPoint": undefined,
                  "jss": Jss {
                    "generateClassName": [Function],
                    "options": Object {
                      "Renderer": [Function],
                      "createGenerateClassName": [Function],
                      "plugins": Array [
                        Object {
                          "onCreateRule": [Function],
                          "onProcessRule": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessRule": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                      ],
                    },
                    "plugins": PluginsRegistry {
                      "hooks": Object {
                        "onChangeValue": Array [
                          [Function],
                          [Function],
                        ],
                        "onCreateRule": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "onProcessRule": Array [
                          [Function],
                          [Function],
                        ],
                        "onProcessSheet": Array [],
                        "onProcessStyle": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                    },
                    "version": "8.1.0",
                  },
                  "parent": [Circular],
                  "sheet": [Circular],
                },
                "renderer": DomRenderer {
                  "element": <style
                    data-jss=""
                    type="text/css"
                  >
                    
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                  </style>,
                  "getSelector": [Function],
                  "getStyle": [Function],
                  "hasInsertedRules": false,
                  "setSelector": [Function],
                  "setStyle": [Function],
                  "sheet": [Circular],
                },
                "rules": RuleList {
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "index": Array [
                    Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    Object {
                      "margin-left": "auto",
                    },
                    Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  ],
                  "map": Object {
                    ".addButton-0-30": Object {
                      "margin-left": "auto",
                    },
                    ".container-0-28": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    ".header-0-29": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    ".headerTitle-0-31": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                    "addButton": Object {
                      "margin-left": "auto",
                    },
                    "container": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    "headerTitle": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  },
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "raw": Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  },
                },
              }
            }
            styles={
              Object {
                "addButton": Object {
                  "marginLeft": "auto",
                },
                "container": Object {
                  "marginBottom": 10,
                  "marginTop": 15,
                },
                "header": Object {
                  "display": "inline-flex",
                  "padding": 5,
                  "paddingLeft": 10,
                },
                "headerTitle": Object {
                  "marginBottom": "auto",
                  "marginTop": "auto",
                },
              }
            }
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            touch={[Function]}
            triggerSubmit={undefined}
            untouch={[Function]}
            valid={true}
            warning={undefined}
            withRef={true}
          >
            <FieldArray
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              asyncValidate={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              bodyProps={
                Object {
                  "flush": true,
                }
              }
              change={[Function]}
              classes={
                Object {
                  "addButton": "addButton-0-30",
                  "container": "container-0-28",
                  "header": "header-0-29",
                  "headerTitle": "headerTitle-0-31",
                }
              }
              clearAsyncError={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              component={[Function]}
              destroy={[Function]}
              dirty={true}
              dispatch={[Function]}
              error={undefined}
              form="TestForm"
              formName="variedArrayCardItem"
              handleSubmit={[Function]}
              initialValues={undefined}
              initialize={[Function]}
              initialized={false}
              invalid={false}
              name="foobar"
              pristine={false}
              pure={true}
              reset={[Function]}
              schemaVis={
                Object {
                  "components": Object {
                    "CardItem": [Function],
                    "CardWithHeader": [Function],
                    "Color": [Function],
                    "Date": [Function],
                    "DateTime": [Function],
                    "Email": [Function],
                    "ListItemTemplate": [Function],
                    "ModalUniformedArrayCard": [Function],
                    "ModalUniformedArrayInline": [Function],
                    "ModalVariedArrayCard": [Function],
                    "ModalVariedArrayInline": [Function],
                    "Number": [Function],
                    "Password": [Function],
                    "SingleSelect": [Function],
                    "Text": [Function],
                    "TextArea": [Function],
                    "UniformedArrayCard": [Function],
                    "UniformedArrayInline": [Function],
                    "VariedArrayCard": [Function],
                    "VariedArrayInline": [Function],
                  },
                  "prefix": "meta.vis",
                  "schema": Object {
                    "id": "VariedArrayCard",
                    "items": Object {
                      "anyOf": Array [
                        Object {
                          "id": "Bar",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "bar": Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Bar",
                              "type": "string",
                            },
                            "name": Object {
                              "id": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Bar",
                          "type": "object",
                        },
                        Object {
                          "id": "Baz",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "baz": Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Number",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Baz",
                              "type": "number",
                            },
                            "name": Object {
                              "it": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Baz",
                          "type": "object",
                        },
                      ],
                      "id": "FooCard",
                      "meta": Object {
                        "vis": Object {
                          "component": "SingleSelect",
                        },
                      },
                      "title": "Foo Card",
                      "type": "object",
                    },
                    "title": "Varied Array Card",
                    "type": "array",
                  },
                }
              }
              sheet={
                StyleSheet {
                  "attached": true,
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "deployed": true,
                  "linked": false,
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "renderer": DomRenderer {
                    "element": <style
                      data-jss=""
                      type="text/css"
                    >
                      
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                    </style>,
                    "getSelector": [Function],
                    "getStyle": [Function],
                    "hasInsertedRules": false,
                    "setSelector": [Function],
                    "setStyle": [Function],
                    "sheet": [Circular],
                  },
                  "rules": RuleList {
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "index": Array [
                      Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      Object {
                        "margin-left": "auto",
                      },
                      Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    ],
                    "map": Object {
                      ".addButton-0-30": Object {
                        "margin-left": "auto",
                      },
                      ".container-0-28": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      ".header-0-29": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      ".headerTitle-0-31": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                      "addButton": Object {
                        "margin-left": "auto",
                      },
                      "container": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      "headerTitle": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    },
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "raw": Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    },
                  },
                }
              }
              styles={
                Object {
                  "addButton": Object {
                    "marginLeft": "auto",
                  },
                  "container": Object {
                    "marginBottom": 10,
                    "marginTop": 15,
                  },
                  "header": Object {
                    "display": "inline-flex",
                    "padding": 5,
                    "paddingLeft": 10,
                  },
                  "headerTitle": Object {
                    "marginBottom": "auto",
                    "marginTop": "auto",
                  },
                }
              }
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              touch={[Function]}
              triggerSubmit={undefined}
              untouch={[Function]}
              valid={true}
              validate={[Function]}
              warning={undefined}
              withRef={true}
            >
              <Connect(ConnectedFieldArray)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": true,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "TestForm",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "name": "foobar",
                    "persistentSubmitErrors": false,
                    "pristine": false,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "foobar": Object {
                        "count": 1,
                        "name": "foobar",
                        "type": "FieldArray",
                      },
                    },
                    "reset": [Function],
                    "schemaVis": Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    },
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldError": [Function],
                    "shouldValidate": [Function],
                    "shouldWarn": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {
                      "foobar": Array [
                        Object {
                          "bar": "bar",
                          "name": "name",
                        },
                      ],
                    },
                    "warning": undefined,
                    "withRef": true,
                  }
                }
                anyTouched={false}
                array={
                  Object {
                    "insert": [Function],
                    "move": [Function],
                    "pop": [Function],
                    "push": [Function],
                    "remove": [Function],
                    "removeAll": [Function],
                    "shift": [Function],
                    "splice": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                  }
                }
                asyncValidate={[Function]}
                asyncValidating={false}
                autofill={[Function]}
                blur={[Function]}
                bodyProps={
                  Object {
                    "flush": true,
                  }
                }
                change={[Function]}
                classes={
                  Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  }
                }
                clearAsyncError={[Function]}
                clearSubmit={[Function]}
                clearSubmitErrors={[Function]}
                component={[Function]}
                destroy={[Function]}
                dirty={true}
                dispatch={[Function]}
                error={undefined}
                form="TestForm"
                formName="variedArrayCardItem"
                handleSubmit={[Function]}
                initialValues={undefined}
                initialize={[Function]}
                initialized={false}
                invalid={false}
                name="foobar"
                pristine={false}
                pure={true}
                reset={[Function]}
                schemaVis={
                  Object {
                    "components": Object {
                      "CardItem": [Function],
                      "CardWithHeader": [Function],
                      "Color": [Function],
                      "Date": [Function],
                      "DateTime": [Function],
                      "Email": [Function],
                      "ListItemTemplate": [Function],
                      "ModalUniformedArrayCard": [Function],
                      "ModalUniformedArrayInline": [Function],
                      "ModalVariedArrayCard": [Function],
                      "ModalVariedArrayInline": [Function],
                      "Number": [Function],
                      "Password": [Function],
                      "SingleSelect": [Function],
                      "Text": [Function],
                      "TextArea": [Function],
                      "UniformedArrayCard": [Function],
                      "UniformedArrayInline": [Function],
                      "VariedArrayCard": [Function],
                      "VariedArrayInline": [Function],
                    },
                    "prefix": "meta.vis",
                    "schema": Object {
                      "id": "VariedArrayCard",
                      "items": Object {
                        "anyOf": Array [
                          Object {
                            "id": "Bar",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "bar": Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Bar",
                                "type": "string",
                              },
                              "name": Object {
                                "id": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Bar",
                            "type": "object",
                          },
                          Object {
                            "id": "Baz",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "baz": Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Number",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Baz",
                                "type": "number",
                              },
                              "name": Object {
                                "it": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Baz",
                            "type": "object",
                          },
                        ],
                        "id": "FooCard",
                        "meta": Object {
                          "vis": Object {
                            "component": "SingleSelect",
                          },
                        },
                        "title": "Foo Card",
                        "type": "object",
                      },
                      "title": "Varied Array Card",
                      "type": "array",
                    },
                  }
                }
                sheet={
                  StyleSheet {
                    "attached": true,
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "deployed": true,
                    "linked": false,
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "renderer": DomRenderer {
                      "element": <style
                        data-jss=""
                        type="text/css"
                      >
                        
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                      </style>,
                      "getSelector": [Function],
                      "getStyle": [Function],
                      "hasInsertedRules": false,
                      "setSelector": [Function],
                      "setStyle": [Function],
                      "sheet": [Circular],
                    },
                    "rules": RuleList {
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "index": Array [
                        Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        Object {
                          "margin-left": "auto",
                        },
                        Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      ],
                      "map": Object {
                        ".addButton-0-30": Object {
                          "margin-left": "auto",
                        },
                        ".container-0-28": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        ".header-0-29": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        ".headerTitle-0-31": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                        "addButton": Object {
                          "margin-left": "auto",
                        },
                        "container": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        "headerTitle": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      },
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "raw": Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      },
                    },
                  }
                }
                styles={
                  Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  }
                }
                submit={[Function]}
                submitFailed={false}
                submitSucceeded={false}
                submitting={false}
                touch={[Function]}
                triggerSubmit={undefined}
                untouch={[Function]}
                valid={true}
                validate={[Function]}
                warning={undefined}
                withRef={true}
              >
                <ConnectedFieldArray
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": true,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "TestForm",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "name": "foobar",
                      "persistentSubmitErrors": false,
                      "pristine": false,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "foobar": Object {
                          "count": 1,
                          "name": "foobar",
                          "type": "FieldArray",
                        },
                      },
                      "reset": [Function],
                      "schemaVis": Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      },
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldError": [Function],
                      "shouldValidate": [Function],
                      "shouldWarn": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {
                        "foobar": Array [
                          Object {
                            "bar": "bar",
                            "name": "name",
                          },
                        ],
                      },
                      "warning": undefined,
                      "withRef": true,
                    }
                  }
                  anyTouched={false}
                  array={
                    Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    }
                  }
                  arrayInsert={[Function]}
                  arrayMove={[Function]}
                  arrayPop={[Function]}
                  arrayPush={[Function]}
                  arrayRemove={[Function]}
                  arrayRemoveAll={[Function]}
                  arrayShift={[Function]}
                  arraySplice={[Function]}
                  arraySwap={[Function]}
                  arrayUnshift={[Function]}
                  asyncError={undefined}
                  asyncValidate={[Function]}
                  asyncValidating={false}
                  autofill={[Function]}
                  blur={[Function]}
                  bodyProps={
                    Object {
                      "flush": true,
                    }
                  }
                  change={[Function]}
                  classes={
                    Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    }
                  }
                  clearAsyncError={[Function]}
                  clearSubmit={[Function]}
                  clearSubmitErrors={[Function]}
                  component={[Function]}
                  destroy={[Function]}
                  dirty={true}
                  dispatch={[Function]}
                  error={undefined}
                  form="TestForm"
                  formName="variedArrayCardItem"
                  handleSubmit={[Function]}
                  initialValues={undefined}
                  initialize={[Function]}
                  initialized={false}
                  invalid={false}
                  length={1}
                  name="foobar"
                  pristine={false}
                  pure={true}
                  rerenderOnEveryChange={false}
                  reset={[Function]}
                  schemaVis={
                    Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    }
                  }
                  sheet={
                    StyleSheet {
                      "attached": true,
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "deployed": true,
                      "linked": false,
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "renderer": DomRenderer {
                        "element": <style
                          data-jss=""
                          type="text/css"
                        >
                          
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                        </style>,
                        "getSelector": [Function],
                        "getStyle": [Function],
                        "hasInsertedRules": false,
                        "setSelector": [Function],
                        "setStyle": [Function],
                        "sheet": [Circular],
                      },
                      "rules": RuleList {
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "index": Array [
                          Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          Object {
                            "margin-left": "auto",
                          },
                          Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        ],
                        "map": Object {
                          ".addButton-0-30": Object {
                            "margin-left": "auto",
                          },
                          ".container-0-28": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          ".header-0-29": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          ".headerTitle-0-31": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                          "addButton": Object {
                            "margin-left": "auto",
                          },
                          "container": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          "headerTitle": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        },
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "raw": Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        },
                      },
                    }
                  }
                  state={undefined}
                  styles={
                    Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    }
                  }
                  submit={[Function]}
                  submitError={undefined}
                  submitFailed={undefined}
                  submitSucceeded={false}
                  submitting={undefined}
                  syncError={undefined}
                  syncWarning={undefined}
                  touch={[Function]}
                  triggerSubmit={undefined}
                  untouch={[Function]}
                  valid={true}
                  validate={[Function]}
                  value={
                    Array [
                      Object {
                        "bar": "bar",
                        "name": "name",
                      },
                    ]
                  }
                  warning={undefined}
                  withRef={true}
                >
                  <Connect(ModalVariedArray)
                    anyTouched={false}
                    array={
                      Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    asyncValidate={[Function]}
                    asyncValidating={false}
                    autofill={[Function]}
                    blur={[Function]}
                    bodyProps={
                      Object {
                        "flush": true,
                      }
                    }
                    change={[Function]}
                    classes={
                      Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      }
                    }
                    clearAsyncError={[Function]}
                    clearSubmit={[Function]}
                    clearSubmitErrors={[Function]}
                    destroy={[Function]}
                    dispatch={[Function]}
                    error={undefined}
                    fields={
                      Object {
                        "_isFieldArray": true,
                        "forEach": [Function],
                        "get": [Function],
                        "getAll": [Function],
                        "insert": [Function],
                        "length": 1,
                        "map": [Function],
                        "move": [Function],
                        "name": "foobar",
                        "pop": [Function],
                        "push": [Function],
                        "reduce": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    form="TestForm"
                    formName="variedArrayCardItem"
                    handleSubmit={[Function]}
                    initialValues={undefined}
                    initialize={[Function]}
                    initialized={false}
                    invalid={false}
                    meta={
                      Object {
                        "dirty": true,
                        "error": undefined,
                        "form": "TestForm",
                        "invalid": false,
                        "pristine": false,
                        "submitFailed": undefined,
                        "submitting": undefined,
                        "valid": true,
                        "warning": undefined,
                      }
                    }
                    pure={true}
                    reset={[Function]}
                    schemaVis={
                      Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      }
                    }
                    sheet={
                      StyleSheet {
                        "attached": true,
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "deployed": true,
                        "linked": false,
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "renderer": DomRenderer {
                          "element": <style
                            data-jss=""
                            type="text/css"
                          >
                            
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                          </style>,
                          "getSelector": [Function],
                          "getStyle": [Function],
                          "hasInsertedRules": false,
                          "setSelector": [Function],
                          "setStyle": [Function],
                          "sheet": [Circular],
                        },
                        "rules": RuleList {
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "index": Array [
                            Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            Object {
                              "margin-left": "auto",
                            },
                            Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          ],
                          "map": Object {
                            ".addButton-0-30": Object {
                              "margin-left": "auto",
                            },
                            ".container-0-28": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            ".header-0-29": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            ".headerTitle-0-31": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                            "addButton": Object {
                              "margin-left": "auto",
                            },
                            "container": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            "headerTitle": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          },
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "raw": Object {
                            "addButton": Object {
                              "marginLeft": "auto",
                            },
                            "container": Object {
                              "marginBottom": 10,
                              "marginTop": 15,
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": 5,
                              "paddingLeft": 10,
                            },
                            "headerTitle": Object {
                              "marginBottom": "auto",
                              "marginTop": "auto",
                            },
                          },
                        },
                      }
                    }
                    styles={
                      Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      }
                    }
                    submit={[Function]}
                    submitSucceeded={false}
                    touch={[Function]}
                    triggerSubmit={undefined}
                    untouch={[Function]}
                    valid={true}
                    warning={undefined}
                  >
                    <ModalVariedArray
                      addBtnProps={Object {}}
                      anyTouched={false}
                      array={
                        Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "splice": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      asyncValidate={[Function]}
                      asyncValidating={false}
                      autofill={[Function]}
                      blur={[Function]}
                      bodyProps={
                        Object {
                          "flush": true,
                        }
                      }
                      bodyTag={[Function]}
                      change={[Function]}
                      changeForm={[Function]}
                      classes={
                        Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        }
                      }
                      clearAsyncError={[Function]}
                      clearSubmit={[Function]}
                      clearSubmitErrors={[Function]}
                      dataSchemaPrefix="meta.data"
                      destroy={[Function]}
                      destroyForm={[Function]}
                      dispatch={[Function]}
                      error={undefined}
                      fields={
                        Object {
                          "_isFieldArray": true,
                          "forEach": [Function],
                          "get": [Function],
                          "getAll": [Function],
                          "insert": [Function],
                          "length": 1,
                          "map": [Function],
                          "move": [Function],
                          "name": "foobar",
                          "pop": [Function],
                          "push": [Function],
                          "reduce": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      form="TestForm"
                      formName="variedArrayCardItem"
                      handleSubmit={[Function]}
                      headerTag={[Function]}
                      initialValues={undefined}
                      initialize={[Function]}
                      initialized={false}
                      invalid={false}
                      items={
                        Array [
                          Object {
                            "bar": "bar",
                            "name": "name",
                          },
                        ]
                      }
                      meta={
                        Object {
                          "dirty": true,
                          "error": undefined,
                          "form": "TestForm",
                          "invalid": false,
                          "pristine": false,
                          "submitFailed": undefined,
                          "submitting": undefined,
                          "valid": true,
                          "warning": undefined,
                        }
                      }
                      pure={true}
                      required={false}
                      reset={[Function]}
                      schemaVis={
                        Object {
                          "components": Object {
                            "CardItem": [Function],
                            "CardWithHeader": [Function],
                            "Color": [Function],
                            "Date": [Function],
                            "DateTime": [Function],
                            "Email": [Function],
                            "ListItemTemplate": [Function],
                            "ModalUniformedArrayCard": [Function],
                            "ModalUniformedArrayInline": [Function],
                            "ModalVariedArrayCard": [Function],
                            "ModalVariedArrayInline": [Function],
                            "Number": [Function],
                            "Password": [Function],
                            "SingleSelect": [Function],
                            "Text": [Function],
                            "TextArea": [Function],
                            "UniformedArrayCard": [Function],
                            "UniformedArrayInline": [Function],
                            "VariedArrayCard": [Function],
                            "VariedArrayInline": [Function],
                          },
                          "prefix": "meta.vis",
                          "schema": Object {
                            "id": "VariedArrayCard",
                            "items": Object {
                              "anyOf": Array [
                                Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "bar": Object {
                                      "id": "Bar",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Bar",
                                      "type": "string",
                                    },
                                    "name": Object {
                                      "id": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "object",
                                },
                                Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "baz": Object {
                                      "id": "Baz",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Number",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Baz",
                                      "type": "number",
                                    },
                                    "name": Object {
                                      "it": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "object",
                                },
                              ],
                              "id": "FooCard",
                              "meta": Object {
                                "vis": Object {
                                  "component": "SingleSelect",
                                },
                              },
                              "title": "Foo Card",
                              "type": "object",
                            },
                            "title": "Varied Array Card",
                            "type": "array",
                          },
                        }
                      }
                      selectInputProps={Object {}}
                      sheet={
                        StyleSheet {
                          "attached": true,
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "deployed": true,
                          "linked": false,
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "renderer": DomRenderer {
                            "element": <style
                              data-jss=""
                              type="text/css"
                            >
                              
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                            </style>,
                            "getSelector": [Function],
                            "getStyle": [Function],
                            "hasInsertedRules": false,
                            "setSelector": [Function],
                            "setStyle": [Function],
                            "sheet": [Circular],
                          },
                          "rules": RuleList {
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "index": Array [
                              Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              Object {
                                "margin-left": "auto",
                              },
                              Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            ],
                            "map": Object {
                              ".addButton-0-30": Object {
                                "margin-left": "auto",
                              },
                              ".container-0-28": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              ".header-0-29": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              ".headerTitle-0-31": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                              "addButton": Object {
                                "margin-left": "auto",
                              },
                              "container": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              "headerTitle": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            },
                            "options": Object {
                              "Renderer": [Function],
                              "classes": Object {
                                "addButton": "addButton-0-30",
                                "container": "container-0-28",
                                "header": "header-0-29",
                                "headerTitle": "headerTitle-0-31",
                              },
                              "generateClassName": [Function],
                              "index": 0,
                              "insertionPoint": undefined,
                              "jss": Jss {
                                "generateClassName": [Function],
                                "options": Object {
                                  "Renderer": [Function],
                                  "createGenerateClassName": [Function],
                                  "plugins": Array [
                                    Object {
                                      "onCreateRule": [Function],
                                      "onProcessRule": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessRule": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                  ],
                                },
                                "plugins": PluginsRegistry {
                                  "hooks": Object {
                                    "onChangeValue": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onCreateRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessRule": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessSheet": Array [],
                                    "onProcessStyle": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                },
                                "version": "8.1.0",
                              },
                              "parent": [Circular],
                              "sheet": [Circular],
                            },
                            "raw": Object {
                              "addButton": Object {
                                "marginLeft": "auto",
                              },
                              "container": Object {
                                "marginBottom": 10,
                                "marginTop": 15,
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": 5,
                                "paddingLeft": 10,
                              },
                              "headerTitle": Object {
                                "marginBottom": "auto",
                                "marginTop": "auto",
                              },
                            },
                          },
                        }
                      }
                      styles={
                        Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        }
                      }
                      submit={[Function]}
                      submitForm={[Function]}
                      submitSucceeded={false}
                      tag={[Function]}
                      touch={[Function]}
                      triggerSubmit={undefined}
                      untouch={[Function]}
                      valid={true}
                      warning={undefined}
                    >
                      <div>
                        <Card
                          className="container-0-28"
                          tag="div"
                        >
                          <div
                            className="container-0-28 card"
                          >
                            <CardHeader
                              className="header-0-29"
                              tag="div"
                            >
                              <div
                                className="header-0-29 card-header"
                              >
                                <div
                                  className="headerTitle-0-31"
                                >
                                  Varied Array Card
                                </div>
                                <div
                                  className="addButton-0-30"
                                >
                                  <Button
                                    color="primary"
                                    onClick={[Function]}
                                    size="sm"
                                    tag="button"
                                  >
                                    <button
                                      className="btn btn-primary btn-sm"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Add
                                    </button>
                                  </Button>
                                </div>
                              </div>
                            </CardHeader>
                            <ListGroup
                              className={undefined}
                              flush={true}
                              tag="ul"
                            >
                              <ul
                                className="list-group list-group-flush"
                              >
                                <SchemaVis
                                  componentProps={
                                    Object {
                                      "ListItemTemplate": Object {
                                        "removeBtnProps": Object {
                                          "onClick": [Function],
                                        },
                                        "selectBtnProps": Object {
                                          "onClick": [Function],
                                        },
                                      },
                                    }
                                  }
                                  components={
                                    Object {
                                      "CardItem": [Function],
                                      "CardWithHeader": [Function],
                                      "Color": [Function],
                                      "Date": [Function],
                                      "DateTime": [Function],
                                      "Email": [Function],
                                      "ListItemTemplate": [Function],
                                      "ModalUniformedArrayCard": [Function],
                                      "ModalUniformedArrayInline": [Function],
                                      "ModalVariedArrayCard": [Function],
                                      "ModalVariedArrayInline": [Function],
                                      "Number": [Function],
                                      "Password": [Function],
                                      "SingleSelect": [Function],
                                      "Text": [Function],
                                      "TextArea": [Function],
                                      "UniformedArrayCard": [Function],
                                      "UniformedArrayInline": [Function],
                                      "VariedArrayCard": [Function],
                                      "VariedArrayInline": [Function],
                                    }
                                  }
                                  data={
                                    Object {
                                      "bar": "bar",
                                      "name": "name",
                                    }
                                  }
                                  id="schemaVis"
                                  key="0"
                                  prefix="meta.data"
                                  schema={
                                    Object {
                                      "id": "Bar",
                                      "meta": Object {
                                        "data": Object {
                                          "component": "ListItemTemplate",
                                          "template": Array [
                                            "\${name} (Bar: \${bar})",
                                            "\${name}",
                                          ],
                                        },
                                      },
                                      "properties": Object {
                                        "bar": Object {
                                          "id": "Bar",
                                          "meta": Object {
                                            "vis": Object {
                                              "component": "Text",
                                              "ordinal": 2,
                                            },
                                          },
                                          "title": "Bar",
                                          "type": "string",
                                        },
                                        "name": Object {
                                          "id": "Name",
                                          "meta": Object {
                                            "vis": Object {
                                              "component": "Text",
                                              "ordinal": 1,
                                            },
                                          },
                                          "title": "Name",
                                          "type": "string",
                                        },
                                      },
                                      "title": "Bar",
                                      "type": "object",
                                    }
                                  }
                                  styles={Object {}}
                                  tag="div"
                                >
                                  <StyledComponent
                                    data={
                                      Object {
                                        "bar": "bar",
                                        "name": "name",
                                      }
                                    }
                                    id="schemaVis"
                                    key="schemaVis"
                                    name={undefined}
                                    removeBtnProps={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    required={false}
                                    schemaVis={
                                      Object {
                                        "componentProps": Object {
                                          "ListItemTemplate": Object {
                                            "removeBtnProps": Object {
                                              "onClick": [Function],
                                            },
                                            "selectBtnProps": Object {
                                              "onClick": [Function],
                                            },
                                          },
                                        },
                                        "components": Object {
                                          "CardItem": [Function],
                                          "CardWithHeader": [Function],
                                          "Color": [Function],
                                          "Date": [Function],
                                          "DateTime": [Function],
                                          "Email": [Function],
                                          "ListItemTemplate": [Function],
                                          "ModalUniformedArrayCard": [Function],
                                          "ModalUniformedArrayInline": [Function],
                                          "ModalVariedArrayCard": [Function],
                                          "ModalVariedArrayInline": [Function],
                                          "Number": [Function],
                                          "Password": [Function],
                                          "SingleSelect": [Function],
                                          "Text": [Function],
                                          "TextArea": [Function],
                                          "UniformedArrayCard": [Function],
                                          "UniformedArrayInline": [Function],
                                          "VariedArrayCard": [Function],
                                          "VariedArrayInline": [Function],
                                        },
                                        "defaultComponents": undefined,
                                        "definitions": Object {},
                                        "prefix": "meta.data",
                                        "schema": Object {
                                          "id": "Bar",
                                          "meta": Object {
                                            "data": Object {
                                              "component": "ListItemTemplate",
                                              "template": Array [
                                                "\${name} (Bar: \${bar})",
                                                "\${name}",
                                              ],
                                            },
                                          },
                                          "properties": Object {
                                            "bar": Object {
                                              "id": "Bar",
                                              "meta": Object {
                                                "vis": Object {
                                                  "component": "Text",
                                                  "ordinal": 2,
                                                },
                                              },
                                              "title": "Bar",
                                              "type": "string",
                                            },
                                            "name": Object {
                                              "id": "Name",
                                              "meta": Object {
                                                "vis": Object {
                                                  "component": "Text",
                                                  "ordinal": 1,
                                                },
                                              },
                                              "title": "Name",
                                              "type": "string",
                                            },
                                          },
                                          "title": "Bar",
                                          "type": "object",
                                        },
                                      }
                                    }
                                    selectBtnProps={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    styles={Object {}}
                                  >
                                    <ListItemTemplate
                                      classes={
                                        Object {
                                          ".list-group-item": "list-group-item",
                                          "listItem": "listItem-0-35",
                                          "removeItem": "removeItem-0-36",
                                        }
                                      }
                                      data={
                                        Object {
                                          "bar": "bar",
                                          "name": "name",
                                        }
                                      }
                                      id="schemaVis"
                                      name={undefined}
                                      removeBtnProps={
                                        Object {
                                          "onClick": [Function],
                                        }
                                      }
                                      required={false}
                                      schemaVis={
                                        Object {
                                          "componentProps": Object {
                                            "ListItemTemplate": Object {
                                              "removeBtnProps": Object {
                                                "onClick": [Function],
                                              },
                                              "selectBtnProps": Object {
                                                "onClick": [Function],
                                              },
                                            },
                                          },
                                          "components": Object {
                                            "CardItem": [Function],
                                            "CardWithHeader": [Function],
                                            "Color": [Function],
                                            "Date": [Function],
                                            "DateTime": [Function],
                                            "Email": [Function],
                                            "ListItemTemplate": [Function],
                                            "ModalUniformedArrayCard": [Function],
                                            "ModalUniformedArrayInline": [Function],
                                            "ModalVariedArrayCard": [Function],
                                            "ModalVariedArrayInline": [Function],
                                            "Number": [Function],
                                            "Password": [Function],
                                            "SingleSelect": [Function],
                                            "Text": [Function],
                                            "TextArea": [Function],
                                            "UniformedArrayCard": [Function],
                                            "UniformedArrayInline": [Function],
                                            "VariedArrayCard": [Function],
                                            "VariedArrayInline": [Function],
                                          },
                                          "defaultComponents": undefined,
                                          "definitions": Object {},
                                          "prefix": "meta.data",
                                          "schema": Object {
                                            "id": "Bar",
                                            "meta": Object {
                                              "data": Object {
                                                "component": "ListItemTemplate",
                                                "template": Array [
                                                  "\${name} (Bar: \${bar})",
                                                  "\${name}",
                                                ],
                                              },
                                            },
                                            "properties": Object {
                                              "bar": Object {
                                                "id": "Bar",
                                                "meta": Object {
                                                  "vis": Object {
                                                    "component": "Text",
                                                    "ordinal": 2,
                                                  },
                                                },
                                                "title": "Bar",
                                                "type": "string",
                                              },
                                              "name": Object {
                                                "id": "Name",
                                                "meta": Object {
                                                  "vis": Object {
                                                    "component": "Text",
                                                    "ordinal": 1,
                                                  },
                                                },
                                                "title": "Name",
                                                "type": "string",
                                              },
                                            },
                                            "title": "Bar",
                                            "type": "object",
                                          },
                                        }
                                      }
                                      selectBtnProps={
                                        Object {
                                          "onClick": [Function],
                                        }
                                      }
                                      sheet={
                                        StyleSheet {
                                          "attached": true,
                                          "classes": Object {
                                            ".list-group-item": "list-group-item",
                                            "listItem": "listItem-0-35",
                                            "removeItem": "removeItem-0-36",
                                          },
                                          "deployed": true,
                                          "linked": false,
                                          "options": Object {
                                            "Renderer": [Function],
                                            "classes": Object {
                                              ".list-group-item": "list-group-item",
                                              "listItem": "listItem-0-35",
                                              "removeItem": "removeItem-0-36",
                                            },
                                            "generateClassName": [Function],
                                            "index": 0,
                                            "insertionPoint": undefined,
                                            "jss": Jss {
                                              "generateClassName": [Function],
                                              "options": Object {
                                                "Renderer": [Function],
                                                "createGenerateClassName": [Function],
                                                "plugins": Array [
                                                  Object {
                                                    "onCreateRule": [Function],
                                                    "onProcessRule": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessRule": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                ],
                                              },
                                              "plugins": PluginsRegistry {
                                                "hooks": Object {
                                                  "onChangeValue": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onCreateRule": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onProcessRule": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onProcessSheet": Array [],
                                                  "onProcessStyle": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                              },
                                              "version": "8.1.0",
                                            },
                                            "parent": [Circular],
                                            "sheet": [Circular],
                                          },
                                          "renderer": DomRenderer {
                                            "element": <style
                                              data-jss=""
                                              type="text/css"
                                            >
                                              
.listItem-0-35 {
  width: 100%;
  display: inline-flex;
  border-top: 1px solid #DDD;
}
.removeItem-0-36 {
  float: right;
  padding: 7px 12px 7px 12px;
  margin-top: auto;
  margin-left: 10px;
  margin-right: 10px;
  margin-bottom: auto;
}
.list-group-item {
  border-top: none;
}

                                            </style>,
                                            "getSelector": [Function],
                                            "getStyle": [Function],
                                            "hasInsertedRules": false,
                                            "setSelector": [Function],
                                            "setStyle": [Function],
                                            "sheet": [Circular],
                                          },
                                          "rules": RuleList {
                                            "classes": Object {
                                              ".list-group-item": "list-group-item",
                                              "listItem": "listItem-0-35",
                                              "removeItem": "removeItem-0-36",
                                            },
                                            "index": Array [
                                              Object {
                                                "border-top": "1px solid #DDD",
                                                "display": "inline-flex",
                                                "width": "100%",
                                              },
                                              Object {
                                                "float": "right",
                                                "margin-bottom": "auto",
                                                "margin-left": "10px",
                                                "margin-right": "10px",
                                                "margin-top": "auto",
                                                "padding": "7px 12px 7px 12px",
                                              },
                                              GlobalContainerRule {
                                                "isProcessed": true,
                                                "key": "@global",
                                                "options": Object {
                                                  "Renderer": [Function],
                                                  "classes": Object {
                                                    ".list-group-item": "list-group-item",
                                                    "listItem": "listItem-0-35",
                                                    "removeItem": "removeItem-0-36",
                                                  },
                                                  "generateClassName": [Function],
                                                  "jss": Jss {
                                                    "generateClassName": [Function],
                                                    "options": Object {
                                                      "Renderer": [Function],
                                                      "createGenerateClassName": [Function],
                                                      "plugins": Array [
                                                        Object {
                                                          "onCreateRule": [Function],
                                                          "onProcessRule": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onChangeValue": [Function],
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onChangeValue": [Function],
                                                          "onProcessRule": [Function],
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                      ],
                                                    },
                                                    "plugins": PluginsRegistry {
                                                      "hooks": Object {
                                                        "onChangeValue": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onCreateRule": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onProcessRule": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onProcessSheet": Array [],
                                                        "onProcessStyle": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                    },
                                                    "version": "8.1.0",
                                                  },
                                                  "parent": [Circular],
                                                  "sheet": [Circular],
                                                },
                                                "rules": RuleList {
                                                  "classes": Object {
                                                    ".list-group-item": "list-group-item",
                                                    "listItem": "listItem-0-35",
                                                    "removeItem": "removeItem-0-36",
                                                  },
                                                  "index": Array [
                                                    Object {
                                                      "border-top": "none",
                                                    },
                                                  ],
                                                  "map": Object {
                                                    ".list-group-item": Object {
                                                      "border-top": "none",
                                                    },
                                                  },
                                                  "options": Object {
                                                    "Renderer": [Function],
                                                    "classes": Object {
                                                      ".list-group-item": "list-group-item",
                                                      "listItem": "listItem-0-35",
                                                      "removeItem": "removeItem-0-36",
                                                    },
                                                    "generateClassName": [Function],
                                                    "jss": Jss {
                                                      "generateClassName": [Function],
                                                      "options": Object {
                                                        "Renderer": [Function],
                                                        "createGenerateClassName": [Function],
                                                        "plugins": Array [
                                                          Object {
                                                            "onCreateRule": [Function],
                                                            "onProcessRule": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onChangeValue": [Function],
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onChangeValue": [Function],
                                                            "onProcessRule": [Function],
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                        ],
                                                      },
                                                      "plugins": PluginsRegistry {
                                                        "hooks": Object {
                                                          "onChangeValue": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onCreateRule": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onProcessRule": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onProcessSheet": Array [],
                                                          "onProcessStyle": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                      },
                                                      "version": "8.1.0",
                                                    },
                                                    "parent": [Circular],
                                                    "sheet": [Circular],
                                                  },
                                                  "raw": Object {
                                                    ".list-group-item": Object {
                                                      "borderTop": "none",
                                                    },
                                                  },
                                                },
                                                "type": "global",
                                              },
                                            ],
                                            "map": Object {
                                              ".listItem-0-35": Object {
                                                "border-top": "1px solid #DDD",
                                                "display": "inline-flex",
                                                "width": "100%",
                                              },
                                              ".removeItem-0-36": Object {
                                                "float": "right",
                                                "margin-bottom": "auto",
                                                "margin-left": "10px",
                                                "margin-right": "10px",
                                                "margin-top": "auto",
                                                "padding": "7px 12px 7px 12px",
                                              },
                                              "@global": GlobalContainerRule {
                                                "isProcessed": true,
                                                "key": "@global",
                                                "options": Object {
                                                  "Renderer": [Function],
                                                  "classes": Object {
                                                    ".list-group-item": "list-group-item",
                                                    "listItem": "listItem-0-35",
                                                    "removeItem": "removeItem-0-36",
                                                  },
                                                  "generateClassName": [Function],
                                                  "jss": Jss {
                                                    "generateClassName": [Function],
                                                    "options": Object {
                                                      "Renderer": [Function],
                                                      "createGenerateClassName": [Function],
                                                      "plugins": Array [
                                                        Object {
                                                          "onCreateRule": [Function],
                                                          "onProcessRule": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onChangeValue": [Function],
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onChangeValue": [Function],
                                                          "onProcessRule": [Function],
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                      ],
                                                    },
                                                    "plugins": PluginsRegistry {
                                                      "hooks": Object {
                                                        "onChangeValue": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onCreateRule": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onProcessRule": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onProcessSheet": Array [],
                                                        "onProcessStyle": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                    },
                                                    "version": "8.1.0",
                                                  },
                                                  "parent": [Circular],
                                                  "sheet": [Circular],
                                                },
                                                "rules": RuleList {
                                                  "classes": Object {
                                                    ".list-group-item": "list-group-item",
                                                    "listItem": "listItem-0-35",
                                                    "removeItem": "removeItem-0-36",
                                                  },
                                                  "index": Array [
                                                    Object {
                                                      "border-top": "none",
                                                    },
                                                  ],
                                                  "map": Object {
                                                    ".list-group-item": Object {
                                                      "border-top": "none",
                                                    },
                                                  },
                                                  "options": Object {
                                                    "Renderer": [Function],
                                                    "classes": Object {
                                                      ".list-group-item": "list-group-item",
                                                      "listItem": "listItem-0-35",
                                                      "removeItem": "removeItem-0-36",
                                                    },
                                                    "generateClassName": [Function],
                                                    "jss": Jss {
                                                      "generateClassName": [Function],
                                                      "options": Object {
                                                        "Renderer": [Function],
                                                        "createGenerateClassName": [Function],
                                                        "plugins": Array [
                                                          Object {
                                                            "onCreateRule": [Function],
                                                            "onProcessRule": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onChangeValue": [Function],
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onChangeValue": [Function],
                                                            "onProcessRule": [Function],
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                        ],
                                                      },
                                                      "plugins": PluginsRegistry {
                                                        "hooks": Object {
                                                          "onChangeValue": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onCreateRule": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onProcessRule": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onProcessSheet": Array [],
                                                          "onProcessStyle": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                      },
                                                      "version": "8.1.0",
                                                    },
                                                    "parent": [Circular],
                                                    "sheet": [Circular],
                                                  },
                                                  "raw": Object {
                                                    ".list-group-item": Object {
                                                      "borderTop": "none",
                                                    },
                                                  },
                                                },
                                                "type": "global",
                                              },
                                              "listItem": Object {
                                                "border-top": "1px solid #DDD",
                                                "display": "inline-flex",
                                                "width": "100%",
                                              },
                                              "removeItem": Object {
                                                "float": "right",
                                                "margin-bottom": "auto",
                                                "margin-left": "10px",
                                                "margin-right": "10px",
                                                "margin-top": "auto",
                                                "padding": "7px 12px 7px 12px",
                                              },
                                            },
                                            "options": Object {
                                              "Renderer": [Function],
                                              "classes": Object {
                                                ".list-group-item": "list-group-item",
                                                "listItem": "listItem-0-35",
                                                "removeItem": "removeItem-0-36",
                                              },
                                              "generateClassName": [Function],
                                              "index": 0,
                                              "insertionPoint": undefined,
                                              "jss": Jss {
                                                "generateClassName": [Function],
                                                "options": Object {
                                                  "Renderer": [Function],
                                                  "createGenerateClassName": [Function],
                                                  "plugins": Array [
                                                    Object {
                                                      "onCreateRule": [Function],
                                                      "onProcessRule": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onChangeValue": [Function],
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onChangeValue": [Function],
                                                      "onProcessRule": [Function],
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                  ],
                                                },
                                                "plugins": PluginsRegistry {
                                                  "hooks": Object {
                                                    "onChangeValue": Array [
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "onCreateRule": Array [
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "onProcessRule": Array [
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "onProcessSheet": Array [],
                                                    "onProcessStyle": Array [
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                },
                                                "version": "8.1.0",
                                              },
                                              "parent": [Circular],
                                              "sheet": [Circular],
                                            },
                                            "raw": Object {
                                              "@global": Object {
                                                ".list-group-item": Object {
                                                  "borderTop": "none",
                                                },
                                              },
                                              "listItem": Object {
                                                "borderTop": "1px solid #DDD",
                                                "display": "inline-flex",
                                                "width": "100%",
                                              },
                                              "removeItem": Object {
                                                "float": "right",
                                                "marginBottom": "auto",
                                                "marginLeft": 10,
                                                "marginRight": 10,
                                                "marginTop": "auto",
                                                "padding": Array [
                                                  7,
                                                  12,
                                                  7,
                                                  12,
                                                ],
                                              },
                                            },
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@global": Object {
                                            ".list-group-item": Object {
                                              "borderTop": "none",
                                            },
                                          },
                                          "listItem": Object {
                                            "borderTop": "1px solid #DDD",
                                            "display": "inline-flex",
                                            "width": "100%",
                                          },
                                          "removeItem": Object {
                                            "float": "right",
                                            "marginBottom": "auto",
                                            "marginLeft": 10,
                                            "marginRight": 10,
                                            "marginTop": "auto",
                                            "padding": Array [
                                              7,
                                              12,
                                              7,
                                              12,
                                            ],
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="listItem-0-35"
                                      >
                                        <ListGroupItem
                                          action={true}
                                          id="arrayListItem"
                                          onClick={[Function]}
                                          tag="li"
                                        >
                                          <li
                                            className="list-group-item-action list-group-item"
                                            id="arrayListItem"
                                            onClick={[Function]}
                                          >
                                            name (Bar: bar)
                                          </li>
                                        </ListGroupItem>
                                        <Button
                                          className="removeItem-0-36"
                                          color="danger"
                                          id="removeItemBtn"
                                          onClick={[Function]}
                                          size="sm"
                                          tag="button"
                                        >
                                          <button
                                            className="removeItem-0-36 btn btn-danger btn-sm"
                                            id="removeItemBtn"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Remove
                                          </button>
                                        </Button>
                                      </div>
                                    </ListItemTemplate>
                                  </StyledComponent>
                                </SchemaVis>
                              </ul>
                            </ListGroup>
                          </div>
                        </Card>
                        <Modal
                          autoFocus={true}
                          backdrop={true}
                          backdropTransition={
                            Object {
                              "mountOnEnter": true,
                              "timeout": 150,
                            }
                          }
                          fade={true}
                          isOpen={true}
                          keyboard={true}
                          modalTransition={
                            Object {
                              "timeout": 300,
                            }
                          }
                          onClosed={[Function]}
                          onOpened={[Function]}
                          role="dialog"
                          toggle={[Function]}
                          zIndex={1050}
                        />
                      </div>
                    </ModalVariedArray>
                  </Connect(ModalVariedArray)>
                </ConnectedFieldArray>
              </Connect(ConnectedFieldArray)>
            </FieldArray>
          </ModalVariedArrayCard>
        </StyledComponent>
      </Form(StyledComponent)>
    </Connect(Form(StyledComponent))>
  </ReduxForm>
</Provider>
`;

exports[`Render Varied Array Fields should add item to array, modify it, and remove it 5`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    form="TestForm"
    name="foobar"
    schemaVis={
      Object {
        "components": Object {
          "CardItem": [Function],
          "CardWithHeader": [Function],
          "Color": [Function],
          "Date": [Function],
          "DateTime": [Function],
          "Email": [Function],
          "ListItemTemplate": [Function],
          "ModalUniformedArrayCard": [Function],
          "ModalUniformedArrayInline": [Function],
          "ModalVariedArrayCard": [Function],
          "ModalVariedArrayInline": [Function],
          "Number": [Function],
          "Password": [Function],
          "SingleSelect": [Function],
          "Text": [Function],
          "TextArea": [Function],
          "UniformedArrayCard": [Function],
          "UniformedArrayInline": [Function],
          "VariedArrayCard": [Function],
          "VariedArrayInline": [Function],
        },
        "prefix": "meta.vis",
        "schema": Object {
          "id": "VariedArrayCard",
          "items": Object {
            "anyOf": Array [
              Object {
                "id": "Bar",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "bar": Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 2,
                      },
                    },
                    "title": "Bar",
                    "type": "string",
                  },
                  "name": Object {
                    "id": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Bar",
                "type": "object",
              },
              Object {
                "id": "Baz",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "baz": Object {
                    "id": "Baz",
                    "meta": Object {
                      "vis": Object {
                        "component": "Number",
                        "ordinal": 2,
                      },
                    },
                    "title": "Baz",
                    "type": "number",
                  },
                  "name": Object {
                    "it": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Baz",
                "type": "object",
              },
            ],
            "id": "FooCard",
            "meta": Object {
              "vis": Object {
                "component": "SingleSelect",
              },
            },
            "title": "Foo Card",
            "type": "object",
          },
          "title": "Varied Array Card",
          "type": "array",
        },
      }
    }
  >
    <Connect(Form(StyledComponent))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="TestForm"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      name="foobar"
      persistentSubmitErrors={false}
      pure={true}
      schemaVis={
        Object {
          "components": Object {
            "CardItem": [Function],
            "CardWithHeader": [Function],
            "Color": [Function],
            "Date": [Function],
            "DateTime": [Function],
            "Email": [Function],
            "ListItemTemplate": [Function],
            "ModalUniformedArrayCard": [Function],
            "ModalUniformedArrayInline": [Function],
            "ModalVariedArrayCard": [Function],
            "ModalVariedArrayInline": [Function],
            "Number": [Function],
            "Password": [Function],
            "SingleSelect": [Function],
            "Text": [Function],
            "TextArea": [Function],
            "UniformedArrayCard": [Function],
            "UniformedArrayInline": [Function],
            "VariedArrayCard": [Function],
            "VariedArrayInline": [Function],
          },
          "prefix": "meta.vis",
          "schema": Object {
            "id": "VariedArrayCard",
            "items": Object {
              "anyOf": Array [
                Object {
                  "id": "Bar",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "bar": Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 2,
                        },
                      },
                      "title": "Bar",
                      "type": "string",
                    },
                    "name": Object {
                      "id": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Bar",
                  "type": "object",
                },
                Object {
                  "id": "Baz",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "baz": Object {
                      "id": "Baz",
                      "meta": Object {
                        "vis": Object {
                          "component": "Number",
                          "ordinal": 2,
                        },
                      },
                      "title": "Baz",
                      "type": "number",
                    },
                    "name": Object {
                      "it": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Baz",
                  "type": "object",
                },
              ],
              "id": "FooCard",
              "meta": Object {
                "vis": Object {
                  "component": "SingleSelect",
                },
              },
              "title": "Foo Card",
              "type": "object",
            },
            "title": "Varied Array Card",
            "type": "array",
          },
        }
      }
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      withRef={true}
    >
      <Form(StyledComponent)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncErrors={undefined}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={true}
        dispatch={[Function]}
        enableReinitialize={false}
        error={undefined}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="TestForm"
        getFormState={[Function]}
        initialValues={undefined}
        initialize={[Function]}
        initialized={false}
        invalid={false}
        keepDirtyOnReinitialize={false}
        name="foobar"
        persistentSubmitErrors={false}
        pristine={false}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "foobar": Object {
              "count": 1,
              "name": "foobar",
              "type": "FieldArray",
            },
          }
        }
        reset={[Function]}
        schemaVis={
          Object {
            "components": Object {
              "CardItem": [Function],
              "CardWithHeader": [Function],
              "Color": [Function],
              "Date": [Function],
              "DateTime": [Function],
              "Email": [Function],
              "ListItemTemplate": [Function],
              "ModalUniformedArrayCard": [Function],
              "ModalUniformedArrayInline": [Function],
              "ModalVariedArrayCard": [Function],
              "ModalVariedArrayInline": [Function],
              "Number": [Function],
              "Password": [Function],
              "SingleSelect": [Function],
              "Text": [Function],
              "TextArea": [Function],
              "UniformedArrayCard": [Function],
              "UniformedArrayInline": [Function],
              "VariedArrayCard": [Function],
              "VariedArrayInline": [Function],
            },
            "prefix": "meta.vis",
            "schema": Object {
              "id": "VariedArrayCard",
              "items": Object {
                "anyOf": Array [
                  Object {
                    "id": "Bar",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "bar": Object {
                        "id": "Bar",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 2,
                          },
                        },
                        "title": "Bar",
                        "type": "string",
                      },
                      "name": Object {
                        "id": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Bar",
                    "type": "object",
                  },
                  Object {
                    "id": "Baz",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "baz": Object {
                        "id": "Baz",
                        "meta": Object {
                          "vis": Object {
                            "component": "Number",
                            "ordinal": 2,
                          },
                        },
                        "title": "Baz",
                        "type": "number",
                      },
                      "name": Object {
                        "it": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Baz",
                    "type": "object",
                  },
                ],
                "id": "FooCard",
                "meta": Object {
                  "vis": Object {
                    "component": "SingleSelect",
                  },
                },
                "title": "Foo Card",
                "type": "object",
              },
              "title": "Varied Array Card",
              "type": "array",
            },
          }
        }
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldError={[Function]}
        shouldValidate={[Function]}
        shouldWarn={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={Object {}}
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        triggerSubmit={undefined}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={true}
        validExceptSubmit={true}
        values={
          Object {
            "foobar": Array [
              Object {
                "bar": undefined,
                "name": "name",
              },
            ],
          }
        }
        warning={undefined}
        withRef={true}
      >
        <StyledComponent
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={true}
          dispatch={[Function]}
          error={undefined}
          form="TestForm"
          handleSubmit={[Function]}
          initialValues={undefined}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          name="foobar"
          pristine={false}
          pure={true}
          reset={[Function]}
          schemaVis={
            Object {
              "components": Object {
                "CardItem": [Function],
                "CardWithHeader": [Function],
                "Color": [Function],
                "Date": [Function],
                "DateTime": [Function],
                "Email": [Function],
                "ListItemTemplate": [Function],
                "ModalUniformedArrayCard": [Function],
                "ModalUniformedArrayInline": [Function],
                "ModalVariedArrayCard": [Function],
                "ModalVariedArrayInline": [Function],
                "Number": [Function],
                "Password": [Function],
                "SingleSelect": [Function],
                "Text": [Function],
                "TextArea": [Function],
                "UniformedArrayCard": [Function],
                "UniformedArrayInline": [Function],
                "VariedArrayCard": [Function],
                "VariedArrayInline": [Function],
              },
              "prefix": "meta.vis",
              "schema": Object {
                "id": "VariedArrayCard",
                "items": Object {
                  "anyOf": Array [
                    Object {
                      "id": "Bar",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "bar": Object {
                          "id": "Bar",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 2,
                            },
                          },
                          "title": "Bar",
                          "type": "string",
                        },
                        "name": Object {
                          "id": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Bar",
                      "type": "object",
                    },
                    Object {
                      "id": "Baz",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "baz": Object {
                          "id": "Baz",
                          "meta": Object {
                            "vis": Object {
                              "component": "Number",
                              "ordinal": 2,
                            },
                          },
                          "title": "Baz",
                          "type": "number",
                        },
                        "name": Object {
                          "it": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Baz",
                      "type": "object",
                    },
                  ],
                  "id": "FooCard",
                  "meta": Object {
                    "vis": Object {
                      "component": "SingleSelect",
                    },
                  },
                  "title": "Foo Card",
                  "type": "object",
                },
                "title": "Varied Array Card",
                "type": "array",
              },
            }
          }
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          triggerSubmit={undefined}
          untouch={[Function]}
          valid={true}
          warning={undefined}
          withRef={true}
        >
          <ModalVariedArrayCard
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            classes={
              Object {
                "addButton": "addButton-0-30",
                "container": "container-0-28",
                "header": "header-0-29",
                "headerTitle": "headerTitle-0-31",
              }
            }
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={true}
            dispatch={[Function]}
            error={undefined}
            form="TestForm"
            handleSubmit={[Function]}
            initialValues={undefined}
            initialize={[Function]}
            initialized={false}
            invalid={false}
            name="foobar"
            pristine={false}
            pure={true}
            reset={[Function]}
            schemaVis={
              Object {
                "components": Object {
                  "CardItem": [Function],
                  "CardWithHeader": [Function],
                  "Color": [Function],
                  "Date": [Function],
                  "DateTime": [Function],
                  "Email": [Function],
                  "ListItemTemplate": [Function],
                  "ModalUniformedArrayCard": [Function],
                  "ModalUniformedArrayInline": [Function],
                  "ModalVariedArrayCard": [Function],
                  "ModalVariedArrayInline": [Function],
                  "Number": [Function],
                  "Password": [Function],
                  "SingleSelect": [Function],
                  "Text": [Function],
                  "TextArea": [Function],
                  "UniformedArrayCard": [Function],
                  "UniformedArrayInline": [Function],
                  "VariedArrayCard": [Function],
                  "VariedArrayInline": [Function],
                },
                "prefix": "meta.vis",
                "schema": Object {
                  "id": "VariedArrayCard",
                  "items": Object {
                    "anyOf": Array [
                      Object {
                        "id": "Bar",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "bar": Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 2,
                              },
                            },
                            "title": "Bar",
                            "type": "string",
                          },
                          "name": Object {
                            "id": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Bar",
                        "type": "object",
                      },
                      Object {
                        "id": "Baz",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "baz": Object {
                            "id": "Baz",
                            "meta": Object {
                              "vis": Object {
                                "component": "Number",
                                "ordinal": 2,
                              },
                            },
                            "title": "Baz",
                            "type": "number",
                          },
                          "name": Object {
                            "it": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Baz",
                        "type": "object",
                      },
                    ],
                    "id": "FooCard",
                    "meta": Object {
                      "vis": Object {
                        "component": "SingleSelect",
                      },
                    },
                    "title": "Foo Card",
                    "type": "object",
                  },
                  "title": "Varied Array Card",
                  "type": "array",
                },
              }
            }
            sheet={
              StyleSheet {
                "attached": true,
                "classes": Object {
                  "addButton": "addButton-0-30",
                  "container": "container-0-28",
                  "header": "header-0-29",
                  "headerTitle": "headerTitle-0-31",
                },
                "deployed": true,
                "linked": false,
                "options": Object {
                  "Renderer": [Function],
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "generateClassName": [Function],
                  "index": 0,
                  "insertionPoint": undefined,
                  "jss": Jss {
                    "generateClassName": [Function],
                    "options": Object {
                      "Renderer": [Function],
                      "createGenerateClassName": [Function],
                      "plugins": Array [
                        Object {
                          "onCreateRule": [Function],
                          "onProcessRule": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessRule": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                      ],
                    },
                    "plugins": PluginsRegistry {
                      "hooks": Object {
                        "onChangeValue": Array [
                          [Function],
                          [Function],
                        ],
                        "onCreateRule": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "onProcessRule": Array [
                          [Function],
                          [Function],
                        ],
                        "onProcessSheet": Array [],
                        "onProcessStyle": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                    },
                    "version": "8.1.0",
                  },
                  "parent": [Circular],
                  "sheet": [Circular],
                },
                "renderer": DomRenderer {
                  "element": <style
                    data-jss=""
                    type="text/css"
                  >
                    
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                  </style>,
                  "getSelector": [Function],
                  "getStyle": [Function],
                  "hasInsertedRules": false,
                  "setSelector": [Function],
                  "setStyle": [Function],
                  "sheet": [Circular],
                },
                "rules": RuleList {
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "index": Array [
                    Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    Object {
                      "margin-left": "auto",
                    },
                    Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  ],
                  "map": Object {
                    ".addButton-0-30": Object {
                      "margin-left": "auto",
                    },
                    ".container-0-28": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    ".header-0-29": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    ".headerTitle-0-31": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                    "addButton": Object {
                      "margin-left": "auto",
                    },
                    "container": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    "headerTitle": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  },
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "raw": Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  },
                },
              }
            }
            styles={
              Object {
                "addButton": Object {
                  "marginLeft": "auto",
                },
                "container": Object {
                  "marginBottom": 10,
                  "marginTop": 15,
                },
                "header": Object {
                  "display": "inline-flex",
                  "padding": 5,
                  "paddingLeft": 10,
                },
                "headerTitle": Object {
                  "marginBottom": "auto",
                  "marginTop": "auto",
                },
              }
            }
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            touch={[Function]}
            triggerSubmit={undefined}
            untouch={[Function]}
            valid={true}
            warning={undefined}
            withRef={true}
          >
            <FieldArray
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              asyncValidate={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              bodyProps={
                Object {
                  "flush": true,
                }
              }
              change={[Function]}
              classes={
                Object {
                  "addButton": "addButton-0-30",
                  "container": "container-0-28",
                  "header": "header-0-29",
                  "headerTitle": "headerTitle-0-31",
                }
              }
              clearAsyncError={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              component={[Function]}
              destroy={[Function]}
              dirty={true}
              dispatch={[Function]}
              error={undefined}
              form="TestForm"
              formName="variedArrayCardItem"
              handleSubmit={[Function]}
              initialValues={undefined}
              initialize={[Function]}
              initialized={false}
              invalid={false}
              name="foobar"
              pristine={false}
              pure={true}
              reset={[Function]}
              schemaVis={
                Object {
                  "components": Object {
                    "CardItem": [Function],
                    "CardWithHeader": [Function],
                    "Color": [Function],
                    "Date": [Function],
                    "DateTime": [Function],
                    "Email": [Function],
                    "ListItemTemplate": [Function],
                    "ModalUniformedArrayCard": [Function],
                    "ModalUniformedArrayInline": [Function],
                    "ModalVariedArrayCard": [Function],
                    "ModalVariedArrayInline": [Function],
                    "Number": [Function],
                    "Password": [Function],
                    "SingleSelect": [Function],
                    "Text": [Function],
                    "TextArea": [Function],
                    "UniformedArrayCard": [Function],
                    "UniformedArrayInline": [Function],
                    "VariedArrayCard": [Function],
                    "VariedArrayInline": [Function],
                  },
                  "prefix": "meta.vis",
                  "schema": Object {
                    "id": "VariedArrayCard",
                    "items": Object {
                      "anyOf": Array [
                        Object {
                          "id": "Bar",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "bar": Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Bar",
                              "type": "string",
                            },
                            "name": Object {
                              "id": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Bar",
                          "type": "object",
                        },
                        Object {
                          "id": "Baz",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "baz": Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Number",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Baz",
                              "type": "number",
                            },
                            "name": Object {
                              "it": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Baz",
                          "type": "object",
                        },
                      ],
                      "id": "FooCard",
                      "meta": Object {
                        "vis": Object {
                          "component": "SingleSelect",
                        },
                      },
                      "title": "Foo Card",
                      "type": "object",
                    },
                    "title": "Varied Array Card",
                    "type": "array",
                  },
                }
              }
              sheet={
                StyleSheet {
                  "attached": true,
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "deployed": true,
                  "linked": false,
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "renderer": DomRenderer {
                    "element": <style
                      data-jss=""
                      type="text/css"
                    >
                      
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                    </style>,
                    "getSelector": [Function],
                    "getStyle": [Function],
                    "hasInsertedRules": false,
                    "setSelector": [Function],
                    "setStyle": [Function],
                    "sheet": [Circular],
                  },
                  "rules": RuleList {
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "index": Array [
                      Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      Object {
                        "margin-left": "auto",
                      },
                      Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    ],
                    "map": Object {
                      ".addButton-0-30": Object {
                        "margin-left": "auto",
                      },
                      ".container-0-28": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      ".header-0-29": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      ".headerTitle-0-31": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                      "addButton": Object {
                        "margin-left": "auto",
                      },
                      "container": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      "headerTitle": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    },
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "raw": Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    },
                  },
                }
              }
              styles={
                Object {
                  "addButton": Object {
                    "marginLeft": "auto",
                  },
                  "container": Object {
                    "marginBottom": 10,
                    "marginTop": 15,
                  },
                  "header": Object {
                    "display": "inline-flex",
                    "padding": 5,
                    "paddingLeft": 10,
                  },
                  "headerTitle": Object {
                    "marginBottom": "auto",
                    "marginTop": "auto",
                  },
                }
              }
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              touch={[Function]}
              triggerSubmit={undefined}
              untouch={[Function]}
              valid={true}
              validate={[Function]}
              warning={undefined}
              withRef={true}
            >
              <Connect(ConnectedFieldArray)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": true,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "TestForm",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "name": "foobar",
                    "persistentSubmitErrors": false,
                    "pristine": false,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "foobar": Object {
                        "count": 1,
                        "name": "foobar",
                        "type": "FieldArray",
                      },
                    },
                    "reset": [Function],
                    "schemaVis": Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    },
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldError": [Function],
                    "shouldValidate": [Function],
                    "shouldWarn": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {
                      "foobar": Array [
                        Object {
                          "bar": undefined,
                          "name": "name",
                        },
                      ],
                    },
                    "warning": undefined,
                    "withRef": true,
                  }
                }
                anyTouched={false}
                array={
                  Object {
                    "insert": [Function],
                    "move": [Function],
                    "pop": [Function],
                    "push": [Function],
                    "remove": [Function],
                    "removeAll": [Function],
                    "shift": [Function],
                    "splice": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                  }
                }
                asyncValidate={[Function]}
                asyncValidating={false}
                autofill={[Function]}
                blur={[Function]}
                bodyProps={
                  Object {
                    "flush": true,
                  }
                }
                change={[Function]}
                classes={
                  Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  }
                }
                clearAsyncError={[Function]}
                clearSubmit={[Function]}
                clearSubmitErrors={[Function]}
                component={[Function]}
                destroy={[Function]}
                dirty={true}
                dispatch={[Function]}
                error={undefined}
                form="TestForm"
                formName="variedArrayCardItem"
                handleSubmit={[Function]}
                initialValues={undefined}
                initialize={[Function]}
                initialized={false}
                invalid={false}
                name="foobar"
                pristine={false}
                pure={true}
                reset={[Function]}
                schemaVis={
                  Object {
                    "components": Object {
                      "CardItem": [Function],
                      "CardWithHeader": [Function],
                      "Color": [Function],
                      "Date": [Function],
                      "DateTime": [Function],
                      "Email": [Function],
                      "ListItemTemplate": [Function],
                      "ModalUniformedArrayCard": [Function],
                      "ModalUniformedArrayInline": [Function],
                      "ModalVariedArrayCard": [Function],
                      "ModalVariedArrayInline": [Function],
                      "Number": [Function],
                      "Password": [Function],
                      "SingleSelect": [Function],
                      "Text": [Function],
                      "TextArea": [Function],
                      "UniformedArrayCard": [Function],
                      "UniformedArrayInline": [Function],
                      "VariedArrayCard": [Function],
                      "VariedArrayInline": [Function],
                    },
                    "prefix": "meta.vis",
                    "schema": Object {
                      "id": "VariedArrayCard",
                      "items": Object {
                        "anyOf": Array [
                          Object {
                            "id": "Bar",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "bar": Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Bar",
                                "type": "string",
                              },
                              "name": Object {
                                "id": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Bar",
                            "type": "object",
                          },
                          Object {
                            "id": "Baz",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "baz": Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Number",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Baz",
                                "type": "number",
                              },
                              "name": Object {
                                "it": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Baz",
                            "type": "object",
                          },
                        ],
                        "id": "FooCard",
                        "meta": Object {
                          "vis": Object {
                            "component": "SingleSelect",
                          },
                        },
                        "title": "Foo Card",
                        "type": "object",
                      },
                      "title": "Varied Array Card",
                      "type": "array",
                    },
                  }
                }
                sheet={
                  StyleSheet {
                    "attached": true,
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "deployed": true,
                    "linked": false,
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "renderer": DomRenderer {
                      "element": <style
                        data-jss=""
                        type="text/css"
                      >
                        
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                      </style>,
                      "getSelector": [Function],
                      "getStyle": [Function],
                      "hasInsertedRules": false,
                      "setSelector": [Function],
                      "setStyle": [Function],
                      "sheet": [Circular],
                    },
                    "rules": RuleList {
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "index": Array [
                        Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        Object {
                          "margin-left": "auto",
                        },
                        Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      ],
                      "map": Object {
                        ".addButton-0-30": Object {
                          "margin-left": "auto",
                        },
                        ".container-0-28": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        ".header-0-29": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        ".headerTitle-0-31": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                        "addButton": Object {
                          "margin-left": "auto",
                        },
                        "container": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        "headerTitle": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      },
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "raw": Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      },
                    },
                  }
                }
                styles={
                  Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  }
                }
                submit={[Function]}
                submitFailed={false}
                submitSucceeded={false}
                submitting={false}
                touch={[Function]}
                triggerSubmit={undefined}
                untouch={[Function]}
                valid={true}
                validate={[Function]}
                warning={undefined}
                withRef={true}
              >
                <ConnectedFieldArray
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": true,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "TestForm",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "name": "foobar",
                      "persistentSubmitErrors": false,
                      "pristine": false,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "foobar": Object {
                          "count": 1,
                          "name": "foobar",
                          "type": "FieldArray",
                        },
                      },
                      "reset": [Function],
                      "schemaVis": Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      },
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldError": [Function],
                      "shouldValidate": [Function],
                      "shouldWarn": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {
                        "foobar": Array [
                          Object {
                            "bar": undefined,
                            "name": "name",
                          },
                        ],
                      },
                      "warning": undefined,
                      "withRef": true,
                    }
                  }
                  anyTouched={false}
                  array={
                    Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    }
                  }
                  arrayInsert={[Function]}
                  arrayMove={[Function]}
                  arrayPop={[Function]}
                  arrayPush={[Function]}
                  arrayRemove={[Function]}
                  arrayRemoveAll={[Function]}
                  arrayShift={[Function]}
                  arraySplice={[Function]}
                  arraySwap={[Function]}
                  arrayUnshift={[Function]}
                  asyncError={undefined}
                  asyncValidate={[Function]}
                  asyncValidating={false}
                  autofill={[Function]}
                  blur={[Function]}
                  bodyProps={
                    Object {
                      "flush": true,
                    }
                  }
                  change={[Function]}
                  classes={
                    Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    }
                  }
                  clearAsyncError={[Function]}
                  clearSubmit={[Function]}
                  clearSubmitErrors={[Function]}
                  component={[Function]}
                  destroy={[Function]}
                  dirty={true}
                  dispatch={[Function]}
                  error={undefined}
                  form="TestForm"
                  formName="variedArrayCardItem"
                  handleSubmit={[Function]}
                  initialValues={undefined}
                  initialize={[Function]}
                  initialized={false}
                  invalid={false}
                  length={1}
                  name="foobar"
                  pristine={false}
                  pure={true}
                  rerenderOnEveryChange={false}
                  reset={[Function]}
                  schemaVis={
                    Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    }
                  }
                  sheet={
                    StyleSheet {
                      "attached": true,
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "deployed": true,
                      "linked": false,
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "renderer": DomRenderer {
                        "element": <style
                          data-jss=""
                          type="text/css"
                        >
                          
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                        </style>,
                        "getSelector": [Function],
                        "getStyle": [Function],
                        "hasInsertedRules": false,
                        "setSelector": [Function],
                        "setStyle": [Function],
                        "sheet": [Circular],
                      },
                      "rules": RuleList {
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "index": Array [
                          Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          Object {
                            "margin-left": "auto",
                          },
                          Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        ],
                        "map": Object {
                          ".addButton-0-30": Object {
                            "margin-left": "auto",
                          },
                          ".container-0-28": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          ".header-0-29": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          ".headerTitle-0-31": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                          "addButton": Object {
                            "margin-left": "auto",
                          },
                          "container": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          "headerTitle": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        },
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "raw": Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        },
                      },
                    }
                  }
                  state={undefined}
                  styles={
                    Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    }
                  }
                  submit={[Function]}
                  submitError={undefined}
                  submitFailed={undefined}
                  submitSucceeded={false}
                  submitting={undefined}
                  syncError={undefined}
                  syncWarning={undefined}
                  touch={[Function]}
                  triggerSubmit={undefined}
                  untouch={[Function]}
                  valid={true}
                  validate={[Function]}
                  value={
                    Array [
                      Object {
                        "bar": undefined,
                        "name": "name",
                      },
                    ]
                  }
                  warning={undefined}
                  withRef={true}
                >
                  <Connect(ModalVariedArray)
                    anyTouched={false}
                    array={
                      Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    asyncValidate={[Function]}
                    asyncValidating={false}
                    autofill={[Function]}
                    blur={[Function]}
                    bodyProps={
                      Object {
                        "flush": true,
                      }
                    }
                    change={[Function]}
                    classes={
                      Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      }
                    }
                    clearAsyncError={[Function]}
                    clearSubmit={[Function]}
                    clearSubmitErrors={[Function]}
                    destroy={[Function]}
                    dispatch={[Function]}
                    error={undefined}
                    fields={
                      Object {
                        "_isFieldArray": true,
                        "forEach": [Function],
                        "get": [Function],
                        "getAll": [Function],
                        "insert": [Function],
                        "length": 1,
                        "map": [Function],
                        "move": [Function],
                        "name": "foobar",
                        "pop": [Function],
                        "push": [Function],
                        "reduce": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    form="TestForm"
                    formName="variedArrayCardItem"
                    handleSubmit={[Function]}
                    initialValues={undefined}
                    initialize={[Function]}
                    initialized={false}
                    invalid={false}
                    meta={
                      Object {
                        "dirty": true,
                        "error": undefined,
                        "form": "TestForm",
                        "invalid": false,
                        "pristine": false,
                        "submitFailed": undefined,
                        "submitting": undefined,
                        "valid": true,
                        "warning": undefined,
                      }
                    }
                    pure={true}
                    reset={[Function]}
                    schemaVis={
                      Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      }
                    }
                    sheet={
                      StyleSheet {
                        "attached": true,
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "deployed": true,
                        "linked": false,
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "renderer": DomRenderer {
                          "element": <style
                            data-jss=""
                            type="text/css"
                          >
                            
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                          </style>,
                          "getSelector": [Function],
                          "getStyle": [Function],
                          "hasInsertedRules": false,
                          "setSelector": [Function],
                          "setStyle": [Function],
                          "sheet": [Circular],
                        },
                        "rules": RuleList {
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "index": Array [
                            Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            Object {
                              "margin-left": "auto",
                            },
                            Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          ],
                          "map": Object {
                            ".addButton-0-30": Object {
                              "margin-left": "auto",
                            },
                            ".container-0-28": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            ".header-0-29": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            ".headerTitle-0-31": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                            "addButton": Object {
                              "margin-left": "auto",
                            },
                            "container": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            "headerTitle": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          },
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "raw": Object {
                            "addButton": Object {
                              "marginLeft": "auto",
                            },
                            "container": Object {
                              "marginBottom": 10,
                              "marginTop": 15,
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": 5,
                              "paddingLeft": 10,
                            },
                            "headerTitle": Object {
                              "marginBottom": "auto",
                              "marginTop": "auto",
                            },
                          },
                        },
                      }
                    }
                    styles={
                      Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      }
                    }
                    submit={[Function]}
                    submitSucceeded={false}
                    touch={[Function]}
                    triggerSubmit={undefined}
                    untouch={[Function]}
                    valid={true}
                    warning={undefined}
                  >
                    <ModalVariedArray
                      addBtnProps={Object {}}
                      anyTouched={false}
                      array={
                        Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "splice": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      asyncValidate={[Function]}
                      asyncValidating={false}
                      autofill={[Function]}
                      blur={[Function]}
                      bodyProps={
                        Object {
                          "flush": true,
                        }
                      }
                      bodyTag={[Function]}
                      change={[Function]}
                      changeForm={[Function]}
                      classes={
                        Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        }
                      }
                      clearAsyncError={[Function]}
                      clearSubmit={[Function]}
                      clearSubmitErrors={[Function]}
                      dataSchemaPrefix="meta.data"
                      destroy={[Function]}
                      destroyForm={[Function]}
                      dispatch={[Function]}
                      error={undefined}
                      fields={
                        Object {
                          "_isFieldArray": true,
                          "forEach": [Function],
                          "get": [Function],
                          "getAll": [Function],
                          "insert": [Function],
                          "length": 1,
                          "map": [Function],
                          "move": [Function],
                          "name": "foobar",
                          "pop": [Function],
                          "push": [Function],
                          "reduce": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      form="TestForm"
                      formName="variedArrayCardItem"
                      handleSubmit={[Function]}
                      headerTag={[Function]}
                      initialValues={undefined}
                      initialize={[Function]}
                      initialized={false}
                      invalid={false}
                      items={
                        Array [
                          Object {
                            "bar": undefined,
                            "name": "name",
                          },
                        ]
                      }
                      meta={
                        Object {
                          "dirty": true,
                          "error": undefined,
                          "form": "TestForm",
                          "invalid": false,
                          "pristine": false,
                          "submitFailed": undefined,
                          "submitting": undefined,
                          "valid": true,
                          "warning": undefined,
                        }
                      }
                      pure={true}
                      required={false}
                      reset={[Function]}
                      schemaVis={
                        Object {
                          "components": Object {
                            "CardItem": [Function],
                            "CardWithHeader": [Function],
                            "Color": [Function],
                            "Date": [Function],
                            "DateTime": [Function],
                            "Email": [Function],
                            "ListItemTemplate": [Function],
                            "ModalUniformedArrayCard": [Function],
                            "ModalUniformedArrayInline": [Function],
                            "ModalVariedArrayCard": [Function],
                            "ModalVariedArrayInline": [Function],
                            "Number": [Function],
                            "Password": [Function],
                            "SingleSelect": [Function],
                            "Text": [Function],
                            "TextArea": [Function],
                            "UniformedArrayCard": [Function],
                            "UniformedArrayInline": [Function],
                            "VariedArrayCard": [Function],
                            "VariedArrayInline": [Function],
                          },
                          "prefix": "meta.vis",
                          "schema": Object {
                            "id": "VariedArrayCard",
                            "items": Object {
                              "anyOf": Array [
                                Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "bar": Object {
                                      "id": "Bar",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Bar",
                                      "type": "string",
                                    },
                                    "name": Object {
                                      "id": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "object",
                                },
                                Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "baz": Object {
                                      "id": "Baz",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Number",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Baz",
                                      "type": "number",
                                    },
                                    "name": Object {
                                      "it": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "object",
                                },
                              ],
                              "id": "FooCard",
                              "meta": Object {
                                "vis": Object {
                                  "component": "SingleSelect",
                                },
                              },
                              "title": "Foo Card",
                              "type": "object",
                            },
                            "title": "Varied Array Card",
                            "type": "array",
                          },
                        }
                      }
                      selectInputProps={Object {}}
                      sheet={
                        StyleSheet {
                          "attached": true,
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "deployed": true,
                          "linked": false,
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "renderer": DomRenderer {
                            "element": <style
                              data-jss=""
                              type="text/css"
                            >
                              
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                            </style>,
                            "getSelector": [Function],
                            "getStyle": [Function],
                            "hasInsertedRules": false,
                            "setSelector": [Function],
                            "setStyle": [Function],
                            "sheet": [Circular],
                          },
                          "rules": RuleList {
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "index": Array [
                              Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              Object {
                                "margin-left": "auto",
                              },
                              Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            ],
                            "map": Object {
                              ".addButton-0-30": Object {
                                "margin-left": "auto",
                              },
                              ".container-0-28": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              ".header-0-29": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              ".headerTitle-0-31": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                              "addButton": Object {
                                "margin-left": "auto",
                              },
                              "container": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              "headerTitle": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            },
                            "options": Object {
                              "Renderer": [Function],
                              "classes": Object {
                                "addButton": "addButton-0-30",
                                "container": "container-0-28",
                                "header": "header-0-29",
                                "headerTitle": "headerTitle-0-31",
                              },
                              "generateClassName": [Function],
                              "index": 0,
                              "insertionPoint": undefined,
                              "jss": Jss {
                                "generateClassName": [Function],
                                "options": Object {
                                  "Renderer": [Function],
                                  "createGenerateClassName": [Function],
                                  "plugins": Array [
                                    Object {
                                      "onCreateRule": [Function],
                                      "onProcessRule": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessRule": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                  ],
                                },
                                "plugins": PluginsRegistry {
                                  "hooks": Object {
                                    "onChangeValue": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onCreateRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessRule": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessSheet": Array [],
                                    "onProcessStyle": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                },
                                "version": "8.1.0",
                              },
                              "parent": [Circular],
                              "sheet": [Circular],
                            },
                            "raw": Object {
                              "addButton": Object {
                                "marginLeft": "auto",
                              },
                              "container": Object {
                                "marginBottom": 10,
                                "marginTop": 15,
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": 5,
                                "paddingLeft": 10,
                              },
                              "headerTitle": Object {
                                "marginBottom": "auto",
                                "marginTop": "auto",
                              },
                            },
                          },
                        }
                      }
                      styles={
                        Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        }
                      }
                      submit={[Function]}
                      submitForm={[Function]}
                      submitSucceeded={false}
                      tag={[Function]}
                      touch={[Function]}
                      triggerSubmit={undefined}
                      untouch={[Function]}
                      valid={true}
                      warning={undefined}
                    >
                      <div>
                        <Card
                          className="container-0-28"
                          tag="div"
                        >
                          <div
                            className="container-0-28 card"
                          >
                            <CardHeader
                              className="header-0-29"
                              tag="div"
                            >
                              <div
                                className="header-0-29 card-header"
                              >
                                <div
                                  className="headerTitle-0-31"
                                >
                                  Varied Array Card
                                </div>
                                <div
                                  className="addButton-0-30"
                                >
                                  <Button
                                    color="primary"
                                    onClick={[Function]}
                                    size="sm"
                                    tag="button"
                                  >
                                    <button
                                      className="btn btn-primary btn-sm"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Add
                                    </button>
                                  </Button>
                                </div>
                              </div>
                            </CardHeader>
                            <ListGroup
                              className={undefined}
                              flush={true}
                              tag="ul"
                            >
                              <ul
                                className="list-group list-group-flush"
                              >
                                <SchemaVis
                                  componentProps={
                                    Object {
                                      "ListItemTemplate": Object {
                                        "removeBtnProps": Object {
                                          "onClick": [Function],
                                        },
                                        "selectBtnProps": Object {
                                          "onClick": [Function],
                                        },
                                      },
                                    }
                                  }
                                  components={
                                    Object {
                                      "CardItem": [Function],
                                      "CardWithHeader": [Function],
                                      "Color": [Function],
                                      "Date": [Function],
                                      "DateTime": [Function],
                                      "Email": [Function],
                                      "ListItemTemplate": [Function],
                                      "ModalUniformedArrayCard": [Function],
                                      "ModalUniformedArrayInline": [Function],
                                      "ModalVariedArrayCard": [Function],
                                      "ModalVariedArrayInline": [Function],
                                      "Number": [Function],
                                      "Password": [Function],
                                      "SingleSelect": [Function],
                                      "Text": [Function],
                                      "TextArea": [Function],
                                      "UniformedArrayCard": [Function],
                                      "UniformedArrayInline": [Function],
                                      "VariedArrayCard": [Function],
                                      "VariedArrayInline": [Function],
                                    }
                                  }
                                  data={
                                    Object {
                                      "bar": undefined,
                                      "name": "name",
                                    }
                                  }
                                  id="schemaVis"
                                  key="0"
                                  prefix="meta.data"
                                  schema={
                                    Object {
                                      "id": "Bar",
                                      "meta": Object {
                                        "data": Object {
                                          "component": "ListItemTemplate",
                                          "template": Array [
                                            "\${name} (Bar: \${bar})",
                                            "\${name}",
                                          ],
                                        },
                                      },
                                      "properties": Object {
                                        "bar": Object {
                                          "id": "Bar",
                                          "meta": Object {
                                            "vis": Object {
                                              "component": "Text",
                                              "ordinal": 2,
                                            },
                                          },
                                          "title": "Bar",
                                          "type": "string",
                                        },
                                        "name": Object {
                                          "id": "Name",
                                          "meta": Object {
                                            "vis": Object {
                                              "component": "Text",
                                              "ordinal": 1,
                                            },
                                          },
                                          "title": "Name",
                                          "type": "string",
                                        },
                                      },
                                      "title": "Bar",
                                      "type": "object",
                                    }
                                  }
                                  styles={Object {}}
                                  tag="div"
                                >
                                  <StyledComponent
                                    data={
                                      Object {
                                        "bar": undefined,
                                        "name": "name",
                                      }
                                    }
                                    id="schemaVis"
                                    key="schemaVis"
                                    name={undefined}
                                    removeBtnProps={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    required={false}
                                    schemaVis={
                                      Object {
                                        "componentProps": Object {
                                          "ListItemTemplate": Object {
                                            "removeBtnProps": Object {
                                              "onClick": [Function],
                                            },
                                            "selectBtnProps": Object {
                                              "onClick": [Function],
                                            },
                                          },
                                        },
                                        "components": Object {
                                          "CardItem": [Function],
                                          "CardWithHeader": [Function],
                                          "Color": [Function],
                                          "Date": [Function],
                                          "DateTime": [Function],
                                          "Email": [Function],
                                          "ListItemTemplate": [Function],
                                          "ModalUniformedArrayCard": [Function],
                                          "ModalUniformedArrayInline": [Function],
                                          "ModalVariedArrayCard": [Function],
                                          "ModalVariedArrayInline": [Function],
                                          "Number": [Function],
                                          "Password": [Function],
                                          "SingleSelect": [Function],
                                          "Text": [Function],
                                          "TextArea": [Function],
                                          "UniformedArrayCard": [Function],
                                          "UniformedArrayInline": [Function],
                                          "VariedArrayCard": [Function],
                                          "VariedArrayInline": [Function],
                                        },
                                        "defaultComponents": undefined,
                                        "definitions": Object {},
                                        "prefix": "meta.data",
                                        "schema": Object {
                                          "id": "Bar",
                                          "meta": Object {
                                            "data": Object {
                                              "component": "ListItemTemplate",
                                              "template": Array [
                                                "\${name} (Bar: \${bar})",
                                                "\${name}",
                                              ],
                                            },
                                          },
                                          "properties": Object {
                                            "bar": Object {
                                              "id": "Bar",
                                              "meta": Object {
                                                "vis": Object {
                                                  "component": "Text",
                                                  "ordinal": 2,
                                                },
                                              },
                                              "title": "Bar",
                                              "type": "string",
                                            },
                                            "name": Object {
                                              "id": "Name",
                                              "meta": Object {
                                                "vis": Object {
                                                  "component": "Text",
                                                  "ordinal": 1,
                                                },
                                              },
                                              "title": "Name",
                                              "type": "string",
                                            },
                                          },
                                          "title": "Bar",
                                          "type": "object",
                                        },
                                      }
                                    }
                                    selectBtnProps={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    styles={Object {}}
                                  >
                                    <ListItemTemplate
                                      classes={
                                        Object {
                                          ".list-group-item": "list-group-item",
                                          "listItem": "listItem-0-35",
                                          "removeItem": "removeItem-0-36",
                                        }
                                      }
                                      data={
                                        Object {
                                          "bar": undefined,
                                          "name": "name",
                                        }
                                      }
                                      id="schemaVis"
                                      name={undefined}
                                      removeBtnProps={
                                        Object {
                                          "onClick": [Function],
                                        }
                                      }
                                      required={false}
                                      schemaVis={
                                        Object {
                                          "componentProps": Object {
                                            "ListItemTemplate": Object {
                                              "removeBtnProps": Object {
                                                "onClick": [Function],
                                              },
                                              "selectBtnProps": Object {
                                                "onClick": [Function],
                                              },
                                            },
                                          },
                                          "components": Object {
                                            "CardItem": [Function],
                                            "CardWithHeader": [Function],
                                            "Color": [Function],
                                            "Date": [Function],
                                            "DateTime": [Function],
                                            "Email": [Function],
                                            "ListItemTemplate": [Function],
                                            "ModalUniformedArrayCard": [Function],
                                            "ModalUniformedArrayInline": [Function],
                                            "ModalVariedArrayCard": [Function],
                                            "ModalVariedArrayInline": [Function],
                                            "Number": [Function],
                                            "Password": [Function],
                                            "SingleSelect": [Function],
                                            "Text": [Function],
                                            "TextArea": [Function],
                                            "UniformedArrayCard": [Function],
                                            "UniformedArrayInline": [Function],
                                            "VariedArrayCard": [Function],
                                            "VariedArrayInline": [Function],
                                          },
                                          "defaultComponents": undefined,
                                          "definitions": Object {},
                                          "prefix": "meta.data",
                                          "schema": Object {
                                            "id": "Bar",
                                            "meta": Object {
                                              "data": Object {
                                                "component": "ListItemTemplate",
                                                "template": Array [
                                                  "\${name} (Bar: \${bar})",
                                                  "\${name}",
                                                ],
                                              },
                                            },
                                            "properties": Object {
                                              "bar": Object {
                                                "id": "Bar",
                                                "meta": Object {
                                                  "vis": Object {
                                                    "component": "Text",
                                                    "ordinal": 2,
                                                  },
                                                },
                                                "title": "Bar",
                                                "type": "string",
                                              },
                                              "name": Object {
                                                "id": "Name",
                                                "meta": Object {
                                                  "vis": Object {
                                                    "component": "Text",
                                                    "ordinal": 1,
                                                  },
                                                },
                                                "title": "Name",
                                                "type": "string",
                                              },
                                            },
                                            "title": "Bar",
                                            "type": "object",
                                          },
                                        }
                                      }
                                      selectBtnProps={
                                        Object {
                                          "onClick": [Function],
                                        }
                                      }
                                      sheet={
                                        StyleSheet {
                                          "attached": true,
                                          "classes": Object {
                                            ".list-group-item": "list-group-item",
                                            "listItem": "listItem-0-35",
                                            "removeItem": "removeItem-0-36",
                                          },
                                          "deployed": true,
                                          "linked": false,
                                          "options": Object {
                                            "Renderer": [Function],
                                            "classes": Object {
                                              ".list-group-item": "list-group-item",
                                              "listItem": "listItem-0-35",
                                              "removeItem": "removeItem-0-36",
                                            },
                                            "generateClassName": [Function],
                                            "index": 0,
                                            "insertionPoint": undefined,
                                            "jss": Jss {
                                              "generateClassName": [Function],
                                              "options": Object {
                                                "Renderer": [Function],
                                                "createGenerateClassName": [Function],
                                                "plugins": Array [
                                                  Object {
                                                    "onCreateRule": [Function],
                                                    "onProcessRule": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessRule": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                ],
                                              },
                                              "plugins": PluginsRegistry {
                                                "hooks": Object {
                                                  "onChangeValue": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onCreateRule": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onProcessRule": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onProcessSheet": Array [],
                                                  "onProcessStyle": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                              },
                                              "version": "8.1.0",
                                            },
                                            "parent": [Circular],
                                            "sheet": [Circular],
                                          },
                                          "renderer": DomRenderer {
                                            "element": <style
                                              data-jss=""
                                              type="text/css"
                                            >
                                              
.listItem-0-35 {
  width: 100%;
  display: inline-flex;
  border-top: 1px solid #DDD;
}
.removeItem-0-36 {
  float: right;
  padding: 7px 12px 7px 12px;
  margin-top: auto;
  margin-left: 10px;
  margin-right: 10px;
  margin-bottom: auto;
}
.list-group-item {
  border-top: none;
}

                                            </style>,
                                            "getSelector": [Function],
                                            "getStyle": [Function],
                                            "hasInsertedRules": false,
                                            "setSelector": [Function],
                                            "setStyle": [Function],
                                            "sheet": [Circular],
                                          },
                                          "rules": RuleList {
                                            "classes": Object {
                                              ".list-group-item": "list-group-item",
                                              "listItem": "listItem-0-35",
                                              "removeItem": "removeItem-0-36",
                                            },
                                            "index": Array [
                                              Object {
                                                "border-top": "1px solid #DDD",
                                                "display": "inline-flex",
                                                "width": "100%",
                                              },
                                              Object {
                                                "float": "right",
                                                "margin-bottom": "auto",
                                                "margin-left": "10px",
                                                "margin-right": "10px",
                                                "margin-top": "auto",
                                                "padding": "7px 12px 7px 12px",
                                              },
                                              GlobalContainerRule {
                                                "isProcessed": true,
                                                "key": "@global",
                                                "options": Object {
                                                  "Renderer": [Function],
                                                  "classes": Object {
                                                    ".list-group-item": "list-group-item",
                                                    "listItem": "listItem-0-35",
                                                    "removeItem": "removeItem-0-36",
                                                  },
                                                  "generateClassName": [Function],
                                                  "jss": Jss {
                                                    "generateClassName": [Function],
                                                    "options": Object {
                                                      "Renderer": [Function],
                                                      "createGenerateClassName": [Function],
                                                      "plugins": Array [
                                                        Object {
                                                          "onCreateRule": [Function],
                                                          "onProcessRule": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onChangeValue": [Function],
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onChangeValue": [Function],
                                                          "onProcessRule": [Function],
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                      ],
                                                    },
                                                    "plugins": PluginsRegistry {
                                                      "hooks": Object {
                                                        "onChangeValue": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onCreateRule": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onProcessRule": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onProcessSheet": Array [],
                                                        "onProcessStyle": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                    },
                                                    "version": "8.1.0",
                                                  },
                                                  "parent": [Circular],
                                                  "sheet": [Circular],
                                                },
                                                "rules": RuleList {
                                                  "classes": Object {
                                                    ".list-group-item": "list-group-item",
                                                    "listItem": "listItem-0-35",
                                                    "removeItem": "removeItem-0-36",
                                                  },
                                                  "index": Array [
                                                    Object {
                                                      "border-top": "none",
                                                    },
                                                  ],
                                                  "map": Object {
                                                    ".list-group-item": Object {
                                                      "border-top": "none",
                                                    },
                                                  },
                                                  "options": Object {
                                                    "Renderer": [Function],
                                                    "classes": Object {
                                                      ".list-group-item": "list-group-item",
                                                      "listItem": "listItem-0-35",
                                                      "removeItem": "removeItem-0-36",
                                                    },
                                                    "generateClassName": [Function],
                                                    "jss": Jss {
                                                      "generateClassName": [Function],
                                                      "options": Object {
                                                        "Renderer": [Function],
                                                        "createGenerateClassName": [Function],
                                                        "plugins": Array [
                                                          Object {
                                                            "onCreateRule": [Function],
                                                            "onProcessRule": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onChangeValue": [Function],
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onChangeValue": [Function],
                                                            "onProcessRule": [Function],
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                        ],
                                                      },
                                                      "plugins": PluginsRegistry {
                                                        "hooks": Object {
                                                          "onChangeValue": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onCreateRule": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onProcessRule": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onProcessSheet": Array [],
                                                          "onProcessStyle": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                      },
                                                      "version": "8.1.0",
                                                    },
                                                    "parent": [Circular],
                                                    "sheet": [Circular],
                                                  },
                                                  "raw": Object {
                                                    ".list-group-item": Object {
                                                      "borderTop": "none",
                                                    },
                                                  },
                                                },
                                                "type": "global",
                                              },
                                            ],
                                            "map": Object {
                                              ".listItem-0-35": Object {
                                                "border-top": "1px solid #DDD",
                                                "display": "inline-flex",
                                                "width": "100%",
                                              },
                                              ".removeItem-0-36": Object {
                                                "float": "right",
                                                "margin-bottom": "auto",
                                                "margin-left": "10px",
                                                "margin-right": "10px",
                                                "margin-top": "auto",
                                                "padding": "7px 12px 7px 12px",
                                              },
                                              "@global": GlobalContainerRule {
                                                "isProcessed": true,
                                                "key": "@global",
                                                "options": Object {
                                                  "Renderer": [Function],
                                                  "classes": Object {
                                                    ".list-group-item": "list-group-item",
                                                    "listItem": "listItem-0-35",
                                                    "removeItem": "removeItem-0-36",
                                                  },
                                                  "generateClassName": [Function],
                                                  "jss": Jss {
                                                    "generateClassName": [Function],
                                                    "options": Object {
                                                      "Renderer": [Function],
                                                      "createGenerateClassName": [Function],
                                                      "plugins": Array [
                                                        Object {
                                                          "onCreateRule": [Function],
                                                          "onProcessRule": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onChangeValue": [Function],
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onChangeValue": [Function],
                                                          "onProcessRule": [Function],
                                                          "onProcessStyle": [Function],
                                                        },
                                                        Object {
                                                          "onProcessStyle": [Function],
                                                        },
                                                      ],
                                                    },
                                                    "plugins": PluginsRegistry {
                                                      "hooks": Object {
                                                        "onChangeValue": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onCreateRule": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onProcessRule": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                        "onProcessSheet": Array [],
                                                        "onProcessStyle": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                    },
                                                    "version": "8.1.0",
                                                  },
                                                  "parent": [Circular],
                                                  "sheet": [Circular],
                                                },
                                                "rules": RuleList {
                                                  "classes": Object {
                                                    ".list-group-item": "list-group-item",
                                                    "listItem": "listItem-0-35",
                                                    "removeItem": "removeItem-0-36",
                                                  },
                                                  "index": Array [
                                                    Object {
                                                      "border-top": "none",
                                                    },
                                                  ],
                                                  "map": Object {
                                                    ".list-group-item": Object {
                                                      "border-top": "none",
                                                    },
                                                  },
                                                  "options": Object {
                                                    "Renderer": [Function],
                                                    "classes": Object {
                                                      ".list-group-item": "list-group-item",
                                                      "listItem": "listItem-0-35",
                                                      "removeItem": "removeItem-0-36",
                                                    },
                                                    "generateClassName": [Function],
                                                    "jss": Jss {
                                                      "generateClassName": [Function],
                                                      "options": Object {
                                                        "Renderer": [Function],
                                                        "createGenerateClassName": [Function],
                                                        "plugins": Array [
                                                          Object {
                                                            "onCreateRule": [Function],
                                                            "onProcessRule": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onChangeValue": [Function],
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onChangeValue": [Function],
                                                            "onProcessRule": [Function],
                                                            "onProcessStyle": [Function],
                                                          },
                                                          Object {
                                                            "onProcessStyle": [Function],
                                                          },
                                                        ],
                                                      },
                                                      "plugins": PluginsRegistry {
                                                        "hooks": Object {
                                                          "onChangeValue": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onCreateRule": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onProcessRule": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "onProcessSheet": Array [],
                                                          "onProcessStyle": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                      },
                                                      "version": "8.1.0",
                                                    },
                                                    "parent": [Circular],
                                                    "sheet": [Circular],
                                                  },
                                                  "raw": Object {
                                                    ".list-group-item": Object {
                                                      "borderTop": "none",
                                                    },
                                                  },
                                                },
                                                "type": "global",
                                              },
                                              "listItem": Object {
                                                "border-top": "1px solid #DDD",
                                                "display": "inline-flex",
                                                "width": "100%",
                                              },
                                              "removeItem": Object {
                                                "float": "right",
                                                "margin-bottom": "auto",
                                                "margin-left": "10px",
                                                "margin-right": "10px",
                                                "margin-top": "auto",
                                                "padding": "7px 12px 7px 12px",
                                              },
                                            },
                                            "options": Object {
                                              "Renderer": [Function],
                                              "classes": Object {
                                                ".list-group-item": "list-group-item",
                                                "listItem": "listItem-0-35",
                                                "removeItem": "removeItem-0-36",
                                              },
                                              "generateClassName": [Function],
                                              "index": 0,
                                              "insertionPoint": undefined,
                                              "jss": Jss {
                                                "generateClassName": [Function],
                                                "options": Object {
                                                  "Renderer": [Function],
                                                  "createGenerateClassName": [Function],
                                                  "plugins": Array [
                                                    Object {
                                                      "onCreateRule": [Function],
                                                      "onProcessRule": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onChangeValue": [Function],
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onChangeValue": [Function],
                                                      "onProcessRule": [Function],
                                                      "onProcessStyle": [Function],
                                                    },
                                                    Object {
                                                      "onProcessStyle": [Function],
                                                    },
                                                  ],
                                                },
                                                "plugins": PluginsRegistry {
                                                  "hooks": Object {
                                                    "onChangeValue": Array [
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "onCreateRule": Array [
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "onProcessRule": Array [
                                                      [Function],
                                                      [Function],
                                                    ],
                                                    "onProcessSheet": Array [],
                                                    "onProcessStyle": Array [
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                },
                                                "version": "8.1.0",
                                              },
                                              "parent": [Circular],
                                              "sheet": [Circular],
                                            },
                                            "raw": Object {
                                              "@global": Object {
                                                ".list-group-item": Object {
                                                  "borderTop": "none",
                                                },
                                              },
                                              "listItem": Object {
                                                "borderTop": "1px solid #DDD",
                                                "display": "inline-flex",
                                                "width": "100%",
                                              },
                                              "removeItem": Object {
                                                "float": "right",
                                                "marginBottom": "auto",
                                                "marginLeft": 10,
                                                "marginRight": 10,
                                                "marginTop": "auto",
                                                "padding": Array [
                                                  7,
                                                  12,
                                                  7,
                                                  12,
                                                ],
                                              },
                                            },
                                          },
                                        }
                                      }
                                      styles={
                                        Object {
                                          "@global": Object {
                                            ".list-group-item": Object {
                                              "borderTop": "none",
                                            },
                                          },
                                          "listItem": Object {
                                            "borderTop": "1px solid #DDD",
                                            "display": "inline-flex",
                                            "width": "100%",
                                          },
                                          "removeItem": Object {
                                            "float": "right",
                                            "marginBottom": "auto",
                                            "marginLeft": 10,
                                            "marginRight": 10,
                                            "marginTop": "auto",
                                            "padding": Array [
                                              7,
                                              12,
                                              7,
                                              12,
                                            ],
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="listItem-0-35"
                                      >
                                        <ListGroupItem
                                          action={true}
                                          id="arrayListItem"
                                          onClick={[Function]}
                                          tag="li"
                                        >
                                          <li
                                            className="list-group-item-action list-group-item"
                                            id="arrayListItem"
                                            onClick={[Function]}
                                          >
                                            name (Bar: )
                                          </li>
                                        </ListGroupItem>
                                        <Button
                                          className="removeItem-0-36"
                                          color="danger"
                                          id="removeItemBtn"
                                          onClick={[Function]}
                                          size="sm"
                                          tag="button"
                                        >
                                          <button
                                            className="removeItem-0-36 btn btn-danger btn-sm"
                                            id="removeItemBtn"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Remove
                                          </button>
                                        </Button>
                                      </div>
                                    </ListItemTemplate>
                                  </StyledComponent>
                                </SchemaVis>
                              </ul>
                            </ListGroup>
                          </div>
                        </Card>
                        <Modal
                          autoFocus={true}
                          backdrop={true}
                          backdropTransition={
                            Object {
                              "mountOnEnter": true,
                              "timeout": 150,
                            }
                          }
                          fade={true}
                          isOpen={false}
                          keyboard={true}
                          modalTransition={
                            Object {
                              "timeout": 300,
                            }
                          }
                          onClosed={[Function]}
                          onOpened={[Function]}
                          role="dialog"
                          toggle={[Function]}
                          zIndex={1050}
                        />
                      </div>
                    </ModalVariedArray>
                  </Connect(ModalVariedArray)>
                </ConnectedFieldArray>
              </Connect(ConnectedFieldArray)>
            </FieldArray>
          </ModalVariedArrayCard>
        </StyledComponent>
      </Form(StyledComponent)>
    </Connect(Form(StyledComponent))>
  </ReduxForm>
</Provider>
`;

exports[`Render Varied Array Fields should add item to array, modify it, and remove it 6`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    form="TestForm"
    name="foobar"
    schemaVis={
      Object {
        "components": Object {
          "CardItem": [Function],
          "CardWithHeader": [Function],
          "Color": [Function],
          "Date": [Function],
          "DateTime": [Function],
          "Email": [Function],
          "ListItemTemplate": [Function],
          "ModalUniformedArrayCard": [Function],
          "ModalUniformedArrayInline": [Function],
          "ModalVariedArrayCard": [Function],
          "ModalVariedArrayInline": [Function],
          "Number": [Function],
          "Password": [Function],
          "SingleSelect": [Function],
          "Text": [Function],
          "TextArea": [Function],
          "UniformedArrayCard": [Function],
          "UniformedArrayInline": [Function],
          "VariedArrayCard": [Function],
          "VariedArrayInline": [Function],
        },
        "prefix": "meta.vis",
        "schema": Object {
          "id": "VariedArrayCard",
          "items": Object {
            "anyOf": Array [
              Object {
                "id": "Bar",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "bar": Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 2,
                      },
                    },
                    "title": "Bar",
                    "type": "string",
                  },
                  "name": Object {
                    "id": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Bar",
                "type": "object",
              },
              Object {
                "id": "Baz",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "baz": Object {
                    "id": "Baz",
                    "meta": Object {
                      "vis": Object {
                        "component": "Number",
                        "ordinal": 2,
                      },
                    },
                    "title": "Baz",
                    "type": "number",
                  },
                  "name": Object {
                    "it": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Baz",
                "type": "object",
              },
            ],
            "id": "FooCard",
            "meta": Object {
              "vis": Object {
                "component": "SingleSelect",
              },
            },
            "title": "Foo Card",
            "type": "object",
          },
          "title": "Varied Array Card",
          "type": "array",
        },
      }
    }
  >
    <Connect(Form(StyledComponent))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="TestForm"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      name="foobar"
      persistentSubmitErrors={false}
      pure={true}
      schemaVis={
        Object {
          "components": Object {
            "CardItem": [Function],
            "CardWithHeader": [Function],
            "Color": [Function],
            "Date": [Function],
            "DateTime": [Function],
            "Email": [Function],
            "ListItemTemplate": [Function],
            "ModalUniformedArrayCard": [Function],
            "ModalUniformedArrayInline": [Function],
            "ModalVariedArrayCard": [Function],
            "ModalVariedArrayInline": [Function],
            "Number": [Function],
            "Password": [Function],
            "SingleSelect": [Function],
            "Text": [Function],
            "TextArea": [Function],
            "UniformedArrayCard": [Function],
            "UniformedArrayInline": [Function],
            "VariedArrayCard": [Function],
            "VariedArrayInline": [Function],
          },
          "prefix": "meta.vis",
          "schema": Object {
            "id": "VariedArrayCard",
            "items": Object {
              "anyOf": Array [
                Object {
                  "id": "Bar",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "bar": Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 2,
                        },
                      },
                      "title": "Bar",
                      "type": "string",
                    },
                    "name": Object {
                      "id": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Bar",
                  "type": "object",
                },
                Object {
                  "id": "Baz",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "baz": Object {
                      "id": "Baz",
                      "meta": Object {
                        "vis": Object {
                          "component": "Number",
                          "ordinal": 2,
                        },
                      },
                      "title": "Baz",
                      "type": "number",
                    },
                    "name": Object {
                      "it": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Baz",
                  "type": "object",
                },
              ],
              "id": "FooCard",
              "meta": Object {
                "vis": Object {
                  "component": "SingleSelect",
                },
              },
              "title": "Foo Card",
              "type": "object",
            },
            "title": "Varied Array Card",
            "type": "array",
          },
        }
      }
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      withRef={true}
    >
      <Form(StyledComponent)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncErrors={undefined}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={true}
        dispatch={[Function]}
        enableReinitialize={false}
        error={undefined}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="TestForm"
        getFormState={[Function]}
        initialValues={undefined}
        initialize={[Function]}
        initialized={false}
        invalid={false}
        keepDirtyOnReinitialize={false}
        name="foobar"
        persistentSubmitErrors={false}
        pristine={false}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "foobar": Object {
              "count": 1,
              "name": "foobar",
              "type": "FieldArray",
            },
          }
        }
        reset={[Function]}
        schemaVis={
          Object {
            "components": Object {
              "CardItem": [Function],
              "CardWithHeader": [Function],
              "Color": [Function],
              "Date": [Function],
              "DateTime": [Function],
              "Email": [Function],
              "ListItemTemplate": [Function],
              "ModalUniformedArrayCard": [Function],
              "ModalUniformedArrayInline": [Function],
              "ModalVariedArrayCard": [Function],
              "ModalVariedArrayInline": [Function],
              "Number": [Function],
              "Password": [Function],
              "SingleSelect": [Function],
              "Text": [Function],
              "TextArea": [Function],
              "UniformedArrayCard": [Function],
              "UniformedArrayInline": [Function],
              "VariedArrayCard": [Function],
              "VariedArrayInline": [Function],
            },
            "prefix": "meta.vis",
            "schema": Object {
              "id": "VariedArrayCard",
              "items": Object {
                "anyOf": Array [
                  Object {
                    "id": "Bar",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "bar": Object {
                        "id": "Bar",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 2,
                          },
                        },
                        "title": "Bar",
                        "type": "string",
                      },
                      "name": Object {
                        "id": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Bar",
                    "type": "object",
                  },
                  Object {
                    "id": "Baz",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "baz": Object {
                        "id": "Baz",
                        "meta": Object {
                          "vis": Object {
                            "component": "Number",
                            "ordinal": 2,
                          },
                        },
                        "title": "Baz",
                        "type": "number",
                      },
                      "name": Object {
                        "it": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Baz",
                    "type": "object",
                  },
                ],
                "id": "FooCard",
                "meta": Object {
                  "vis": Object {
                    "component": "SingleSelect",
                  },
                },
                "title": "Foo Card",
                "type": "object",
              },
              "title": "Varied Array Card",
              "type": "array",
            },
          }
        }
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldError={[Function]}
        shouldValidate={[Function]}
        shouldWarn={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={Object {}}
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        triggerSubmit={undefined}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={true}
        validExceptSubmit={true}
        values={
          Object {
            "foobar": Array [],
          }
        }
        warning={undefined}
        withRef={true}
      >
        <StyledComponent
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={true}
          dispatch={[Function]}
          error={undefined}
          form="TestForm"
          handleSubmit={[Function]}
          initialValues={undefined}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          name="foobar"
          pristine={false}
          pure={true}
          reset={[Function]}
          schemaVis={
            Object {
              "components": Object {
                "CardItem": [Function],
                "CardWithHeader": [Function],
                "Color": [Function],
                "Date": [Function],
                "DateTime": [Function],
                "Email": [Function],
                "ListItemTemplate": [Function],
                "ModalUniformedArrayCard": [Function],
                "ModalUniformedArrayInline": [Function],
                "ModalVariedArrayCard": [Function],
                "ModalVariedArrayInline": [Function],
                "Number": [Function],
                "Password": [Function],
                "SingleSelect": [Function],
                "Text": [Function],
                "TextArea": [Function],
                "UniformedArrayCard": [Function],
                "UniformedArrayInline": [Function],
                "VariedArrayCard": [Function],
                "VariedArrayInline": [Function],
              },
              "prefix": "meta.vis",
              "schema": Object {
                "id": "VariedArrayCard",
                "items": Object {
                  "anyOf": Array [
                    Object {
                      "id": "Bar",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "bar": Object {
                          "id": "Bar",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 2,
                            },
                          },
                          "title": "Bar",
                          "type": "string",
                        },
                        "name": Object {
                          "id": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Bar",
                      "type": "object",
                    },
                    Object {
                      "id": "Baz",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "baz": Object {
                          "id": "Baz",
                          "meta": Object {
                            "vis": Object {
                              "component": "Number",
                              "ordinal": 2,
                            },
                          },
                          "title": "Baz",
                          "type": "number",
                        },
                        "name": Object {
                          "it": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Baz",
                      "type": "object",
                    },
                  ],
                  "id": "FooCard",
                  "meta": Object {
                    "vis": Object {
                      "component": "SingleSelect",
                    },
                  },
                  "title": "Foo Card",
                  "type": "object",
                },
                "title": "Varied Array Card",
                "type": "array",
              },
            }
          }
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          triggerSubmit={undefined}
          untouch={[Function]}
          valid={true}
          warning={undefined}
          withRef={true}
        >
          <ModalVariedArrayCard
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            classes={
              Object {
                "addButton": "addButton-0-30",
                "container": "container-0-28",
                "header": "header-0-29",
                "headerTitle": "headerTitle-0-31",
              }
            }
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={true}
            dispatch={[Function]}
            error={undefined}
            form="TestForm"
            handleSubmit={[Function]}
            initialValues={undefined}
            initialize={[Function]}
            initialized={false}
            invalid={false}
            name="foobar"
            pristine={false}
            pure={true}
            reset={[Function]}
            schemaVis={
              Object {
                "components": Object {
                  "CardItem": [Function],
                  "CardWithHeader": [Function],
                  "Color": [Function],
                  "Date": [Function],
                  "DateTime": [Function],
                  "Email": [Function],
                  "ListItemTemplate": [Function],
                  "ModalUniformedArrayCard": [Function],
                  "ModalUniformedArrayInline": [Function],
                  "ModalVariedArrayCard": [Function],
                  "ModalVariedArrayInline": [Function],
                  "Number": [Function],
                  "Password": [Function],
                  "SingleSelect": [Function],
                  "Text": [Function],
                  "TextArea": [Function],
                  "UniformedArrayCard": [Function],
                  "UniformedArrayInline": [Function],
                  "VariedArrayCard": [Function],
                  "VariedArrayInline": [Function],
                },
                "prefix": "meta.vis",
                "schema": Object {
                  "id": "VariedArrayCard",
                  "items": Object {
                    "anyOf": Array [
                      Object {
                        "id": "Bar",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "bar": Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 2,
                              },
                            },
                            "title": "Bar",
                            "type": "string",
                          },
                          "name": Object {
                            "id": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Bar",
                        "type": "object",
                      },
                      Object {
                        "id": "Baz",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "baz": Object {
                            "id": "Baz",
                            "meta": Object {
                              "vis": Object {
                                "component": "Number",
                                "ordinal": 2,
                              },
                            },
                            "title": "Baz",
                            "type": "number",
                          },
                          "name": Object {
                            "it": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Baz",
                        "type": "object",
                      },
                    ],
                    "id": "FooCard",
                    "meta": Object {
                      "vis": Object {
                        "component": "SingleSelect",
                      },
                    },
                    "title": "Foo Card",
                    "type": "object",
                  },
                  "title": "Varied Array Card",
                  "type": "array",
                },
              }
            }
            sheet={
              StyleSheet {
                "attached": true,
                "classes": Object {
                  "addButton": "addButton-0-30",
                  "container": "container-0-28",
                  "header": "header-0-29",
                  "headerTitle": "headerTitle-0-31",
                },
                "deployed": true,
                "linked": false,
                "options": Object {
                  "Renderer": [Function],
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "generateClassName": [Function],
                  "index": 0,
                  "insertionPoint": undefined,
                  "jss": Jss {
                    "generateClassName": [Function],
                    "options": Object {
                      "Renderer": [Function],
                      "createGenerateClassName": [Function],
                      "plugins": Array [
                        Object {
                          "onCreateRule": [Function],
                          "onProcessRule": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessRule": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                      ],
                    },
                    "plugins": PluginsRegistry {
                      "hooks": Object {
                        "onChangeValue": Array [
                          [Function],
                          [Function],
                        ],
                        "onCreateRule": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "onProcessRule": Array [
                          [Function],
                          [Function],
                        ],
                        "onProcessSheet": Array [],
                        "onProcessStyle": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                    },
                    "version": "8.1.0",
                  },
                  "parent": [Circular],
                  "sheet": [Circular],
                },
                "renderer": DomRenderer {
                  "element": <style
                    data-jss=""
                    type="text/css"
                  >
                    
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                  </style>,
                  "getSelector": [Function],
                  "getStyle": [Function],
                  "hasInsertedRules": false,
                  "setSelector": [Function],
                  "setStyle": [Function],
                  "sheet": [Circular],
                },
                "rules": RuleList {
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "index": Array [
                    Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    Object {
                      "margin-left": "auto",
                    },
                    Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  ],
                  "map": Object {
                    ".addButton-0-30": Object {
                      "margin-left": "auto",
                    },
                    ".container-0-28": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    ".header-0-29": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    ".headerTitle-0-31": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                    "addButton": Object {
                      "margin-left": "auto",
                    },
                    "container": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    "headerTitle": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  },
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "raw": Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  },
                },
              }
            }
            styles={
              Object {
                "addButton": Object {
                  "marginLeft": "auto",
                },
                "container": Object {
                  "marginBottom": 10,
                  "marginTop": 15,
                },
                "header": Object {
                  "display": "inline-flex",
                  "padding": 5,
                  "paddingLeft": 10,
                },
                "headerTitle": Object {
                  "marginBottom": "auto",
                  "marginTop": "auto",
                },
              }
            }
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            touch={[Function]}
            triggerSubmit={undefined}
            untouch={[Function]}
            valid={true}
            warning={undefined}
            withRef={true}
          >
            <FieldArray
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              asyncValidate={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              bodyProps={
                Object {
                  "flush": true,
                }
              }
              change={[Function]}
              classes={
                Object {
                  "addButton": "addButton-0-30",
                  "container": "container-0-28",
                  "header": "header-0-29",
                  "headerTitle": "headerTitle-0-31",
                }
              }
              clearAsyncError={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              component={[Function]}
              destroy={[Function]}
              dirty={true}
              dispatch={[Function]}
              error={undefined}
              form="TestForm"
              formName="variedArrayCardItem"
              handleSubmit={[Function]}
              initialValues={undefined}
              initialize={[Function]}
              initialized={false}
              invalid={false}
              name="foobar"
              pristine={false}
              pure={true}
              reset={[Function]}
              schemaVis={
                Object {
                  "components": Object {
                    "CardItem": [Function],
                    "CardWithHeader": [Function],
                    "Color": [Function],
                    "Date": [Function],
                    "DateTime": [Function],
                    "Email": [Function],
                    "ListItemTemplate": [Function],
                    "ModalUniformedArrayCard": [Function],
                    "ModalUniformedArrayInline": [Function],
                    "ModalVariedArrayCard": [Function],
                    "ModalVariedArrayInline": [Function],
                    "Number": [Function],
                    "Password": [Function],
                    "SingleSelect": [Function],
                    "Text": [Function],
                    "TextArea": [Function],
                    "UniformedArrayCard": [Function],
                    "UniformedArrayInline": [Function],
                    "VariedArrayCard": [Function],
                    "VariedArrayInline": [Function],
                  },
                  "prefix": "meta.vis",
                  "schema": Object {
                    "id": "VariedArrayCard",
                    "items": Object {
                      "anyOf": Array [
                        Object {
                          "id": "Bar",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "bar": Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Bar",
                              "type": "string",
                            },
                            "name": Object {
                              "id": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Bar",
                          "type": "object",
                        },
                        Object {
                          "id": "Baz",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "baz": Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Number",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Baz",
                              "type": "number",
                            },
                            "name": Object {
                              "it": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Baz",
                          "type": "object",
                        },
                      ],
                      "id": "FooCard",
                      "meta": Object {
                        "vis": Object {
                          "component": "SingleSelect",
                        },
                      },
                      "title": "Foo Card",
                      "type": "object",
                    },
                    "title": "Varied Array Card",
                    "type": "array",
                  },
                }
              }
              sheet={
                StyleSheet {
                  "attached": true,
                  "classes": Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  },
                  "deployed": true,
                  "linked": false,
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "renderer": DomRenderer {
                    "element": <style
                      data-jss=""
                      type="text/css"
                    >
                      
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                    </style>,
                    "getSelector": [Function],
                    "getStyle": [Function],
                    "hasInsertedRules": false,
                    "setSelector": [Function],
                    "setStyle": [Function],
                    "sheet": [Circular],
                  },
                  "rules": RuleList {
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "index": Array [
                      Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      Object {
                        "margin-left": "auto",
                      },
                      Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    ],
                    "map": Object {
                      ".addButton-0-30": Object {
                        "margin-left": "auto",
                      },
                      ".container-0-28": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      ".header-0-29": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      ".headerTitle-0-31": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                      "addButton": Object {
                        "margin-left": "auto",
                      },
                      "container": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      "headerTitle": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    },
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "raw": Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    },
                  },
                }
              }
              styles={
                Object {
                  "addButton": Object {
                    "marginLeft": "auto",
                  },
                  "container": Object {
                    "marginBottom": 10,
                    "marginTop": 15,
                  },
                  "header": Object {
                    "display": "inline-flex",
                    "padding": 5,
                    "paddingLeft": 10,
                  },
                  "headerTitle": Object {
                    "marginBottom": "auto",
                    "marginTop": "auto",
                  },
                }
              }
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              touch={[Function]}
              triggerSubmit={undefined}
              untouch={[Function]}
              valid={true}
              validate={[Function]}
              warning={undefined}
              withRef={true}
            >
              <Connect(ConnectedFieldArray)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": true,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "TestForm",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "name": "foobar",
                    "persistentSubmitErrors": false,
                    "pristine": false,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "foobar": Object {
                        "count": 1,
                        "name": "foobar",
                        "type": "FieldArray",
                      },
                    },
                    "reset": [Function],
                    "schemaVis": Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    },
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldError": [Function],
                    "shouldValidate": [Function],
                    "shouldWarn": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {
                      "foobar": Array [
                        Object {
                          "bar": undefined,
                          "name": "name",
                        },
                      ],
                    },
                    "warning": undefined,
                    "withRef": true,
                  }
                }
                anyTouched={false}
                array={
                  Object {
                    "insert": [Function],
                    "move": [Function],
                    "pop": [Function],
                    "push": [Function],
                    "remove": [Function],
                    "removeAll": [Function],
                    "shift": [Function],
                    "splice": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                  }
                }
                asyncValidate={[Function]}
                asyncValidating={false}
                autofill={[Function]}
                blur={[Function]}
                bodyProps={
                  Object {
                    "flush": true,
                  }
                }
                change={[Function]}
                classes={
                  Object {
                    "addButton": "addButton-0-30",
                    "container": "container-0-28",
                    "header": "header-0-29",
                    "headerTitle": "headerTitle-0-31",
                  }
                }
                clearAsyncError={[Function]}
                clearSubmit={[Function]}
                clearSubmitErrors={[Function]}
                component={[Function]}
                destroy={[Function]}
                dirty={true}
                dispatch={[Function]}
                error={undefined}
                form="TestForm"
                formName="variedArrayCardItem"
                handleSubmit={[Function]}
                initialValues={undefined}
                initialize={[Function]}
                initialized={false}
                invalid={false}
                name="foobar"
                pristine={false}
                pure={true}
                reset={[Function]}
                schemaVis={
                  Object {
                    "components": Object {
                      "CardItem": [Function],
                      "CardWithHeader": [Function],
                      "Color": [Function],
                      "Date": [Function],
                      "DateTime": [Function],
                      "Email": [Function],
                      "ListItemTemplate": [Function],
                      "ModalUniformedArrayCard": [Function],
                      "ModalUniformedArrayInline": [Function],
                      "ModalVariedArrayCard": [Function],
                      "ModalVariedArrayInline": [Function],
                      "Number": [Function],
                      "Password": [Function],
                      "SingleSelect": [Function],
                      "Text": [Function],
                      "TextArea": [Function],
                      "UniformedArrayCard": [Function],
                      "UniformedArrayInline": [Function],
                      "VariedArrayCard": [Function],
                      "VariedArrayInline": [Function],
                    },
                    "prefix": "meta.vis",
                    "schema": Object {
                      "id": "VariedArrayCard",
                      "items": Object {
                        "anyOf": Array [
                          Object {
                            "id": "Bar",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "bar": Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Bar",
                                "type": "string",
                              },
                              "name": Object {
                                "id": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Bar",
                            "type": "object",
                          },
                          Object {
                            "id": "Baz",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "baz": Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Number",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Baz",
                                "type": "number",
                              },
                              "name": Object {
                                "it": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Baz",
                            "type": "object",
                          },
                        ],
                        "id": "FooCard",
                        "meta": Object {
                          "vis": Object {
                            "component": "SingleSelect",
                          },
                        },
                        "title": "Foo Card",
                        "type": "object",
                      },
                      "title": "Varied Array Card",
                      "type": "array",
                    },
                  }
                }
                sheet={
                  StyleSheet {
                    "attached": true,
                    "classes": Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    },
                    "deployed": true,
                    "linked": false,
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "renderer": DomRenderer {
                      "element": <style
                        data-jss=""
                        type="text/css"
                      >
                        
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                      </style>,
                      "getSelector": [Function],
                      "getStyle": [Function],
                      "hasInsertedRules": false,
                      "setSelector": [Function],
                      "setStyle": [Function],
                      "sheet": [Circular],
                    },
                    "rules": RuleList {
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "index": Array [
                        Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        Object {
                          "margin-left": "auto",
                        },
                        Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      ],
                      "map": Object {
                        ".addButton-0-30": Object {
                          "margin-left": "auto",
                        },
                        ".container-0-28": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        ".header-0-29": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        ".headerTitle-0-31": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                        "addButton": Object {
                          "margin-left": "auto",
                        },
                        "container": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        "headerTitle": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      },
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "raw": Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      },
                    },
                  }
                }
                styles={
                  Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  }
                }
                submit={[Function]}
                submitFailed={false}
                submitSucceeded={false}
                submitting={false}
                touch={[Function]}
                triggerSubmit={undefined}
                untouch={[Function]}
                valid={true}
                validate={[Function]}
                warning={undefined}
                withRef={true}
              >
                <ConnectedFieldArray
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": true,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "TestForm",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "name": "foobar",
                      "persistentSubmitErrors": false,
                      "pristine": false,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "foobar": Object {
                          "count": 1,
                          "name": "foobar",
                          "type": "FieldArray",
                        },
                      },
                      "reset": [Function],
                      "schemaVis": Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      },
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldError": [Function],
                      "shouldValidate": [Function],
                      "shouldWarn": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {
                        "foobar": Array [
                          Object {
                            "bar": undefined,
                            "name": "name",
                          },
                        ],
                      },
                      "warning": undefined,
                      "withRef": true,
                    }
                  }
                  anyTouched={false}
                  array={
                    Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    }
                  }
                  arrayInsert={[Function]}
                  arrayMove={[Function]}
                  arrayPop={[Function]}
                  arrayPush={[Function]}
                  arrayRemove={[Function]}
                  arrayRemoveAll={[Function]}
                  arrayShift={[Function]}
                  arraySplice={[Function]}
                  arraySwap={[Function]}
                  arrayUnshift={[Function]}
                  asyncError={undefined}
                  asyncValidate={[Function]}
                  asyncValidating={false}
                  autofill={[Function]}
                  blur={[Function]}
                  bodyProps={
                    Object {
                      "flush": true,
                    }
                  }
                  change={[Function]}
                  classes={
                    Object {
                      "addButton": "addButton-0-30",
                      "container": "container-0-28",
                      "header": "header-0-29",
                      "headerTitle": "headerTitle-0-31",
                    }
                  }
                  clearAsyncError={[Function]}
                  clearSubmit={[Function]}
                  clearSubmitErrors={[Function]}
                  component={[Function]}
                  destroy={[Function]}
                  dirty={true}
                  dispatch={[Function]}
                  error={undefined}
                  form="TestForm"
                  formName="variedArrayCardItem"
                  handleSubmit={[Function]}
                  initialValues={undefined}
                  initialize={[Function]}
                  initialized={false}
                  invalid={false}
                  length={0}
                  name="foobar"
                  pristine={false}
                  pure={true}
                  rerenderOnEveryChange={false}
                  reset={[Function]}
                  schemaVis={
                    Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    }
                  }
                  sheet={
                    StyleSheet {
                      "attached": true,
                      "classes": Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      },
                      "deployed": true,
                      "linked": false,
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "renderer": DomRenderer {
                        "element": <style
                          data-jss=""
                          type="text/css"
                        >
                          
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                        </style>,
                        "getSelector": [Function],
                        "getStyle": [Function],
                        "hasInsertedRules": false,
                        "setSelector": [Function],
                        "setStyle": [Function],
                        "sheet": [Circular],
                      },
                      "rules": RuleList {
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "index": Array [
                          Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          Object {
                            "margin-left": "auto",
                          },
                          Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        ],
                        "map": Object {
                          ".addButton-0-30": Object {
                            "margin-left": "auto",
                          },
                          ".container-0-28": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          ".header-0-29": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          ".headerTitle-0-31": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                          "addButton": Object {
                            "margin-left": "auto",
                          },
                          "container": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          "headerTitle": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        },
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "raw": Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        },
                      },
                    }
                  }
                  state={undefined}
                  styles={
                    Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    }
                  }
                  submit={[Function]}
                  submitError={undefined}
                  submitFailed={undefined}
                  submitSucceeded={false}
                  submitting={undefined}
                  syncError={undefined}
                  syncWarning={undefined}
                  touch={[Function]}
                  triggerSubmit={undefined}
                  untouch={[Function]}
                  valid={true}
                  validate={[Function]}
                  value={Array []}
                  warning={undefined}
                  withRef={true}
                >
                  <Connect(ModalVariedArray)
                    anyTouched={false}
                    array={
                      Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    asyncValidate={[Function]}
                    asyncValidating={false}
                    autofill={[Function]}
                    blur={[Function]}
                    bodyProps={
                      Object {
                        "flush": true,
                      }
                    }
                    change={[Function]}
                    classes={
                      Object {
                        "addButton": "addButton-0-30",
                        "container": "container-0-28",
                        "header": "header-0-29",
                        "headerTitle": "headerTitle-0-31",
                      }
                    }
                    clearAsyncError={[Function]}
                    clearSubmit={[Function]}
                    clearSubmitErrors={[Function]}
                    destroy={[Function]}
                    dispatch={[Function]}
                    error={undefined}
                    fields={
                      Object {
                        "_isFieldArray": true,
                        "forEach": [Function],
                        "get": [Function],
                        "getAll": [Function],
                        "insert": [Function],
                        "length": 0,
                        "map": [Function],
                        "move": [Function],
                        "name": "foobar",
                        "pop": [Function],
                        "push": [Function],
                        "reduce": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    form="TestForm"
                    formName="variedArrayCardItem"
                    handleSubmit={[Function]}
                    initialValues={undefined}
                    initialize={[Function]}
                    initialized={false}
                    invalid={false}
                    meta={
                      Object {
                        "dirty": true,
                        "error": undefined,
                        "form": "TestForm",
                        "invalid": false,
                        "pristine": false,
                        "submitFailed": undefined,
                        "submitting": undefined,
                        "valid": true,
                        "warning": undefined,
                      }
                    }
                    pure={true}
                    reset={[Function]}
                    schemaVis={
                      Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      }
                    }
                    sheet={
                      StyleSheet {
                        "attached": true,
                        "classes": Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        },
                        "deployed": true,
                        "linked": false,
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "renderer": DomRenderer {
                          "element": <style
                            data-jss=""
                            type="text/css"
                          >
                            
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                          </style>,
                          "getSelector": [Function],
                          "getStyle": [Function],
                          "hasInsertedRules": false,
                          "setSelector": [Function],
                          "setStyle": [Function],
                          "sheet": [Circular],
                        },
                        "rules": RuleList {
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "index": Array [
                            Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            Object {
                              "margin-left": "auto",
                            },
                            Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          ],
                          "map": Object {
                            ".addButton-0-30": Object {
                              "margin-left": "auto",
                            },
                            ".container-0-28": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            ".header-0-29": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            ".headerTitle-0-31": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                            "addButton": Object {
                              "margin-left": "auto",
                            },
                            "container": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            "headerTitle": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          },
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "raw": Object {
                            "addButton": Object {
                              "marginLeft": "auto",
                            },
                            "container": Object {
                              "marginBottom": 10,
                              "marginTop": 15,
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": 5,
                              "paddingLeft": 10,
                            },
                            "headerTitle": Object {
                              "marginBottom": "auto",
                              "marginTop": "auto",
                            },
                          },
                        },
                      }
                    }
                    styles={
                      Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      }
                    }
                    submit={[Function]}
                    submitSucceeded={false}
                    touch={[Function]}
                    triggerSubmit={undefined}
                    untouch={[Function]}
                    valid={true}
                    warning={undefined}
                  >
                    <ModalVariedArray
                      addBtnProps={Object {}}
                      anyTouched={false}
                      array={
                        Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "splice": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      asyncValidate={[Function]}
                      asyncValidating={false}
                      autofill={[Function]}
                      blur={[Function]}
                      bodyProps={
                        Object {
                          "flush": true,
                        }
                      }
                      bodyTag={[Function]}
                      change={[Function]}
                      changeForm={[Function]}
                      classes={
                        Object {
                          "addButton": "addButton-0-30",
                          "container": "container-0-28",
                          "header": "header-0-29",
                          "headerTitle": "headerTitle-0-31",
                        }
                      }
                      clearAsyncError={[Function]}
                      clearSubmit={[Function]}
                      clearSubmitErrors={[Function]}
                      dataSchemaPrefix="meta.data"
                      destroy={[Function]}
                      destroyForm={[Function]}
                      dispatch={[Function]}
                      error={undefined}
                      fields={
                        Object {
                          "_isFieldArray": true,
                          "forEach": [Function],
                          "get": [Function],
                          "getAll": [Function],
                          "insert": [Function],
                          "length": 0,
                          "map": [Function],
                          "move": [Function],
                          "name": "foobar",
                          "pop": [Function],
                          "push": [Function],
                          "reduce": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      form="TestForm"
                      formName="variedArrayCardItem"
                      handleSubmit={[Function]}
                      headerTag={[Function]}
                      initialValues={undefined}
                      initialize={[Function]}
                      initialized={false}
                      invalid={false}
                      items={Array []}
                      meta={
                        Object {
                          "dirty": true,
                          "error": undefined,
                          "form": "TestForm",
                          "invalid": false,
                          "pristine": false,
                          "submitFailed": undefined,
                          "submitting": undefined,
                          "valid": true,
                          "warning": undefined,
                        }
                      }
                      pure={true}
                      required={false}
                      reset={[Function]}
                      schemaVis={
                        Object {
                          "components": Object {
                            "CardItem": [Function],
                            "CardWithHeader": [Function],
                            "Color": [Function],
                            "Date": [Function],
                            "DateTime": [Function],
                            "Email": [Function],
                            "ListItemTemplate": [Function],
                            "ModalUniformedArrayCard": [Function],
                            "ModalUniformedArrayInline": [Function],
                            "ModalVariedArrayCard": [Function],
                            "ModalVariedArrayInline": [Function],
                            "Number": [Function],
                            "Password": [Function],
                            "SingleSelect": [Function],
                            "Text": [Function],
                            "TextArea": [Function],
                            "UniformedArrayCard": [Function],
                            "UniformedArrayInline": [Function],
                            "VariedArrayCard": [Function],
                            "VariedArrayInline": [Function],
                          },
                          "prefix": "meta.vis",
                          "schema": Object {
                            "id": "VariedArrayCard",
                            "items": Object {
                              "anyOf": Array [
                                Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "bar": Object {
                                      "id": "Bar",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Bar",
                                      "type": "string",
                                    },
                                    "name": Object {
                                      "id": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "object",
                                },
                                Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "baz": Object {
                                      "id": "Baz",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Number",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Baz",
                                      "type": "number",
                                    },
                                    "name": Object {
                                      "it": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "object",
                                },
                              ],
                              "id": "FooCard",
                              "meta": Object {
                                "vis": Object {
                                  "component": "SingleSelect",
                                },
                              },
                              "title": "Foo Card",
                              "type": "object",
                            },
                            "title": "Varied Array Card",
                            "type": "array",
                          },
                        }
                      }
                      selectInputProps={Object {}}
                      sheet={
                        StyleSheet {
                          "attached": true,
                          "classes": Object {
                            "addButton": "addButton-0-30",
                            "container": "container-0-28",
                            "header": "header-0-29",
                            "headerTitle": "headerTitle-0-31",
                          },
                          "deployed": true,
                          "linked": false,
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "renderer": DomRenderer {
                            "element": <style
                              data-jss=""
                              type="text/css"
                            >
                              
.container-0-28 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-29 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-30 {
  margin-left: auto;
}
.headerTitle-0-31 {
  margin-top: auto;
  margin-bottom: auto;
}

                            </style>,
                            "getSelector": [Function],
                            "getStyle": [Function],
                            "hasInsertedRules": false,
                            "setSelector": [Function],
                            "setStyle": [Function],
                            "sheet": [Circular],
                          },
                          "rules": RuleList {
                            "classes": Object {
                              "addButton": "addButton-0-30",
                              "container": "container-0-28",
                              "header": "header-0-29",
                              "headerTitle": "headerTitle-0-31",
                            },
                            "index": Array [
                              Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              Object {
                                "margin-left": "auto",
                              },
                              Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            ],
                            "map": Object {
                              ".addButton-0-30": Object {
                                "margin-left": "auto",
                              },
                              ".container-0-28": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              ".header-0-29": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              ".headerTitle-0-31": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                              "addButton": Object {
                                "margin-left": "auto",
                              },
                              "container": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              "headerTitle": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            },
                            "options": Object {
                              "Renderer": [Function],
                              "classes": Object {
                                "addButton": "addButton-0-30",
                                "container": "container-0-28",
                                "header": "header-0-29",
                                "headerTitle": "headerTitle-0-31",
                              },
                              "generateClassName": [Function],
                              "index": 0,
                              "insertionPoint": undefined,
                              "jss": Jss {
                                "generateClassName": [Function],
                                "options": Object {
                                  "Renderer": [Function],
                                  "createGenerateClassName": [Function],
                                  "plugins": Array [
                                    Object {
                                      "onCreateRule": [Function],
                                      "onProcessRule": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessRule": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                  ],
                                },
                                "plugins": PluginsRegistry {
                                  "hooks": Object {
                                    "onChangeValue": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onCreateRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessRule": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessSheet": Array [],
                                    "onProcessStyle": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                },
                                "version": "8.1.0",
                              },
                              "parent": [Circular],
                              "sheet": [Circular],
                            },
                            "raw": Object {
                              "addButton": Object {
                                "marginLeft": "auto",
                              },
                              "container": Object {
                                "marginBottom": 10,
                                "marginTop": 15,
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": 5,
                                "paddingLeft": 10,
                              },
                              "headerTitle": Object {
                                "marginBottom": "auto",
                                "marginTop": "auto",
                              },
                            },
                          },
                        }
                      }
                      styles={
                        Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        }
                      }
                      submit={[Function]}
                      submitForm={[Function]}
                      submitSucceeded={false}
                      tag={[Function]}
                      touch={[Function]}
                      triggerSubmit={undefined}
                      untouch={[Function]}
                      valid={true}
                      warning={undefined}
                    >
                      <div>
                        <Card
                          className="container-0-28"
                          tag="div"
                        >
                          <div
                            className="container-0-28 card"
                          >
                            <CardHeader
                              className="header-0-29"
                              tag="div"
                            >
                              <div
                                className="header-0-29 card-header"
                              >
                                <div
                                  className="headerTitle-0-31"
                                >
                                  Varied Array Card
                                </div>
                                <div
                                  className="addButton-0-30"
                                >
                                  <Button
                                    color="primary"
                                    onClick={[Function]}
                                    size="sm"
                                    tag="button"
                                  >
                                    <button
                                      className="btn btn-primary btn-sm"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Add
                                    </button>
                                  </Button>
                                </div>
                              </div>
                            </CardHeader>
                            <ListGroup
                              className={undefined}
                              flush={true}
                              tag="ul"
                            >
                              <ul
                                className="list-group list-group-flush"
                              />
                            </ListGroup>
                          </div>
                        </Card>
                        <Modal
                          autoFocus={true}
                          backdrop={true}
                          backdropTransition={
                            Object {
                              "mountOnEnter": true,
                              "timeout": 150,
                            }
                          }
                          fade={true}
                          isOpen={false}
                          keyboard={true}
                          modalTransition={
                            Object {
                              "timeout": 300,
                            }
                          }
                          onClosed={[Function]}
                          onOpened={[Function]}
                          role="dialog"
                          toggle={[Function]}
                          zIndex={1050}
                        />
                      </div>
                    </ModalVariedArray>
                  </Connect(ModalVariedArray)>
                </ConnectedFieldArray>
              </Connect(ConnectedFieldArray)>
            </FieldArray>
          </ModalVariedArrayCard>
        </StyledComponent>
      </Form(StyledComponent)>
    </Connect(Form(StyledComponent))>
  </ReduxForm>
</Provider>
`;

exports[`Render Varied Array Fields should handle add and cancel item modal 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    form="TestForm"
    name="foobar"
    schemaVis={
      Object {
        "components": Object {
          "CardItem": [Function],
          "CardWithHeader": [Function],
          "Color": [Function],
          "Date": [Function],
          "DateTime": [Function],
          "Email": [Function],
          "ListItemTemplate": [Function],
          "ModalUniformedArrayCard": [Function],
          "ModalUniformedArrayInline": [Function],
          "ModalVariedArrayCard": [Function],
          "ModalVariedArrayInline": [Function],
          "Number": [Function],
          "Password": [Function],
          "SingleSelect": [Function],
          "Text": [Function],
          "TextArea": [Function],
          "UniformedArrayCard": [Function],
          "UniformedArrayInline": [Function],
          "VariedArrayCard": [Function],
          "VariedArrayInline": [Function],
        },
        "prefix": "meta.vis",
        "schema": Object {
          "id": "VariedArrayCard",
          "items": Object {
            "anyOf": Array [
              Object {
                "id": "Bar",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "bar": Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 2,
                      },
                    },
                    "title": "Bar",
                    "type": "string",
                  },
                  "name": Object {
                    "id": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Bar",
                "type": "object",
              },
              Object {
                "id": "Baz",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "baz": Object {
                    "id": "Baz",
                    "meta": Object {
                      "vis": Object {
                        "component": "Number",
                        "ordinal": 2,
                      },
                    },
                    "title": "Baz",
                    "type": "number",
                  },
                  "name": Object {
                    "it": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Baz",
                "type": "object",
              },
            ],
            "id": "FooCard",
            "meta": Object {
              "vis": Object {
                "component": "SingleSelect",
              },
            },
            "title": "Foo Card",
            "type": "object",
          },
          "title": "Varied Array Card",
          "type": "array",
        },
      }
    }
  >
    <Connect(Form(StyledComponent))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="TestForm"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      name="foobar"
      persistentSubmitErrors={false}
      pure={true}
      schemaVis={
        Object {
          "components": Object {
            "CardItem": [Function],
            "CardWithHeader": [Function],
            "Color": [Function],
            "Date": [Function],
            "DateTime": [Function],
            "Email": [Function],
            "ListItemTemplate": [Function],
            "ModalUniformedArrayCard": [Function],
            "ModalUniformedArrayInline": [Function],
            "ModalVariedArrayCard": [Function],
            "ModalVariedArrayInline": [Function],
            "Number": [Function],
            "Password": [Function],
            "SingleSelect": [Function],
            "Text": [Function],
            "TextArea": [Function],
            "UniformedArrayCard": [Function],
            "UniformedArrayInline": [Function],
            "VariedArrayCard": [Function],
            "VariedArrayInline": [Function],
          },
          "prefix": "meta.vis",
          "schema": Object {
            "id": "VariedArrayCard",
            "items": Object {
              "anyOf": Array [
                Object {
                  "id": "Bar",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "bar": Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 2,
                        },
                      },
                      "title": "Bar",
                      "type": "string",
                    },
                    "name": Object {
                      "id": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Bar",
                  "type": "object",
                },
                Object {
                  "id": "Baz",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "baz": Object {
                      "id": "Baz",
                      "meta": Object {
                        "vis": Object {
                          "component": "Number",
                          "ordinal": 2,
                        },
                      },
                      "title": "Baz",
                      "type": "number",
                    },
                    "name": Object {
                      "it": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Baz",
                  "type": "object",
                },
              ],
              "id": "FooCard",
              "meta": Object {
                "vis": Object {
                  "component": "SingleSelect",
                },
              },
              "title": "Foo Card",
              "type": "object",
            },
            "title": "Varied Array Card",
            "type": "array",
          },
        }
      }
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      withRef={true}
    >
      <Form(StyledComponent)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncErrors={undefined}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={false}
        dispatch={[Function]}
        enableReinitialize={false}
        error={undefined}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="TestForm"
        getFormState={[Function]}
        initialValues={undefined}
        initialize={[Function]}
        initialized={false}
        invalid={false}
        keepDirtyOnReinitialize={false}
        name="foobar"
        persistentSubmitErrors={false}
        pristine={true}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "foobar": Object {
              "count": 1,
              "name": "foobar",
              "type": "FieldArray",
            },
          }
        }
        reset={[Function]}
        schemaVis={
          Object {
            "components": Object {
              "CardItem": [Function],
              "CardWithHeader": [Function],
              "Color": [Function],
              "Date": [Function],
              "DateTime": [Function],
              "Email": [Function],
              "ListItemTemplate": [Function],
              "ModalUniformedArrayCard": [Function],
              "ModalUniformedArrayInline": [Function],
              "ModalVariedArrayCard": [Function],
              "ModalVariedArrayInline": [Function],
              "Number": [Function],
              "Password": [Function],
              "SingleSelect": [Function],
              "Text": [Function],
              "TextArea": [Function],
              "UniformedArrayCard": [Function],
              "UniformedArrayInline": [Function],
              "VariedArrayCard": [Function],
              "VariedArrayInline": [Function],
            },
            "prefix": "meta.vis",
            "schema": Object {
              "id": "VariedArrayCard",
              "items": Object {
                "anyOf": Array [
                  Object {
                    "id": "Bar",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "bar": Object {
                        "id": "Bar",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 2,
                          },
                        },
                        "title": "Bar",
                        "type": "string",
                      },
                      "name": Object {
                        "id": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Bar",
                    "type": "object",
                  },
                  Object {
                    "id": "Baz",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "baz": Object {
                        "id": "Baz",
                        "meta": Object {
                          "vis": Object {
                            "component": "Number",
                            "ordinal": 2,
                          },
                        },
                        "title": "Baz",
                        "type": "number",
                      },
                      "name": Object {
                        "it": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Baz",
                    "type": "object",
                  },
                ],
                "id": "FooCard",
                "meta": Object {
                  "vis": Object {
                    "component": "SingleSelect",
                  },
                },
                "title": "Foo Card",
                "type": "object",
              },
              "title": "Varied Array Card",
              "type": "array",
            },
          }
        }
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldError={[Function]}
        shouldValidate={[Function]}
        shouldWarn={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={Object {}}
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        triggerSubmit={undefined}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={true}
        validExceptSubmit={true}
        values={Object {}}
        warning={undefined}
        withRef={true}
      >
        <StyledComponent
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={false}
          dispatch={[Function]}
          error={undefined}
          form="TestForm"
          handleSubmit={[Function]}
          initialValues={undefined}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          name="foobar"
          pristine={true}
          pure={true}
          reset={[Function]}
          schemaVis={
            Object {
              "components": Object {
                "CardItem": [Function],
                "CardWithHeader": [Function],
                "Color": [Function],
                "Date": [Function],
                "DateTime": [Function],
                "Email": [Function],
                "ListItemTemplate": [Function],
                "ModalUniformedArrayCard": [Function],
                "ModalUniformedArrayInline": [Function],
                "ModalVariedArrayCard": [Function],
                "ModalVariedArrayInline": [Function],
                "Number": [Function],
                "Password": [Function],
                "SingleSelect": [Function],
                "Text": [Function],
                "TextArea": [Function],
                "UniformedArrayCard": [Function],
                "UniformedArrayInline": [Function],
                "VariedArrayCard": [Function],
                "VariedArrayInline": [Function],
              },
              "prefix": "meta.vis",
              "schema": Object {
                "id": "VariedArrayCard",
                "items": Object {
                  "anyOf": Array [
                    Object {
                      "id": "Bar",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "bar": Object {
                          "id": "Bar",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 2,
                            },
                          },
                          "title": "Bar",
                          "type": "string",
                        },
                        "name": Object {
                          "id": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Bar",
                      "type": "object",
                    },
                    Object {
                      "id": "Baz",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "baz": Object {
                          "id": "Baz",
                          "meta": Object {
                            "vis": Object {
                              "component": "Number",
                              "ordinal": 2,
                            },
                          },
                          "title": "Baz",
                          "type": "number",
                        },
                        "name": Object {
                          "it": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Baz",
                      "type": "object",
                    },
                  ],
                  "id": "FooCard",
                  "meta": Object {
                    "vis": Object {
                      "component": "SingleSelect",
                    },
                  },
                  "title": "Foo Card",
                  "type": "object",
                },
                "title": "Varied Array Card",
                "type": "array",
              },
            }
          }
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          triggerSubmit={undefined}
          untouch={[Function]}
          valid={true}
          warning={undefined}
          withRef={true}
        >
          <ModalVariedArrayCard
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            classes={
              Object {
                "addButton": "addButton-0-23",
                "container": "container-0-21",
                "header": "header-0-22",
                "headerTitle": "headerTitle-0-24",
              }
            }
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={false}
            dispatch={[Function]}
            error={undefined}
            form="TestForm"
            handleSubmit={[Function]}
            initialValues={undefined}
            initialize={[Function]}
            initialized={false}
            invalid={false}
            name="foobar"
            pristine={true}
            pure={true}
            reset={[Function]}
            schemaVis={
              Object {
                "components": Object {
                  "CardItem": [Function],
                  "CardWithHeader": [Function],
                  "Color": [Function],
                  "Date": [Function],
                  "DateTime": [Function],
                  "Email": [Function],
                  "ListItemTemplate": [Function],
                  "ModalUniformedArrayCard": [Function],
                  "ModalUniformedArrayInline": [Function],
                  "ModalVariedArrayCard": [Function],
                  "ModalVariedArrayInline": [Function],
                  "Number": [Function],
                  "Password": [Function],
                  "SingleSelect": [Function],
                  "Text": [Function],
                  "TextArea": [Function],
                  "UniformedArrayCard": [Function],
                  "UniformedArrayInline": [Function],
                  "VariedArrayCard": [Function],
                  "VariedArrayInline": [Function],
                },
                "prefix": "meta.vis",
                "schema": Object {
                  "id": "VariedArrayCard",
                  "items": Object {
                    "anyOf": Array [
                      Object {
                        "id": "Bar",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "bar": Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 2,
                              },
                            },
                            "title": "Bar",
                            "type": "string",
                          },
                          "name": Object {
                            "id": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Bar",
                        "type": "object",
                      },
                      Object {
                        "id": "Baz",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "baz": Object {
                            "id": "Baz",
                            "meta": Object {
                              "vis": Object {
                                "component": "Number",
                                "ordinal": 2,
                              },
                            },
                            "title": "Baz",
                            "type": "number",
                          },
                          "name": Object {
                            "it": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Baz",
                        "type": "object",
                      },
                    ],
                    "id": "FooCard",
                    "meta": Object {
                      "vis": Object {
                        "component": "SingleSelect",
                      },
                    },
                    "title": "Foo Card",
                    "type": "object",
                  },
                  "title": "Varied Array Card",
                  "type": "array",
                },
              }
            }
            sheet={
              StyleSheet {
                "attached": true,
                "classes": Object {
                  "addButton": "addButton-0-23",
                  "container": "container-0-21",
                  "header": "header-0-22",
                  "headerTitle": "headerTitle-0-24",
                },
                "deployed": true,
                "linked": false,
                "options": Object {
                  "Renderer": [Function],
                  "classes": Object {
                    "addButton": "addButton-0-23",
                    "container": "container-0-21",
                    "header": "header-0-22",
                    "headerTitle": "headerTitle-0-24",
                  },
                  "generateClassName": [Function],
                  "index": 0,
                  "insertionPoint": undefined,
                  "jss": Jss {
                    "generateClassName": [Function],
                    "options": Object {
                      "Renderer": [Function],
                      "createGenerateClassName": [Function],
                      "plugins": Array [
                        Object {
                          "onCreateRule": [Function],
                          "onProcessRule": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessRule": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                      ],
                    },
                    "plugins": PluginsRegistry {
                      "hooks": Object {
                        "onChangeValue": Array [
                          [Function],
                          [Function],
                        ],
                        "onCreateRule": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "onProcessRule": Array [
                          [Function],
                          [Function],
                        ],
                        "onProcessSheet": Array [],
                        "onProcessStyle": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                    },
                    "version": "8.1.0",
                  },
                  "parent": [Circular],
                  "sheet": [Circular],
                },
                "renderer": DomRenderer {
                  "element": <style
                    data-jss=""
                    type="text/css"
                  >
                    
.container-0-21 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-22 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-23 {
  margin-left: auto;
}
.headerTitle-0-24 {
  margin-top: auto;
  margin-bottom: auto;
}

                  </style>,
                  "getSelector": [Function],
                  "getStyle": [Function],
                  "hasInsertedRules": false,
                  "setSelector": [Function],
                  "setStyle": [Function],
                  "sheet": [Circular],
                },
                "rules": RuleList {
                  "classes": Object {
                    "addButton": "addButton-0-23",
                    "container": "container-0-21",
                    "header": "header-0-22",
                    "headerTitle": "headerTitle-0-24",
                  },
                  "index": Array [
                    Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    Object {
                      "margin-left": "auto",
                    },
                    Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  ],
                  "map": Object {
                    ".addButton-0-23": Object {
                      "margin-left": "auto",
                    },
                    ".container-0-21": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    ".header-0-22": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    ".headerTitle-0-24": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                    "addButton": Object {
                      "margin-left": "auto",
                    },
                    "container": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    "headerTitle": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  },
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-23",
                      "container": "container-0-21",
                      "header": "header-0-22",
                      "headerTitle": "headerTitle-0-24",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "raw": Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  },
                },
              }
            }
            styles={
              Object {
                "addButton": Object {
                  "marginLeft": "auto",
                },
                "container": Object {
                  "marginBottom": 10,
                  "marginTop": 15,
                },
                "header": Object {
                  "display": "inline-flex",
                  "padding": 5,
                  "paddingLeft": 10,
                },
                "headerTitle": Object {
                  "marginBottom": "auto",
                  "marginTop": "auto",
                },
              }
            }
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            touch={[Function]}
            triggerSubmit={undefined}
            untouch={[Function]}
            valid={true}
            warning={undefined}
            withRef={true}
          >
            <FieldArray
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              asyncValidate={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              bodyProps={
                Object {
                  "flush": true,
                }
              }
              change={[Function]}
              classes={
                Object {
                  "addButton": "addButton-0-23",
                  "container": "container-0-21",
                  "header": "header-0-22",
                  "headerTitle": "headerTitle-0-24",
                }
              }
              clearAsyncError={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              component={[Function]}
              destroy={[Function]}
              dirty={false}
              dispatch={[Function]}
              error={undefined}
              form="TestForm"
              formName="variedArrayCardItem"
              handleSubmit={[Function]}
              initialValues={undefined}
              initialize={[Function]}
              initialized={false}
              invalid={false}
              name="foobar"
              pristine={true}
              pure={true}
              reset={[Function]}
              schemaVis={
                Object {
                  "components": Object {
                    "CardItem": [Function],
                    "CardWithHeader": [Function],
                    "Color": [Function],
                    "Date": [Function],
                    "DateTime": [Function],
                    "Email": [Function],
                    "ListItemTemplate": [Function],
                    "ModalUniformedArrayCard": [Function],
                    "ModalUniformedArrayInline": [Function],
                    "ModalVariedArrayCard": [Function],
                    "ModalVariedArrayInline": [Function],
                    "Number": [Function],
                    "Password": [Function],
                    "SingleSelect": [Function],
                    "Text": [Function],
                    "TextArea": [Function],
                    "UniformedArrayCard": [Function],
                    "UniformedArrayInline": [Function],
                    "VariedArrayCard": [Function],
                    "VariedArrayInline": [Function],
                  },
                  "prefix": "meta.vis",
                  "schema": Object {
                    "id": "VariedArrayCard",
                    "items": Object {
                      "anyOf": Array [
                        Object {
                          "id": "Bar",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "bar": Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Bar",
                              "type": "string",
                            },
                            "name": Object {
                              "id": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Bar",
                          "type": "object",
                        },
                        Object {
                          "id": "Baz",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "baz": Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Number",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Baz",
                              "type": "number",
                            },
                            "name": Object {
                              "it": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Baz",
                          "type": "object",
                        },
                      ],
                      "id": "FooCard",
                      "meta": Object {
                        "vis": Object {
                          "component": "SingleSelect",
                        },
                      },
                      "title": "Foo Card",
                      "type": "object",
                    },
                    "title": "Varied Array Card",
                    "type": "array",
                  },
                }
              }
              sheet={
                StyleSheet {
                  "attached": true,
                  "classes": Object {
                    "addButton": "addButton-0-23",
                    "container": "container-0-21",
                    "header": "header-0-22",
                    "headerTitle": "headerTitle-0-24",
                  },
                  "deployed": true,
                  "linked": false,
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-23",
                      "container": "container-0-21",
                      "header": "header-0-22",
                      "headerTitle": "headerTitle-0-24",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "renderer": DomRenderer {
                    "element": <style
                      data-jss=""
                      type="text/css"
                    >
                      
.container-0-21 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-22 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-23 {
  margin-left: auto;
}
.headerTitle-0-24 {
  margin-top: auto;
  margin-bottom: auto;
}

                    </style>,
                    "getSelector": [Function],
                    "getStyle": [Function],
                    "hasInsertedRules": false,
                    "setSelector": [Function],
                    "setStyle": [Function],
                    "sheet": [Circular],
                  },
                  "rules": RuleList {
                    "classes": Object {
                      "addButton": "addButton-0-23",
                      "container": "container-0-21",
                      "header": "header-0-22",
                      "headerTitle": "headerTitle-0-24",
                    },
                    "index": Array [
                      Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      Object {
                        "margin-left": "auto",
                      },
                      Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    ],
                    "map": Object {
                      ".addButton-0-23": Object {
                        "margin-left": "auto",
                      },
                      ".container-0-21": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      ".header-0-22": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      ".headerTitle-0-24": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                      "addButton": Object {
                        "margin-left": "auto",
                      },
                      "container": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      "headerTitle": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    },
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-23",
                        "container": "container-0-21",
                        "header": "header-0-22",
                        "headerTitle": "headerTitle-0-24",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "raw": Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    },
                  },
                }
              }
              styles={
                Object {
                  "addButton": Object {
                    "marginLeft": "auto",
                  },
                  "container": Object {
                    "marginBottom": 10,
                    "marginTop": 15,
                  },
                  "header": Object {
                    "display": "inline-flex",
                    "padding": 5,
                    "paddingLeft": 10,
                  },
                  "headerTitle": Object {
                    "marginBottom": "auto",
                    "marginTop": "auto",
                  },
                }
              }
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              touch={[Function]}
              triggerSubmit={undefined}
              untouch={[Function]}
              valid={true}
              validate={[Function]}
              warning={undefined}
              withRef={true}
            >
              <Connect(ConnectedFieldArray)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "TestForm",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "name": "foobar",
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": undefined,
                    "reset": [Function],
                    "schemaVis": Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    },
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldError": [Function],
                    "shouldValidate": [Function],
                    "shouldWarn": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {},
                    "warning": undefined,
                    "withRef": true,
                  }
                }
                anyTouched={false}
                array={
                  Object {
                    "insert": [Function],
                    "move": [Function],
                    "pop": [Function],
                    "push": [Function],
                    "remove": [Function],
                    "removeAll": [Function],
                    "shift": [Function],
                    "splice": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                  }
                }
                asyncValidate={[Function]}
                asyncValidating={false}
                autofill={[Function]}
                blur={[Function]}
                bodyProps={
                  Object {
                    "flush": true,
                  }
                }
                change={[Function]}
                classes={
                  Object {
                    "addButton": "addButton-0-23",
                    "container": "container-0-21",
                    "header": "header-0-22",
                    "headerTitle": "headerTitle-0-24",
                  }
                }
                clearAsyncError={[Function]}
                clearSubmit={[Function]}
                clearSubmitErrors={[Function]}
                component={[Function]}
                destroy={[Function]}
                dirty={false}
                dispatch={[Function]}
                error={undefined}
                form="TestForm"
                formName="variedArrayCardItem"
                handleSubmit={[Function]}
                initialValues={undefined}
                initialize={[Function]}
                initialized={false}
                invalid={false}
                name="foobar"
                pristine={true}
                pure={true}
                reset={[Function]}
                schemaVis={
                  Object {
                    "components": Object {
                      "CardItem": [Function],
                      "CardWithHeader": [Function],
                      "Color": [Function],
                      "Date": [Function],
                      "DateTime": [Function],
                      "Email": [Function],
                      "ListItemTemplate": [Function],
                      "ModalUniformedArrayCard": [Function],
                      "ModalUniformedArrayInline": [Function],
                      "ModalVariedArrayCard": [Function],
                      "ModalVariedArrayInline": [Function],
                      "Number": [Function],
                      "Password": [Function],
                      "SingleSelect": [Function],
                      "Text": [Function],
                      "TextArea": [Function],
                      "UniformedArrayCard": [Function],
                      "UniformedArrayInline": [Function],
                      "VariedArrayCard": [Function],
                      "VariedArrayInline": [Function],
                    },
                    "prefix": "meta.vis",
                    "schema": Object {
                      "id": "VariedArrayCard",
                      "items": Object {
                        "anyOf": Array [
                          Object {
                            "id": "Bar",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "bar": Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Bar",
                                "type": "string",
                              },
                              "name": Object {
                                "id": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Bar",
                            "type": "object",
                          },
                          Object {
                            "id": "Baz",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "baz": Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Number",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Baz",
                                "type": "number",
                              },
                              "name": Object {
                                "it": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Baz",
                            "type": "object",
                          },
                        ],
                        "id": "FooCard",
                        "meta": Object {
                          "vis": Object {
                            "component": "SingleSelect",
                          },
                        },
                        "title": "Foo Card",
                        "type": "object",
                      },
                      "title": "Varied Array Card",
                      "type": "array",
                    },
                  }
                }
                sheet={
                  StyleSheet {
                    "attached": true,
                    "classes": Object {
                      "addButton": "addButton-0-23",
                      "container": "container-0-21",
                      "header": "header-0-22",
                      "headerTitle": "headerTitle-0-24",
                    },
                    "deployed": true,
                    "linked": false,
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-23",
                        "container": "container-0-21",
                        "header": "header-0-22",
                        "headerTitle": "headerTitle-0-24",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "renderer": DomRenderer {
                      "element": <style
                        data-jss=""
                        type="text/css"
                      >
                        
.container-0-21 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-22 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-23 {
  margin-left: auto;
}
.headerTitle-0-24 {
  margin-top: auto;
  margin-bottom: auto;
}

                      </style>,
                      "getSelector": [Function],
                      "getStyle": [Function],
                      "hasInsertedRules": false,
                      "setSelector": [Function],
                      "setStyle": [Function],
                      "sheet": [Circular],
                    },
                    "rules": RuleList {
                      "classes": Object {
                        "addButton": "addButton-0-23",
                        "container": "container-0-21",
                        "header": "header-0-22",
                        "headerTitle": "headerTitle-0-24",
                      },
                      "index": Array [
                        Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        Object {
                          "margin-left": "auto",
                        },
                        Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      ],
                      "map": Object {
                        ".addButton-0-23": Object {
                          "margin-left": "auto",
                        },
                        ".container-0-21": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        ".header-0-22": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        ".headerTitle-0-24": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                        "addButton": Object {
                          "margin-left": "auto",
                        },
                        "container": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        "headerTitle": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      },
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-23",
                          "container": "container-0-21",
                          "header": "header-0-22",
                          "headerTitle": "headerTitle-0-24",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "raw": Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      },
                    },
                  }
                }
                styles={
                  Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  }
                }
                submit={[Function]}
                submitFailed={false}
                submitSucceeded={false}
                submitting={false}
                touch={[Function]}
                triggerSubmit={undefined}
                untouch={[Function]}
                valid={true}
                validate={[Function]}
                warning={undefined}
                withRef={true}
              >
                <ConnectedFieldArray
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "TestForm",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "name": "foobar",
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": undefined,
                      "reset": [Function],
                      "schemaVis": Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      },
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldError": [Function],
                      "shouldValidate": [Function],
                      "shouldWarn": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {},
                      "warning": undefined,
                      "withRef": true,
                    }
                  }
                  anyTouched={false}
                  array={
                    Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    }
                  }
                  arrayInsert={[Function]}
                  arrayMove={[Function]}
                  arrayPop={[Function]}
                  arrayPush={[Function]}
                  arrayRemove={[Function]}
                  arrayRemoveAll={[Function]}
                  arrayShift={[Function]}
                  arraySplice={[Function]}
                  arraySwap={[Function]}
                  arrayUnshift={[Function]}
                  asyncError={undefined}
                  asyncValidate={[Function]}
                  asyncValidating={false}
                  autofill={[Function]}
                  blur={[Function]}
                  bodyProps={
                    Object {
                      "flush": true,
                    }
                  }
                  change={[Function]}
                  classes={
                    Object {
                      "addButton": "addButton-0-23",
                      "container": "container-0-21",
                      "header": "header-0-22",
                      "headerTitle": "headerTitle-0-24",
                    }
                  }
                  clearAsyncError={[Function]}
                  clearSubmit={[Function]}
                  clearSubmitErrors={[Function]}
                  component={[Function]}
                  destroy={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  error={undefined}
                  form="TestForm"
                  formName="variedArrayCardItem"
                  handleSubmit={[Function]}
                  initialValues={undefined}
                  initialize={[Function]}
                  initialized={false}
                  invalid={false}
                  length={0}
                  name="foobar"
                  pristine={true}
                  pure={true}
                  rerenderOnEveryChange={false}
                  reset={[Function]}
                  schemaVis={
                    Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    }
                  }
                  sheet={
                    StyleSheet {
                      "attached": true,
                      "classes": Object {
                        "addButton": "addButton-0-23",
                        "container": "container-0-21",
                        "header": "header-0-22",
                        "headerTitle": "headerTitle-0-24",
                      },
                      "deployed": true,
                      "linked": false,
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-23",
                          "container": "container-0-21",
                          "header": "header-0-22",
                          "headerTitle": "headerTitle-0-24",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "renderer": DomRenderer {
                        "element": <style
                          data-jss=""
                          type="text/css"
                        >
                          
.container-0-21 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-22 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-23 {
  margin-left: auto;
}
.headerTitle-0-24 {
  margin-top: auto;
  margin-bottom: auto;
}

                        </style>,
                        "getSelector": [Function],
                        "getStyle": [Function],
                        "hasInsertedRules": false,
                        "setSelector": [Function],
                        "setStyle": [Function],
                        "sheet": [Circular],
                      },
                      "rules": RuleList {
                        "classes": Object {
                          "addButton": "addButton-0-23",
                          "container": "container-0-21",
                          "header": "header-0-22",
                          "headerTitle": "headerTitle-0-24",
                        },
                        "index": Array [
                          Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          Object {
                            "margin-left": "auto",
                          },
                          Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        ],
                        "map": Object {
                          ".addButton-0-23": Object {
                            "margin-left": "auto",
                          },
                          ".container-0-21": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          ".header-0-22": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          ".headerTitle-0-24": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                          "addButton": Object {
                            "margin-left": "auto",
                          },
                          "container": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          "headerTitle": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        },
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-23",
                            "container": "container-0-21",
                            "header": "header-0-22",
                            "headerTitle": "headerTitle-0-24",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "raw": Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        },
                      },
                    }
                  }
                  state={undefined}
                  styles={
                    Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    }
                  }
                  submit={[Function]}
                  submitError={undefined}
                  submitFailed={undefined}
                  submitSucceeded={false}
                  submitting={undefined}
                  syncError={undefined}
                  syncWarning={undefined}
                  touch={[Function]}
                  triggerSubmit={undefined}
                  untouch={[Function]}
                  valid={true}
                  validate={[Function]}
                  value={undefined}
                  warning={undefined}
                  withRef={true}
                >
                  <Connect(ModalVariedArray)
                    anyTouched={false}
                    array={
                      Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    asyncValidate={[Function]}
                    asyncValidating={false}
                    autofill={[Function]}
                    blur={[Function]}
                    bodyProps={
                      Object {
                        "flush": true,
                      }
                    }
                    change={[Function]}
                    classes={
                      Object {
                        "addButton": "addButton-0-23",
                        "container": "container-0-21",
                        "header": "header-0-22",
                        "headerTitle": "headerTitle-0-24",
                      }
                    }
                    clearAsyncError={[Function]}
                    clearSubmit={[Function]}
                    clearSubmitErrors={[Function]}
                    destroy={[Function]}
                    dispatch={[Function]}
                    error={undefined}
                    fields={
                      Object {
                        "_isFieldArray": true,
                        "forEach": [Function],
                        "get": [Function],
                        "getAll": [Function],
                        "insert": [Function],
                        "length": 0,
                        "map": [Function],
                        "move": [Function],
                        "name": "foobar",
                        "pop": [Function],
                        "push": [Function],
                        "reduce": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    form="TestForm"
                    formName="variedArrayCardItem"
                    handleSubmit={[Function]}
                    initialValues={undefined}
                    initialize={[Function]}
                    initialized={false}
                    invalid={false}
                    meta={
                      Object {
                        "dirty": false,
                        "error": undefined,
                        "form": "TestForm",
                        "invalid": false,
                        "pristine": true,
                        "submitFailed": undefined,
                        "submitting": undefined,
                        "valid": true,
                        "warning": undefined,
                      }
                    }
                    pure={true}
                    reset={[Function]}
                    schemaVis={
                      Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      }
                    }
                    sheet={
                      StyleSheet {
                        "attached": true,
                        "classes": Object {
                          "addButton": "addButton-0-23",
                          "container": "container-0-21",
                          "header": "header-0-22",
                          "headerTitle": "headerTitle-0-24",
                        },
                        "deployed": true,
                        "linked": false,
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-23",
                            "container": "container-0-21",
                            "header": "header-0-22",
                            "headerTitle": "headerTitle-0-24",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "renderer": DomRenderer {
                          "element": <style
                            data-jss=""
                            type="text/css"
                          >
                            
.container-0-21 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-22 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-23 {
  margin-left: auto;
}
.headerTitle-0-24 {
  margin-top: auto;
  margin-bottom: auto;
}

                          </style>,
                          "getSelector": [Function],
                          "getStyle": [Function],
                          "hasInsertedRules": false,
                          "setSelector": [Function],
                          "setStyle": [Function],
                          "sheet": [Circular],
                        },
                        "rules": RuleList {
                          "classes": Object {
                            "addButton": "addButton-0-23",
                            "container": "container-0-21",
                            "header": "header-0-22",
                            "headerTitle": "headerTitle-0-24",
                          },
                          "index": Array [
                            Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            Object {
                              "margin-left": "auto",
                            },
                            Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          ],
                          "map": Object {
                            ".addButton-0-23": Object {
                              "margin-left": "auto",
                            },
                            ".container-0-21": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            ".header-0-22": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            ".headerTitle-0-24": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                            "addButton": Object {
                              "margin-left": "auto",
                            },
                            "container": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            "headerTitle": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          },
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-23",
                              "container": "container-0-21",
                              "header": "header-0-22",
                              "headerTitle": "headerTitle-0-24",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "raw": Object {
                            "addButton": Object {
                              "marginLeft": "auto",
                            },
                            "container": Object {
                              "marginBottom": 10,
                              "marginTop": 15,
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": 5,
                              "paddingLeft": 10,
                            },
                            "headerTitle": Object {
                              "marginBottom": "auto",
                              "marginTop": "auto",
                            },
                          },
                        },
                      }
                    }
                    styles={
                      Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      }
                    }
                    submit={[Function]}
                    submitSucceeded={false}
                    touch={[Function]}
                    triggerSubmit={undefined}
                    untouch={[Function]}
                    valid={true}
                    warning={undefined}
                  >
                    <ModalVariedArray
                      addBtnProps={Object {}}
                      anyTouched={false}
                      array={
                        Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "splice": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      asyncValidate={[Function]}
                      asyncValidating={false}
                      autofill={[Function]}
                      blur={[Function]}
                      bodyProps={
                        Object {
                          "flush": true,
                        }
                      }
                      bodyTag={[Function]}
                      change={[Function]}
                      changeForm={[Function]}
                      classes={
                        Object {
                          "addButton": "addButton-0-23",
                          "container": "container-0-21",
                          "header": "header-0-22",
                          "headerTitle": "headerTitle-0-24",
                        }
                      }
                      clearAsyncError={[Function]}
                      clearSubmit={[Function]}
                      clearSubmitErrors={[Function]}
                      dataSchemaPrefix="meta.data"
                      destroy={[Function]}
                      destroyForm={[Function]}
                      dispatch={[Function]}
                      error={undefined}
                      fields={
                        Object {
                          "_isFieldArray": true,
                          "forEach": [Function],
                          "get": [Function],
                          "getAll": [Function],
                          "insert": [Function],
                          "length": 0,
                          "map": [Function],
                          "move": [Function],
                          "name": "foobar",
                          "pop": [Function],
                          "push": [Function],
                          "reduce": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      form="TestForm"
                      formName="variedArrayCardItem"
                      handleSubmit={[Function]}
                      headerTag={[Function]}
                      initialValues={undefined}
                      initialize={[Function]}
                      initialized={false}
                      invalid={false}
                      items={undefined}
                      meta={
                        Object {
                          "dirty": false,
                          "error": undefined,
                          "form": "TestForm",
                          "invalid": false,
                          "pristine": true,
                          "submitFailed": undefined,
                          "submitting": undefined,
                          "valid": true,
                          "warning": undefined,
                        }
                      }
                      pure={true}
                      required={false}
                      reset={[Function]}
                      schemaVis={
                        Object {
                          "components": Object {
                            "CardItem": [Function],
                            "CardWithHeader": [Function],
                            "Color": [Function],
                            "Date": [Function],
                            "DateTime": [Function],
                            "Email": [Function],
                            "ListItemTemplate": [Function],
                            "ModalUniformedArrayCard": [Function],
                            "ModalUniformedArrayInline": [Function],
                            "ModalVariedArrayCard": [Function],
                            "ModalVariedArrayInline": [Function],
                            "Number": [Function],
                            "Password": [Function],
                            "SingleSelect": [Function],
                            "Text": [Function],
                            "TextArea": [Function],
                            "UniformedArrayCard": [Function],
                            "UniformedArrayInline": [Function],
                            "VariedArrayCard": [Function],
                            "VariedArrayInline": [Function],
                          },
                          "prefix": "meta.vis",
                          "schema": Object {
                            "id": "VariedArrayCard",
                            "items": Object {
                              "anyOf": Array [
                                Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "bar": Object {
                                      "id": "Bar",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Bar",
                                      "type": "string",
                                    },
                                    "name": Object {
                                      "id": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "object",
                                },
                                Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "baz": Object {
                                      "id": "Baz",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Number",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Baz",
                                      "type": "number",
                                    },
                                    "name": Object {
                                      "it": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "object",
                                },
                              ],
                              "id": "FooCard",
                              "meta": Object {
                                "vis": Object {
                                  "component": "SingleSelect",
                                },
                              },
                              "title": "Foo Card",
                              "type": "object",
                            },
                            "title": "Varied Array Card",
                            "type": "array",
                          },
                        }
                      }
                      selectInputProps={Object {}}
                      sheet={
                        StyleSheet {
                          "attached": true,
                          "classes": Object {
                            "addButton": "addButton-0-23",
                            "container": "container-0-21",
                            "header": "header-0-22",
                            "headerTitle": "headerTitle-0-24",
                          },
                          "deployed": true,
                          "linked": false,
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-23",
                              "container": "container-0-21",
                              "header": "header-0-22",
                              "headerTitle": "headerTitle-0-24",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "renderer": DomRenderer {
                            "element": <style
                              data-jss=""
                              type="text/css"
                            >
                              
.container-0-21 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-22 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-23 {
  margin-left: auto;
}
.headerTitle-0-24 {
  margin-top: auto;
  margin-bottom: auto;
}

                            </style>,
                            "getSelector": [Function],
                            "getStyle": [Function],
                            "hasInsertedRules": false,
                            "setSelector": [Function],
                            "setStyle": [Function],
                            "sheet": [Circular],
                          },
                          "rules": RuleList {
                            "classes": Object {
                              "addButton": "addButton-0-23",
                              "container": "container-0-21",
                              "header": "header-0-22",
                              "headerTitle": "headerTitle-0-24",
                            },
                            "index": Array [
                              Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              Object {
                                "margin-left": "auto",
                              },
                              Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            ],
                            "map": Object {
                              ".addButton-0-23": Object {
                                "margin-left": "auto",
                              },
                              ".container-0-21": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              ".header-0-22": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              ".headerTitle-0-24": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                              "addButton": Object {
                                "margin-left": "auto",
                              },
                              "container": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              "headerTitle": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            },
                            "options": Object {
                              "Renderer": [Function],
                              "classes": Object {
                                "addButton": "addButton-0-23",
                                "container": "container-0-21",
                                "header": "header-0-22",
                                "headerTitle": "headerTitle-0-24",
                              },
                              "generateClassName": [Function],
                              "index": 0,
                              "insertionPoint": undefined,
                              "jss": Jss {
                                "generateClassName": [Function],
                                "options": Object {
                                  "Renderer": [Function],
                                  "createGenerateClassName": [Function],
                                  "plugins": Array [
                                    Object {
                                      "onCreateRule": [Function],
                                      "onProcessRule": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessRule": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                  ],
                                },
                                "plugins": PluginsRegistry {
                                  "hooks": Object {
                                    "onChangeValue": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onCreateRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessRule": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessSheet": Array [],
                                    "onProcessStyle": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                },
                                "version": "8.1.0",
                              },
                              "parent": [Circular],
                              "sheet": [Circular],
                            },
                            "raw": Object {
                              "addButton": Object {
                                "marginLeft": "auto",
                              },
                              "container": Object {
                                "marginBottom": 10,
                                "marginTop": 15,
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": 5,
                                "paddingLeft": 10,
                              },
                              "headerTitle": Object {
                                "marginBottom": "auto",
                                "marginTop": "auto",
                              },
                            },
                          },
                        }
                      }
                      styles={
                        Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        }
                      }
                      submit={[Function]}
                      submitForm={[Function]}
                      submitSucceeded={false}
                      tag={[Function]}
                      touch={[Function]}
                      triggerSubmit={undefined}
                      untouch={[Function]}
                      valid={true}
                      warning={undefined}
                    >
                      <div>
                        <Card
                          className="container-0-21"
                          tag="div"
                        >
                          <div
                            className="container-0-21 card"
                          >
                            <CardHeader
                              className="header-0-22"
                              tag="div"
                            >
                              <div
                                className="header-0-22 card-header"
                              >
                                <div
                                  className="headerTitle-0-24"
                                >
                                  Varied Array Card
                                </div>
                                <div
                                  className="addButton-0-23"
                                >
                                  <Button
                                    color="primary"
                                    onClick={[Function]}
                                    size="sm"
                                    tag="button"
                                  >
                                    <button
                                      className="btn btn-primary btn-sm"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Add
                                    </button>
                                  </Button>
                                </div>
                              </div>
                            </CardHeader>
                            <ListGroup
                              className={undefined}
                              flush={true}
                              tag="ul"
                            >
                              <ul
                                className="list-group list-group-flush"
                              />
                            </ListGroup>
                          </div>
                        </Card>
                        <Modal
                          autoFocus={true}
                          backdrop={true}
                          backdropTransition={
                            Object {
                              "mountOnEnter": true,
                              "timeout": 150,
                            }
                          }
                          fade={true}
                          isOpen={false}
                          keyboard={true}
                          modalTransition={
                            Object {
                              "timeout": 300,
                            }
                          }
                          onClosed={[Function]}
                          onOpened={[Function]}
                          role="dialog"
                          toggle={[Function]}
                          zIndex={1050}
                        />
                      </div>
                    </ModalVariedArray>
                  </Connect(ModalVariedArray)>
                </ConnectedFieldArray>
              </Connect(ConnectedFieldArray)>
            </FieldArray>
          </ModalVariedArrayCard>
        </StyledComponent>
      </Form(StyledComponent)>
    </Connect(Form(StyledComponent))>
  </ReduxForm>
</Provider>
`;

exports[`Render Varied Array Fields should handle add and cancel item modal 2`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    form="TestForm"
    name="foobar"
    schemaVis={
      Object {
        "components": Object {
          "CardItem": [Function],
          "CardWithHeader": [Function],
          "Color": [Function],
          "Date": [Function],
          "DateTime": [Function],
          "Email": [Function],
          "ListItemTemplate": [Function],
          "ModalUniformedArrayCard": [Function],
          "ModalUniformedArrayInline": [Function],
          "ModalVariedArrayCard": [Function],
          "ModalVariedArrayInline": [Function],
          "Number": [Function],
          "Password": [Function],
          "SingleSelect": [Function],
          "Text": [Function],
          "TextArea": [Function],
          "UniformedArrayCard": [Function],
          "UniformedArrayInline": [Function],
          "VariedArrayCard": [Function],
          "VariedArrayInline": [Function],
        },
        "prefix": "meta.vis",
        "schema": Object {
          "id": "VariedArrayCard",
          "items": Object {
            "anyOf": Array [
              Object {
                "id": "Bar",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "bar": Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 2,
                      },
                    },
                    "title": "Bar",
                    "type": "string",
                  },
                  "name": Object {
                    "id": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Bar",
                "type": "object",
              },
              Object {
                "id": "Baz",
                "meta": Object {
                  "data": Object {
                    "component": "ListItemTemplate",
                    "template": Array [
                      "\${name} (Bar: \${bar})",
                      "\${name}",
                    ],
                  },
                },
                "properties": Object {
                  "baz": Object {
                    "id": "Baz",
                    "meta": Object {
                      "vis": Object {
                        "component": "Number",
                        "ordinal": 2,
                      },
                    },
                    "title": "Baz",
                    "type": "number",
                  },
                  "name": Object {
                    "it": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Baz",
                "type": "object",
              },
            ],
            "id": "FooCard",
            "meta": Object {
              "vis": Object {
                "component": "SingleSelect",
              },
            },
            "title": "Foo Card",
            "type": "object",
          },
          "title": "Varied Array Card",
          "type": "array",
        },
      }
    }
  >
    <Connect(Form(StyledComponent))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="TestForm"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      name="foobar"
      persistentSubmitErrors={false}
      pure={true}
      schemaVis={
        Object {
          "components": Object {
            "CardItem": [Function],
            "CardWithHeader": [Function],
            "Color": [Function],
            "Date": [Function],
            "DateTime": [Function],
            "Email": [Function],
            "ListItemTemplate": [Function],
            "ModalUniformedArrayCard": [Function],
            "ModalUniformedArrayInline": [Function],
            "ModalVariedArrayCard": [Function],
            "ModalVariedArrayInline": [Function],
            "Number": [Function],
            "Password": [Function],
            "SingleSelect": [Function],
            "Text": [Function],
            "TextArea": [Function],
            "UniformedArrayCard": [Function],
            "UniformedArrayInline": [Function],
            "VariedArrayCard": [Function],
            "VariedArrayInline": [Function],
          },
          "prefix": "meta.vis",
          "schema": Object {
            "id": "VariedArrayCard",
            "items": Object {
              "anyOf": Array [
                Object {
                  "id": "Bar",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "bar": Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 2,
                        },
                      },
                      "title": "Bar",
                      "type": "string",
                    },
                    "name": Object {
                      "id": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Bar",
                  "type": "object",
                },
                Object {
                  "id": "Baz",
                  "meta": Object {
                    "data": Object {
                      "component": "ListItemTemplate",
                      "template": Array [
                        "\${name} (Bar: \${bar})",
                        "\${name}",
                      ],
                    },
                  },
                  "properties": Object {
                    "baz": Object {
                      "id": "Baz",
                      "meta": Object {
                        "vis": Object {
                          "component": "Number",
                          "ordinal": 2,
                        },
                      },
                      "title": "Baz",
                      "type": "number",
                    },
                    "name": Object {
                      "it": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Baz",
                  "type": "object",
                },
              ],
              "id": "FooCard",
              "meta": Object {
                "vis": Object {
                  "component": "SingleSelect",
                },
              },
              "title": "Foo Card",
              "type": "object",
            },
            "title": "Varied Array Card",
            "type": "array",
          },
        }
      }
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      withRef={true}
    >
      <Form(StyledComponent)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncErrors={undefined}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={false}
        dispatch={[Function]}
        enableReinitialize={false}
        error={undefined}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="TestForm"
        getFormState={[Function]}
        initialValues={undefined}
        initialize={[Function]}
        initialized={false}
        invalid={false}
        keepDirtyOnReinitialize={false}
        name="foobar"
        persistentSubmitErrors={false}
        pristine={true}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "foobar": Object {
              "count": 1,
              "name": "foobar",
              "type": "FieldArray",
            },
          }
        }
        reset={[Function]}
        schemaVis={
          Object {
            "components": Object {
              "CardItem": [Function],
              "CardWithHeader": [Function],
              "Color": [Function],
              "Date": [Function],
              "DateTime": [Function],
              "Email": [Function],
              "ListItemTemplate": [Function],
              "ModalUniformedArrayCard": [Function],
              "ModalUniformedArrayInline": [Function],
              "ModalVariedArrayCard": [Function],
              "ModalVariedArrayInline": [Function],
              "Number": [Function],
              "Password": [Function],
              "SingleSelect": [Function],
              "Text": [Function],
              "TextArea": [Function],
              "UniformedArrayCard": [Function],
              "UniformedArrayInline": [Function],
              "VariedArrayCard": [Function],
              "VariedArrayInline": [Function],
            },
            "prefix": "meta.vis",
            "schema": Object {
              "id": "VariedArrayCard",
              "items": Object {
                "anyOf": Array [
                  Object {
                    "id": "Bar",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "bar": Object {
                        "id": "Bar",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 2,
                          },
                        },
                        "title": "Bar",
                        "type": "string",
                      },
                      "name": Object {
                        "id": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Bar",
                    "type": "object",
                  },
                  Object {
                    "id": "Baz",
                    "meta": Object {
                      "data": Object {
                        "component": "ListItemTemplate",
                        "template": Array [
                          "\${name} (Bar: \${bar})",
                          "\${name}",
                        ],
                      },
                    },
                    "properties": Object {
                      "baz": Object {
                        "id": "Baz",
                        "meta": Object {
                          "vis": Object {
                            "component": "Number",
                            "ordinal": 2,
                          },
                        },
                        "title": "Baz",
                        "type": "number",
                      },
                      "name": Object {
                        "it": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Baz",
                    "type": "object",
                  },
                ],
                "id": "FooCard",
                "meta": Object {
                  "vis": Object {
                    "component": "SingleSelect",
                  },
                },
                "title": "Foo Card",
                "type": "object",
              },
              "title": "Varied Array Card",
              "type": "array",
            },
          }
        }
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldError={[Function]}
        shouldValidate={[Function]}
        shouldWarn={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={Object {}}
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        triggerSubmit={undefined}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={true}
        validExceptSubmit={true}
        values={Object {}}
        warning={undefined}
        withRef={true}
      >
        <StyledComponent
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={false}
          dispatch={[Function]}
          error={undefined}
          form="TestForm"
          handleSubmit={[Function]}
          initialValues={undefined}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          name="foobar"
          pristine={true}
          pure={true}
          reset={[Function]}
          schemaVis={
            Object {
              "components": Object {
                "CardItem": [Function],
                "CardWithHeader": [Function],
                "Color": [Function],
                "Date": [Function],
                "DateTime": [Function],
                "Email": [Function],
                "ListItemTemplate": [Function],
                "ModalUniformedArrayCard": [Function],
                "ModalUniformedArrayInline": [Function],
                "ModalVariedArrayCard": [Function],
                "ModalVariedArrayInline": [Function],
                "Number": [Function],
                "Password": [Function],
                "SingleSelect": [Function],
                "Text": [Function],
                "TextArea": [Function],
                "UniformedArrayCard": [Function],
                "UniformedArrayInline": [Function],
                "VariedArrayCard": [Function],
                "VariedArrayInline": [Function],
              },
              "prefix": "meta.vis",
              "schema": Object {
                "id": "VariedArrayCard",
                "items": Object {
                  "anyOf": Array [
                    Object {
                      "id": "Bar",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "bar": Object {
                          "id": "Bar",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 2,
                            },
                          },
                          "title": "Bar",
                          "type": "string",
                        },
                        "name": Object {
                          "id": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Bar",
                      "type": "object",
                    },
                    Object {
                      "id": "Baz",
                      "meta": Object {
                        "data": Object {
                          "component": "ListItemTemplate",
                          "template": Array [
                            "\${name} (Bar: \${bar})",
                            "\${name}",
                          ],
                        },
                      },
                      "properties": Object {
                        "baz": Object {
                          "id": "Baz",
                          "meta": Object {
                            "vis": Object {
                              "component": "Number",
                              "ordinal": 2,
                            },
                          },
                          "title": "Baz",
                          "type": "number",
                        },
                        "name": Object {
                          "it": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Baz",
                      "type": "object",
                    },
                  ],
                  "id": "FooCard",
                  "meta": Object {
                    "vis": Object {
                      "component": "SingleSelect",
                    },
                  },
                  "title": "Foo Card",
                  "type": "object",
                },
                "title": "Varied Array Card",
                "type": "array",
              },
            }
          }
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          triggerSubmit={undefined}
          untouch={[Function]}
          valid={true}
          warning={undefined}
          withRef={true}
        >
          <ModalVariedArrayCard
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            classes={
              Object {
                "addButton": "addButton-0-23",
                "container": "container-0-21",
                "header": "header-0-22",
                "headerTitle": "headerTitle-0-24",
              }
            }
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={false}
            dispatch={[Function]}
            error={undefined}
            form="TestForm"
            handleSubmit={[Function]}
            initialValues={undefined}
            initialize={[Function]}
            initialized={false}
            invalid={false}
            name="foobar"
            pristine={true}
            pure={true}
            reset={[Function]}
            schemaVis={
              Object {
                "components": Object {
                  "CardItem": [Function],
                  "CardWithHeader": [Function],
                  "Color": [Function],
                  "Date": [Function],
                  "DateTime": [Function],
                  "Email": [Function],
                  "ListItemTemplate": [Function],
                  "ModalUniformedArrayCard": [Function],
                  "ModalUniformedArrayInline": [Function],
                  "ModalVariedArrayCard": [Function],
                  "ModalVariedArrayInline": [Function],
                  "Number": [Function],
                  "Password": [Function],
                  "SingleSelect": [Function],
                  "Text": [Function],
                  "TextArea": [Function],
                  "UniformedArrayCard": [Function],
                  "UniformedArrayInline": [Function],
                  "VariedArrayCard": [Function],
                  "VariedArrayInline": [Function],
                },
                "prefix": "meta.vis",
                "schema": Object {
                  "id": "VariedArrayCard",
                  "items": Object {
                    "anyOf": Array [
                      Object {
                        "id": "Bar",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "bar": Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 2,
                              },
                            },
                            "title": "Bar",
                            "type": "string",
                          },
                          "name": Object {
                            "id": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Bar",
                        "type": "object",
                      },
                      Object {
                        "id": "Baz",
                        "meta": Object {
                          "data": Object {
                            "component": "ListItemTemplate",
                            "template": Array [
                              "\${name} (Bar: \${bar})",
                              "\${name}",
                            ],
                          },
                        },
                        "properties": Object {
                          "baz": Object {
                            "id": "Baz",
                            "meta": Object {
                              "vis": Object {
                                "component": "Number",
                                "ordinal": 2,
                              },
                            },
                            "title": "Baz",
                            "type": "number",
                          },
                          "name": Object {
                            "it": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Baz",
                        "type": "object",
                      },
                    ],
                    "id": "FooCard",
                    "meta": Object {
                      "vis": Object {
                        "component": "SingleSelect",
                      },
                    },
                    "title": "Foo Card",
                    "type": "object",
                  },
                  "title": "Varied Array Card",
                  "type": "array",
                },
              }
            }
            sheet={
              StyleSheet {
                "attached": true,
                "classes": Object {
                  "addButton": "addButton-0-23",
                  "container": "container-0-21",
                  "header": "header-0-22",
                  "headerTitle": "headerTitle-0-24",
                },
                "deployed": true,
                "linked": false,
                "options": Object {
                  "Renderer": [Function],
                  "classes": Object {
                    "addButton": "addButton-0-23",
                    "container": "container-0-21",
                    "header": "header-0-22",
                    "headerTitle": "headerTitle-0-24",
                  },
                  "generateClassName": [Function],
                  "index": 0,
                  "insertionPoint": undefined,
                  "jss": Jss {
                    "generateClassName": [Function],
                    "options": Object {
                      "Renderer": [Function],
                      "createGenerateClassName": [Function],
                      "plugins": Array [
                        Object {
                          "onCreateRule": [Function],
                          "onProcessRule": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessRule": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                      ],
                    },
                    "plugins": PluginsRegistry {
                      "hooks": Object {
                        "onChangeValue": Array [
                          [Function],
                          [Function],
                        ],
                        "onCreateRule": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "onProcessRule": Array [
                          [Function],
                          [Function],
                        ],
                        "onProcessSheet": Array [],
                        "onProcessStyle": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                    },
                    "version": "8.1.0",
                  },
                  "parent": [Circular],
                  "sheet": [Circular],
                },
                "renderer": DomRenderer {
                  "element": <style
                    data-jss=""
                    type="text/css"
                  >
                    
.container-0-21 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-22 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-23 {
  margin-left: auto;
}
.headerTitle-0-24 {
  margin-top: auto;
  margin-bottom: auto;
}

                  </style>,
                  "getSelector": [Function],
                  "getStyle": [Function],
                  "hasInsertedRules": false,
                  "setSelector": [Function],
                  "setStyle": [Function],
                  "sheet": [Circular],
                },
                "rules": RuleList {
                  "classes": Object {
                    "addButton": "addButton-0-23",
                    "container": "container-0-21",
                    "header": "header-0-22",
                    "headerTitle": "headerTitle-0-24",
                  },
                  "index": Array [
                    Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    Object {
                      "margin-left": "auto",
                    },
                    Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  ],
                  "map": Object {
                    ".addButton-0-23": Object {
                      "margin-left": "auto",
                    },
                    ".container-0-21": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    ".header-0-22": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    ".headerTitle-0-24": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                    "addButton": Object {
                      "margin-left": "auto",
                    },
                    "container": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    "headerTitle": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  },
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-23",
                      "container": "container-0-21",
                      "header": "header-0-22",
                      "headerTitle": "headerTitle-0-24",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "raw": Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  },
                },
              }
            }
            styles={
              Object {
                "addButton": Object {
                  "marginLeft": "auto",
                },
                "container": Object {
                  "marginBottom": 10,
                  "marginTop": 15,
                },
                "header": Object {
                  "display": "inline-flex",
                  "padding": 5,
                  "paddingLeft": 10,
                },
                "headerTitle": Object {
                  "marginBottom": "auto",
                  "marginTop": "auto",
                },
              }
            }
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            touch={[Function]}
            triggerSubmit={undefined}
            untouch={[Function]}
            valid={true}
            warning={undefined}
            withRef={true}
          >
            <FieldArray
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              asyncValidate={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              bodyProps={
                Object {
                  "flush": true,
                }
              }
              change={[Function]}
              classes={
                Object {
                  "addButton": "addButton-0-23",
                  "container": "container-0-21",
                  "header": "header-0-22",
                  "headerTitle": "headerTitle-0-24",
                }
              }
              clearAsyncError={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              component={[Function]}
              destroy={[Function]}
              dirty={false}
              dispatch={[Function]}
              error={undefined}
              form="TestForm"
              formName="variedArrayCardItem"
              handleSubmit={[Function]}
              initialValues={undefined}
              initialize={[Function]}
              initialized={false}
              invalid={false}
              name="foobar"
              pristine={true}
              pure={true}
              reset={[Function]}
              schemaVis={
                Object {
                  "components": Object {
                    "CardItem": [Function],
                    "CardWithHeader": [Function],
                    "Color": [Function],
                    "Date": [Function],
                    "DateTime": [Function],
                    "Email": [Function],
                    "ListItemTemplate": [Function],
                    "ModalUniformedArrayCard": [Function],
                    "ModalUniformedArrayInline": [Function],
                    "ModalVariedArrayCard": [Function],
                    "ModalVariedArrayInline": [Function],
                    "Number": [Function],
                    "Password": [Function],
                    "SingleSelect": [Function],
                    "Text": [Function],
                    "TextArea": [Function],
                    "UniformedArrayCard": [Function],
                    "UniformedArrayInline": [Function],
                    "VariedArrayCard": [Function],
                    "VariedArrayInline": [Function],
                  },
                  "prefix": "meta.vis",
                  "schema": Object {
                    "id": "VariedArrayCard",
                    "items": Object {
                      "anyOf": Array [
                        Object {
                          "id": "Bar",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "bar": Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Bar",
                              "type": "string",
                            },
                            "name": Object {
                              "id": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Bar",
                          "type": "object",
                        },
                        Object {
                          "id": "Baz",
                          "meta": Object {
                            "data": Object {
                              "component": "ListItemTemplate",
                              "template": Array [
                                "\${name} (Bar: \${bar})",
                                "\${name}",
                              ],
                            },
                          },
                          "properties": Object {
                            "baz": Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Number",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Baz",
                              "type": "number",
                            },
                            "name": Object {
                              "it": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Baz",
                          "type": "object",
                        },
                      ],
                      "id": "FooCard",
                      "meta": Object {
                        "vis": Object {
                          "component": "SingleSelect",
                        },
                      },
                      "title": "Foo Card",
                      "type": "object",
                    },
                    "title": "Varied Array Card",
                    "type": "array",
                  },
                }
              }
              sheet={
                StyleSheet {
                  "attached": true,
                  "classes": Object {
                    "addButton": "addButton-0-23",
                    "container": "container-0-21",
                    "header": "header-0-22",
                    "headerTitle": "headerTitle-0-24",
                  },
                  "deployed": true,
                  "linked": false,
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-23",
                      "container": "container-0-21",
                      "header": "header-0-22",
                      "headerTitle": "headerTitle-0-24",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "renderer": DomRenderer {
                    "element": <style
                      data-jss=""
                      type="text/css"
                    >
                      
.container-0-21 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-22 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-23 {
  margin-left: auto;
}
.headerTitle-0-24 {
  margin-top: auto;
  margin-bottom: auto;
}

                    </style>,
                    "getSelector": [Function],
                    "getStyle": [Function],
                    "hasInsertedRules": false,
                    "setSelector": [Function],
                    "setStyle": [Function],
                    "sheet": [Circular],
                  },
                  "rules": RuleList {
                    "classes": Object {
                      "addButton": "addButton-0-23",
                      "container": "container-0-21",
                      "header": "header-0-22",
                      "headerTitle": "headerTitle-0-24",
                    },
                    "index": Array [
                      Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      Object {
                        "margin-left": "auto",
                      },
                      Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    ],
                    "map": Object {
                      ".addButton-0-23": Object {
                        "margin-left": "auto",
                      },
                      ".container-0-21": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      ".header-0-22": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      ".headerTitle-0-24": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                      "addButton": Object {
                        "margin-left": "auto",
                      },
                      "container": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      "headerTitle": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    },
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-23",
                        "container": "container-0-21",
                        "header": "header-0-22",
                        "headerTitle": "headerTitle-0-24",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "raw": Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    },
                  },
                }
              }
              styles={
                Object {
                  "addButton": Object {
                    "marginLeft": "auto",
                  },
                  "container": Object {
                    "marginBottom": 10,
                    "marginTop": 15,
                  },
                  "header": Object {
                    "display": "inline-flex",
                    "padding": 5,
                    "paddingLeft": 10,
                  },
                  "headerTitle": Object {
                    "marginBottom": "auto",
                    "marginTop": "auto",
                  },
                }
              }
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              touch={[Function]}
              triggerSubmit={undefined}
              untouch={[Function]}
              valid={true}
              validate={[Function]}
              warning={undefined}
              withRef={true}
            >
              <Connect(ConnectedFieldArray)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "TestForm",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "name": "foobar",
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": undefined,
                    "reset": [Function],
                    "schemaVis": Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    },
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldError": [Function],
                    "shouldValidate": [Function],
                    "shouldWarn": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {},
                    "warning": undefined,
                    "withRef": true,
                  }
                }
                anyTouched={false}
                array={
                  Object {
                    "insert": [Function],
                    "move": [Function],
                    "pop": [Function],
                    "push": [Function],
                    "remove": [Function],
                    "removeAll": [Function],
                    "shift": [Function],
                    "splice": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                  }
                }
                asyncValidate={[Function]}
                asyncValidating={false}
                autofill={[Function]}
                blur={[Function]}
                bodyProps={
                  Object {
                    "flush": true,
                  }
                }
                change={[Function]}
                classes={
                  Object {
                    "addButton": "addButton-0-23",
                    "container": "container-0-21",
                    "header": "header-0-22",
                    "headerTitle": "headerTitle-0-24",
                  }
                }
                clearAsyncError={[Function]}
                clearSubmit={[Function]}
                clearSubmitErrors={[Function]}
                component={[Function]}
                destroy={[Function]}
                dirty={false}
                dispatch={[Function]}
                error={undefined}
                form="TestForm"
                formName="variedArrayCardItem"
                handleSubmit={[Function]}
                initialValues={undefined}
                initialize={[Function]}
                initialized={false}
                invalid={false}
                name="foobar"
                pristine={true}
                pure={true}
                reset={[Function]}
                schemaVis={
                  Object {
                    "components": Object {
                      "CardItem": [Function],
                      "CardWithHeader": [Function],
                      "Color": [Function],
                      "Date": [Function],
                      "DateTime": [Function],
                      "Email": [Function],
                      "ListItemTemplate": [Function],
                      "ModalUniformedArrayCard": [Function],
                      "ModalUniformedArrayInline": [Function],
                      "ModalVariedArrayCard": [Function],
                      "ModalVariedArrayInline": [Function],
                      "Number": [Function],
                      "Password": [Function],
                      "SingleSelect": [Function],
                      "Text": [Function],
                      "TextArea": [Function],
                      "UniformedArrayCard": [Function],
                      "UniformedArrayInline": [Function],
                      "VariedArrayCard": [Function],
                      "VariedArrayInline": [Function],
                    },
                    "prefix": "meta.vis",
                    "schema": Object {
                      "id": "VariedArrayCard",
                      "items": Object {
                        "anyOf": Array [
                          Object {
                            "id": "Bar",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "bar": Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Bar",
                                "type": "string",
                              },
                              "name": Object {
                                "id": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Bar",
                            "type": "object",
                          },
                          Object {
                            "id": "Baz",
                            "meta": Object {
                              "data": Object {
                                "component": "ListItemTemplate",
                                "template": Array [
                                  "\${name} (Bar: \${bar})",
                                  "\${name}",
                                ],
                              },
                            },
                            "properties": Object {
                              "baz": Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Number",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Baz",
                                "type": "number",
                              },
                              "name": Object {
                                "it": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Baz",
                            "type": "object",
                          },
                        ],
                        "id": "FooCard",
                        "meta": Object {
                          "vis": Object {
                            "component": "SingleSelect",
                          },
                        },
                        "title": "Foo Card",
                        "type": "object",
                      },
                      "title": "Varied Array Card",
                      "type": "array",
                    },
                  }
                }
                sheet={
                  StyleSheet {
                    "attached": true,
                    "classes": Object {
                      "addButton": "addButton-0-23",
                      "container": "container-0-21",
                      "header": "header-0-22",
                      "headerTitle": "headerTitle-0-24",
                    },
                    "deployed": true,
                    "linked": false,
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-23",
                        "container": "container-0-21",
                        "header": "header-0-22",
                        "headerTitle": "headerTitle-0-24",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "renderer": DomRenderer {
                      "element": <style
                        data-jss=""
                        type="text/css"
                      >
                        
.container-0-21 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-22 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-23 {
  margin-left: auto;
}
.headerTitle-0-24 {
  margin-top: auto;
  margin-bottom: auto;
}

                      </style>,
                      "getSelector": [Function],
                      "getStyle": [Function],
                      "hasInsertedRules": false,
                      "setSelector": [Function],
                      "setStyle": [Function],
                      "sheet": [Circular],
                    },
                    "rules": RuleList {
                      "classes": Object {
                        "addButton": "addButton-0-23",
                        "container": "container-0-21",
                        "header": "header-0-22",
                        "headerTitle": "headerTitle-0-24",
                      },
                      "index": Array [
                        Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        Object {
                          "margin-left": "auto",
                        },
                        Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      ],
                      "map": Object {
                        ".addButton-0-23": Object {
                          "margin-left": "auto",
                        },
                        ".container-0-21": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        ".header-0-22": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        ".headerTitle-0-24": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                        "addButton": Object {
                          "margin-left": "auto",
                        },
                        "container": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        "headerTitle": Object {
                          "margin-bottom": "auto",
                          "margin-top": "auto",
                        },
                      },
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-23",
                          "container": "container-0-21",
                          "header": "header-0-22",
                          "headerTitle": "headerTitle-0-24",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "raw": Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      },
                    },
                  }
                }
                styles={
                  Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  }
                }
                submit={[Function]}
                submitFailed={false}
                submitSucceeded={false}
                submitting={false}
                touch={[Function]}
                triggerSubmit={undefined}
                untouch={[Function]}
                valid={true}
                validate={[Function]}
                warning={undefined}
                withRef={true}
              >
                <ConnectedFieldArray
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "TestForm",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "name": "foobar",
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": undefined,
                      "reset": [Function],
                      "schemaVis": Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      },
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldError": [Function],
                      "shouldValidate": [Function],
                      "shouldWarn": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {},
                      "warning": undefined,
                      "withRef": true,
                    }
                  }
                  anyTouched={false}
                  array={
                    Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    }
                  }
                  arrayInsert={[Function]}
                  arrayMove={[Function]}
                  arrayPop={[Function]}
                  arrayPush={[Function]}
                  arrayRemove={[Function]}
                  arrayRemoveAll={[Function]}
                  arrayShift={[Function]}
                  arraySplice={[Function]}
                  arraySwap={[Function]}
                  arrayUnshift={[Function]}
                  asyncError={undefined}
                  asyncValidate={[Function]}
                  asyncValidating={false}
                  autofill={[Function]}
                  blur={[Function]}
                  bodyProps={
                    Object {
                      "flush": true,
                    }
                  }
                  change={[Function]}
                  classes={
                    Object {
                      "addButton": "addButton-0-23",
                      "container": "container-0-21",
                      "header": "header-0-22",
                      "headerTitle": "headerTitle-0-24",
                    }
                  }
                  clearAsyncError={[Function]}
                  clearSubmit={[Function]}
                  clearSubmitErrors={[Function]}
                  component={[Function]}
                  destroy={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  error={undefined}
                  form="TestForm"
                  formName="variedArrayCardItem"
                  handleSubmit={[Function]}
                  initialValues={undefined}
                  initialize={[Function]}
                  initialized={false}
                  invalid={false}
                  length={0}
                  name="foobar"
                  pristine={true}
                  pure={true}
                  rerenderOnEveryChange={false}
                  reset={[Function]}
                  schemaVis={
                    Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "id": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "data": Object {
                                  "component": "ListItemTemplate",
                                  "template": Array [
                                    "\${name} (Bar: \${bar})",
                                    "\${name}",
                                  ],
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                          "id": "FooCard",
                          "meta": Object {
                            "vis": Object {
                              "component": "SingleSelect",
                            },
                          },
                          "title": "Foo Card",
                          "type": "object",
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    }
                  }
                  sheet={
                    StyleSheet {
                      "attached": true,
                      "classes": Object {
                        "addButton": "addButton-0-23",
                        "container": "container-0-21",
                        "header": "header-0-22",
                        "headerTitle": "headerTitle-0-24",
                      },
                      "deployed": true,
                      "linked": false,
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          "addButton": "addButton-0-23",
                          "container": "container-0-21",
                          "header": "header-0-22",
                          "headerTitle": "headerTitle-0-24",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "renderer": DomRenderer {
                        "element": <style
                          data-jss=""
                          type="text/css"
                        >
                          
.container-0-21 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-22 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-23 {
  margin-left: auto;
}
.headerTitle-0-24 {
  margin-top: auto;
  margin-bottom: auto;
}

                        </style>,
                        "getSelector": [Function],
                        "getStyle": [Function],
                        "hasInsertedRules": false,
                        "setSelector": [Function],
                        "setStyle": [Function],
                        "sheet": [Circular],
                      },
                      "rules": RuleList {
                        "classes": Object {
                          "addButton": "addButton-0-23",
                          "container": "container-0-21",
                          "header": "header-0-22",
                          "headerTitle": "headerTitle-0-24",
                        },
                        "index": Array [
                          Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          Object {
                            "margin-left": "auto",
                          },
                          Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        ],
                        "map": Object {
                          ".addButton-0-23": Object {
                            "margin-left": "auto",
                          },
                          ".container-0-21": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          ".header-0-22": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          ".headerTitle-0-24": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                          "addButton": Object {
                            "margin-left": "auto",
                          },
                          "container": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          "headerTitle": Object {
                            "margin-bottom": "auto",
                            "margin-top": "auto",
                          },
                        },
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-23",
                            "container": "container-0-21",
                            "header": "header-0-22",
                            "headerTitle": "headerTitle-0-24",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "raw": Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        },
                      },
                    }
                  }
                  state={undefined}
                  styles={
                    Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    }
                  }
                  submit={[Function]}
                  submitError={undefined}
                  submitFailed={undefined}
                  submitSucceeded={false}
                  submitting={undefined}
                  syncError={undefined}
                  syncWarning={undefined}
                  touch={[Function]}
                  triggerSubmit={undefined}
                  untouch={[Function]}
                  valid={true}
                  validate={[Function]}
                  value={undefined}
                  warning={undefined}
                  withRef={true}
                >
                  <Connect(ModalVariedArray)
                    anyTouched={false}
                    array={
                      Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    asyncValidate={[Function]}
                    asyncValidating={false}
                    autofill={[Function]}
                    blur={[Function]}
                    bodyProps={
                      Object {
                        "flush": true,
                      }
                    }
                    change={[Function]}
                    classes={
                      Object {
                        "addButton": "addButton-0-23",
                        "container": "container-0-21",
                        "header": "header-0-22",
                        "headerTitle": "headerTitle-0-24",
                      }
                    }
                    clearAsyncError={[Function]}
                    clearSubmit={[Function]}
                    clearSubmitErrors={[Function]}
                    destroy={[Function]}
                    dispatch={[Function]}
                    error={undefined}
                    fields={
                      Object {
                        "_isFieldArray": true,
                        "forEach": [Function],
                        "get": [Function],
                        "getAll": [Function],
                        "insert": [Function],
                        "length": 0,
                        "map": [Function],
                        "move": [Function],
                        "name": "foobar",
                        "pop": [Function],
                        "push": [Function],
                        "reduce": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    form="TestForm"
                    formName="variedArrayCardItem"
                    handleSubmit={[Function]}
                    initialValues={undefined}
                    initialize={[Function]}
                    initialized={false}
                    invalid={false}
                    meta={
                      Object {
                        "dirty": false,
                        "error": undefined,
                        "form": "TestForm",
                        "invalid": false,
                        "pristine": true,
                        "submitFailed": undefined,
                        "submitting": undefined,
                        "valid": true,
                        "warning": undefined,
                      }
                    }
                    pure={true}
                    reset={[Function]}
                    schemaVis={
                      Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "id": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "data": Object {
                                    "component": "ListItemTemplate",
                                    "template": Array [
                                      "\${name} (Bar: \${bar})",
                                      "\${name}",
                                    ],
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                            "id": "FooCard",
                            "meta": Object {
                              "vis": Object {
                                "component": "SingleSelect",
                              },
                            },
                            "title": "Foo Card",
                            "type": "object",
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      }
                    }
                    sheet={
                      StyleSheet {
                        "attached": true,
                        "classes": Object {
                          "addButton": "addButton-0-23",
                          "container": "container-0-21",
                          "header": "header-0-22",
                          "headerTitle": "headerTitle-0-24",
                        },
                        "deployed": true,
                        "linked": false,
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            "addButton": "addButton-0-23",
                            "container": "container-0-21",
                            "header": "header-0-22",
                            "headerTitle": "headerTitle-0-24",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "renderer": DomRenderer {
                          "element": <style
                            data-jss=""
                            type="text/css"
                          >
                            
.container-0-21 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-22 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-23 {
  margin-left: auto;
}
.headerTitle-0-24 {
  margin-top: auto;
  margin-bottom: auto;
}

                          </style>,
                          "getSelector": [Function],
                          "getStyle": [Function],
                          "hasInsertedRules": false,
                          "setSelector": [Function],
                          "setStyle": [Function],
                          "sheet": [Circular],
                        },
                        "rules": RuleList {
                          "classes": Object {
                            "addButton": "addButton-0-23",
                            "container": "container-0-21",
                            "header": "header-0-22",
                            "headerTitle": "headerTitle-0-24",
                          },
                          "index": Array [
                            Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            Object {
                              "margin-left": "auto",
                            },
                            Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          ],
                          "map": Object {
                            ".addButton-0-23": Object {
                              "margin-left": "auto",
                            },
                            ".container-0-21": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            ".header-0-22": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            ".headerTitle-0-24": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                            "addButton": Object {
                              "margin-left": "auto",
                            },
                            "container": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            "headerTitle": Object {
                              "margin-bottom": "auto",
                              "margin-top": "auto",
                            },
                          },
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-23",
                              "container": "container-0-21",
                              "header": "header-0-22",
                              "headerTitle": "headerTitle-0-24",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "raw": Object {
                            "addButton": Object {
                              "marginLeft": "auto",
                            },
                            "container": Object {
                              "marginBottom": 10,
                              "marginTop": 15,
                            },
                            "header": Object {
                              "display": "inline-flex",
                              "padding": 5,
                              "paddingLeft": 10,
                            },
                            "headerTitle": Object {
                              "marginBottom": "auto",
                              "marginTop": "auto",
                            },
                          },
                        },
                      }
                    }
                    styles={
                      Object {
                        "addButton": Object {
                          "marginLeft": "auto",
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "display": "inline-flex",
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "headerTitle": Object {
                          "marginBottom": "auto",
                          "marginTop": "auto",
                        },
                      }
                    }
                    submit={[Function]}
                    submitSucceeded={false}
                    touch={[Function]}
                    triggerSubmit={undefined}
                    untouch={[Function]}
                    valid={true}
                    warning={undefined}
                  >
                    <ModalVariedArray
                      addBtnProps={Object {}}
                      anyTouched={false}
                      array={
                        Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "splice": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      asyncValidate={[Function]}
                      asyncValidating={false}
                      autofill={[Function]}
                      blur={[Function]}
                      bodyProps={
                        Object {
                          "flush": true,
                        }
                      }
                      bodyTag={[Function]}
                      change={[Function]}
                      changeForm={[Function]}
                      classes={
                        Object {
                          "addButton": "addButton-0-23",
                          "container": "container-0-21",
                          "header": "header-0-22",
                          "headerTitle": "headerTitle-0-24",
                        }
                      }
                      clearAsyncError={[Function]}
                      clearSubmit={[Function]}
                      clearSubmitErrors={[Function]}
                      dataSchemaPrefix="meta.data"
                      destroy={[Function]}
                      destroyForm={[Function]}
                      dispatch={[Function]}
                      error={undefined}
                      fields={
                        Object {
                          "_isFieldArray": true,
                          "forEach": [Function],
                          "get": [Function],
                          "getAll": [Function],
                          "insert": [Function],
                          "length": 0,
                          "map": [Function],
                          "move": [Function],
                          "name": "foobar",
                          "pop": [Function],
                          "push": [Function],
                          "reduce": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      form="TestForm"
                      formName="variedArrayCardItem"
                      handleSubmit={[Function]}
                      headerTag={[Function]}
                      initialValues={undefined}
                      initialize={[Function]}
                      initialized={false}
                      invalid={false}
                      items={undefined}
                      meta={
                        Object {
                          "dirty": false,
                          "error": undefined,
                          "form": "TestForm",
                          "invalid": false,
                          "pristine": true,
                          "submitFailed": undefined,
                          "submitting": undefined,
                          "valid": true,
                          "warning": undefined,
                        }
                      }
                      pure={true}
                      required={false}
                      reset={[Function]}
                      schemaVis={
                        Object {
                          "components": Object {
                            "CardItem": [Function],
                            "CardWithHeader": [Function],
                            "Color": [Function],
                            "Date": [Function],
                            "DateTime": [Function],
                            "Email": [Function],
                            "ListItemTemplate": [Function],
                            "ModalUniformedArrayCard": [Function],
                            "ModalUniformedArrayInline": [Function],
                            "ModalVariedArrayCard": [Function],
                            "ModalVariedArrayInline": [Function],
                            "Number": [Function],
                            "Password": [Function],
                            "SingleSelect": [Function],
                            "Text": [Function],
                            "TextArea": [Function],
                            "UniformedArrayCard": [Function],
                            "UniformedArrayInline": [Function],
                            "VariedArrayCard": [Function],
                            "VariedArrayInline": [Function],
                          },
                          "prefix": "meta.vis",
                          "schema": Object {
                            "id": "VariedArrayCard",
                            "items": Object {
                              "anyOf": Array [
                                Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "bar": Object {
                                      "id": "Bar",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Bar",
                                      "type": "string",
                                    },
                                    "name": Object {
                                      "id": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "object",
                                },
                                Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "data": Object {
                                      "component": "ListItemTemplate",
                                      "template": Array [
                                        "\${name} (Bar: \${bar})",
                                        "\${name}",
                                      ],
                                    },
                                  },
                                  "properties": Object {
                                    "baz": Object {
                                      "id": "Baz",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Number",
                                          "ordinal": 2,
                                        },
                                      },
                                      "title": "Baz",
                                      "type": "number",
                                    },
                                    "name": Object {
                                      "it": "Name",
                                      "meta": Object {
                                        "vis": Object {
                                          "component": "Text",
                                          "ordinal": 1,
                                        },
                                      },
                                      "title": "Name",
                                      "type": "string",
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "object",
                                },
                              ],
                              "id": "FooCard",
                              "meta": Object {
                                "vis": Object {
                                  "component": "SingleSelect",
                                },
                              },
                              "title": "Foo Card",
                              "type": "object",
                            },
                            "title": "Varied Array Card",
                            "type": "array",
                          },
                        }
                      }
                      selectInputProps={Object {}}
                      sheet={
                        StyleSheet {
                          "attached": true,
                          "classes": Object {
                            "addButton": "addButton-0-23",
                            "container": "container-0-21",
                            "header": "header-0-22",
                            "headerTitle": "headerTitle-0-24",
                          },
                          "deployed": true,
                          "linked": false,
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              "addButton": "addButton-0-23",
                              "container": "container-0-21",
                              "header": "header-0-22",
                              "headerTitle": "headerTitle-0-24",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "renderer": DomRenderer {
                            "element": <style
                              data-jss=""
                              type="text/css"
                            >
                              
.container-0-21 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-22 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.addButton-0-23 {
  margin-left: auto;
}
.headerTitle-0-24 {
  margin-top: auto;
  margin-bottom: auto;
}

                            </style>,
                            "getSelector": [Function],
                            "getStyle": [Function],
                            "hasInsertedRules": false,
                            "setSelector": [Function],
                            "setStyle": [Function],
                            "sheet": [Circular],
                          },
                          "rules": RuleList {
                            "classes": Object {
                              "addButton": "addButton-0-23",
                              "container": "container-0-21",
                              "header": "header-0-22",
                              "headerTitle": "headerTitle-0-24",
                            },
                            "index": Array [
                              Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              Object {
                                "margin-left": "auto",
                              },
                              Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            ],
                            "map": Object {
                              ".addButton-0-23": Object {
                                "margin-left": "auto",
                              },
                              ".container-0-21": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              ".header-0-22": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              ".headerTitle-0-24": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                              "addButton": Object {
                                "margin-left": "auto",
                              },
                              "container": Object {
                                "margin-bottom": "10px",
                                "margin-top": "15px",
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": "5px",
                                "padding-left": "10px",
                              },
                              "headerTitle": Object {
                                "margin-bottom": "auto",
                                "margin-top": "auto",
                              },
                            },
                            "options": Object {
                              "Renderer": [Function],
                              "classes": Object {
                                "addButton": "addButton-0-23",
                                "container": "container-0-21",
                                "header": "header-0-22",
                                "headerTitle": "headerTitle-0-24",
                              },
                              "generateClassName": [Function],
                              "index": 0,
                              "insertionPoint": undefined,
                              "jss": Jss {
                                "generateClassName": [Function],
                                "options": Object {
                                  "Renderer": [Function],
                                  "createGenerateClassName": [Function],
                                  "plugins": Array [
                                    Object {
                                      "onCreateRule": [Function],
                                      "onProcessRule": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessRule": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                  ],
                                },
                                "plugins": PluginsRegistry {
                                  "hooks": Object {
                                    "onChangeValue": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onCreateRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessRule": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessSheet": Array [],
                                    "onProcessStyle": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                },
                                "version": "8.1.0",
                              },
                              "parent": [Circular],
                              "sheet": [Circular],
                            },
                            "raw": Object {
                              "addButton": Object {
                                "marginLeft": "auto",
                              },
                              "container": Object {
                                "marginBottom": 10,
                                "marginTop": 15,
                              },
                              "header": Object {
                                "display": "inline-flex",
                                "padding": 5,
                                "paddingLeft": 10,
                              },
                              "headerTitle": Object {
                                "marginBottom": "auto",
                                "marginTop": "auto",
                              },
                            },
                          },
                        }
                      }
                      styles={
                        Object {
                          "addButton": Object {
                            "marginLeft": "auto",
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "display": "inline-flex",
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "headerTitle": Object {
                            "marginBottom": "auto",
                            "marginTop": "auto",
                          },
                        }
                      }
                      submit={[Function]}
                      submitForm={[Function]}
                      submitSucceeded={false}
                      tag={[Function]}
                      touch={[Function]}
                      triggerSubmit={undefined}
                      untouch={[Function]}
                      valid={true}
                      warning={undefined}
                    >
                      <div>
                        <Card
                          className="container-0-21"
                          tag="div"
                        >
                          <div
                            className="container-0-21 card"
                          >
                            <CardHeader
                              className="header-0-22"
                              tag="div"
                            >
                              <div
                                className="header-0-22 card-header"
                              >
                                <div
                                  className="headerTitle-0-24"
                                >
                                  Varied Array Card
                                </div>
                                <div
                                  className="addButton-0-23"
                                >
                                  <Button
                                    color="primary"
                                    onClick={[Function]}
                                    size="sm"
                                    tag="button"
                                  >
                                    <button
                                      className="btn btn-primary btn-sm"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Add
                                    </button>
                                  </Button>
                                </div>
                              </div>
                            </CardHeader>
                            <ListGroup
                              className={undefined}
                              flush={true}
                              tag="ul"
                            >
                              <ul
                                className="list-group list-group-flush"
                              />
                            </ListGroup>
                          </div>
                        </Card>
                        <Modal
                          autoFocus={true}
                          backdrop={true}
                          backdropTransition={
                            Object {
                              "mountOnEnter": true,
                              "timeout": 150,
                            }
                          }
                          fade={true}
                          isOpen={false}
                          keyboard={true}
                          modalTransition={
                            Object {
                              "timeout": 300,
                            }
                          }
                          onClosed={[Function]}
                          onOpened={[Function]}
                          role="dialog"
                          toggle={[Function]}
                          zIndex={1050}
                        />
                      </div>
                    </ModalVariedArray>
                  </Connect(ModalVariedArray)>
                </ConnectedFieldArray>
              </Connect(ConnectedFieldArray)>
            </FieldArray>
          </ModalVariedArrayCard>
        </StyledComponent>
      </Form(StyledComponent)>
    </Connect(Form(StyledComponent))>
  </ReduxForm>
</Provider>
`;

exports[`Render Varied Array Fields should handle add item and remove Varied item 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    form="TestForm"
    name="foobar"
    schemaVis={
      Object {
        "components": Object {
          "CardItem": [Function],
          "CardWithHeader": [Function],
          "Color": [Function],
          "Date": [Function],
          "DateTime": [Function],
          "Email": [Function],
          "ListItemTemplate": [Function],
          "ModalUniformedArrayCard": [Function],
          "ModalUniformedArrayInline": [Function],
          "ModalVariedArrayCard": [Function],
          "ModalVariedArrayInline": [Function],
          "Number": [Function],
          "Password": [Function],
          "SingleSelect": [Function],
          "Text": [Function],
          "TextArea": [Function],
          "UniformedArrayCard": [Function],
          "UniformedArrayInline": [Function],
          "VariedArrayCard": [Function],
          "VariedArrayInline": [Function],
        },
        "prefix": "meta.vis",
        "schema": Object {
          "id": "VariedArrayCard",
          "items": Object {
            "anyOf": Array [
              Object {
                "id": "Bar",
                "meta": Object {
                  "vis": Object {
                    "component": "CardItem",
                    "ordinal": 1,
                  },
                },
                "properties": Object {
                  "bar": Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 2,
                      },
                    },
                    "title": "Bar",
                    "type": "string",
                  },
                  "name": Object {
                    "it": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Bar",
                "type": "object",
              },
              Object {
                "id": "Baz",
                "meta": Object {
                  "vis": Object {
                    "component": "CardItem",
                    "ordinal": 1,
                  },
                },
                "properties": Object {
                  "baz": Object {
                    "id": "Baz",
                    "meta": Object {
                      "vis": Object {
                        "component": "Number",
                        "ordinal": 2,
                      },
                    },
                    "title": "Baz",
                    "type": "number",
                  },
                  "name": Object {
                    "it": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Baz",
                "type": "object",
              },
            ],
          },
          "title": "Varied Array Card",
          "type": "array",
        },
      }
    }
  >
    <Connect(Form(StyledComponent))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="TestForm"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      name="foobar"
      persistentSubmitErrors={false}
      pure={true}
      schemaVis={
        Object {
          "components": Object {
            "CardItem": [Function],
            "CardWithHeader": [Function],
            "Color": [Function],
            "Date": [Function],
            "DateTime": [Function],
            "Email": [Function],
            "ListItemTemplate": [Function],
            "ModalUniformedArrayCard": [Function],
            "ModalUniformedArrayInline": [Function],
            "ModalVariedArrayCard": [Function],
            "ModalVariedArrayInline": [Function],
            "Number": [Function],
            "Password": [Function],
            "SingleSelect": [Function],
            "Text": [Function],
            "TextArea": [Function],
            "UniformedArrayCard": [Function],
            "UniformedArrayInline": [Function],
            "VariedArrayCard": [Function],
            "VariedArrayInline": [Function],
          },
          "prefix": "meta.vis",
          "schema": Object {
            "id": "VariedArrayCard",
            "items": Object {
              "anyOf": Array [
                Object {
                  "id": "Bar",
                  "meta": Object {
                    "vis": Object {
                      "component": "CardItem",
                      "ordinal": 1,
                    },
                  },
                  "properties": Object {
                    "bar": Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 2,
                        },
                      },
                      "title": "Bar",
                      "type": "string",
                    },
                    "name": Object {
                      "it": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Bar",
                  "type": "object",
                },
                Object {
                  "id": "Baz",
                  "meta": Object {
                    "vis": Object {
                      "component": "CardItem",
                      "ordinal": 1,
                    },
                  },
                  "properties": Object {
                    "baz": Object {
                      "id": "Baz",
                      "meta": Object {
                        "vis": Object {
                          "component": "Number",
                          "ordinal": 2,
                        },
                      },
                      "title": "Baz",
                      "type": "number",
                    },
                    "name": Object {
                      "it": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Baz",
                  "type": "object",
                },
              ],
            },
            "title": "Varied Array Card",
            "type": "array",
          },
        }
      }
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      withRef={true}
    >
      <Form(StyledComponent)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncErrors={undefined}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={false}
        dispatch={[Function]}
        enableReinitialize={false}
        error={undefined}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="TestForm"
        getFormState={[Function]}
        initialValues={undefined}
        initialize={[Function]}
        initialized={false}
        invalid={false}
        keepDirtyOnReinitialize={false}
        name="foobar"
        persistentSubmitErrors={false}
        pristine={true}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "foobar": Object {
              "count": 1,
              "name": "foobar",
              "type": "FieldArray",
            },
          }
        }
        reset={[Function]}
        schemaVis={
          Object {
            "components": Object {
              "CardItem": [Function],
              "CardWithHeader": [Function],
              "Color": [Function],
              "Date": [Function],
              "DateTime": [Function],
              "Email": [Function],
              "ListItemTemplate": [Function],
              "ModalUniformedArrayCard": [Function],
              "ModalUniformedArrayInline": [Function],
              "ModalVariedArrayCard": [Function],
              "ModalVariedArrayInline": [Function],
              "Number": [Function],
              "Password": [Function],
              "SingleSelect": [Function],
              "Text": [Function],
              "TextArea": [Function],
              "UniformedArrayCard": [Function],
              "UniformedArrayInline": [Function],
              "VariedArrayCard": [Function],
              "VariedArrayInline": [Function],
            },
            "prefix": "meta.vis",
            "schema": Object {
              "id": "VariedArrayCard",
              "items": Object {
                "anyOf": Array [
                  Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "CardItem",
                        "ordinal": 1,
                      },
                    },
                    "properties": Object {
                      "bar": Object {
                        "id": "Bar",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 2,
                          },
                        },
                        "title": "Bar",
                        "type": "string",
                      },
                      "name": Object {
                        "it": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Bar",
                    "type": "object",
                  },
                  Object {
                    "id": "Baz",
                    "meta": Object {
                      "vis": Object {
                        "component": "CardItem",
                        "ordinal": 1,
                      },
                    },
                    "properties": Object {
                      "baz": Object {
                        "id": "Baz",
                        "meta": Object {
                          "vis": Object {
                            "component": "Number",
                            "ordinal": 2,
                          },
                        },
                        "title": "Baz",
                        "type": "number",
                      },
                      "name": Object {
                        "it": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Baz",
                    "type": "object",
                  },
                ],
              },
              "title": "Varied Array Card",
              "type": "array",
            },
          }
        }
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldError={[Function]}
        shouldValidate={[Function]}
        shouldWarn={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={Object {}}
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        triggerSubmit={undefined}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={true}
        validExceptSubmit={true}
        values={Object {}}
        warning={undefined}
        withRef={true}
      >
        <StyledComponent
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={false}
          dispatch={[Function]}
          error={undefined}
          form="TestForm"
          handleSubmit={[Function]}
          initialValues={undefined}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          name="foobar"
          pristine={true}
          pure={true}
          reset={[Function]}
          schemaVis={
            Object {
              "components": Object {
                "CardItem": [Function],
                "CardWithHeader": [Function],
                "Color": [Function],
                "Date": [Function],
                "DateTime": [Function],
                "Email": [Function],
                "ListItemTemplate": [Function],
                "ModalUniformedArrayCard": [Function],
                "ModalUniformedArrayInline": [Function],
                "ModalVariedArrayCard": [Function],
                "ModalVariedArrayInline": [Function],
                "Number": [Function],
                "Password": [Function],
                "SingleSelect": [Function],
                "Text": [Function],
                "TextArea": [Function],
                "UniformedArrayCard": [Function],
                "UniformedArrayInline": [Function],
                "VariedArrayCard": [Function],
                "VariedArrayInline": [Function],
              },
              "prefix": "meta.vis",
              "schema": Object {
                "id": "VariedArrayCard",
                "items": Object {
                  "anyOf": Array [
                    Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "CardItem",
                          "ordinal": 1,
                        },
                      },
                      "properties": Object {
                        "bar": Object {
                          "id": "Bar",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 2,
                            },
                          },
                          "title": "Bar",
                          "type": "string",
                        },
                        "name": Object {
                          "it": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Bar",
                      "type": "object",
                    },
                    Object {
                      "id": "Baz",
                      "meta": Object {
                        "vis": Object {
                          "component": "CardItem",
                          "ordinal": 1,
                        },
                      },
                      "properties": Object {
                        "baz": Object {
                          "id": "Baz",
                          "meta": Object {
                            "vis": Object {
                              "component": "Number",
                              "ordinal": 2,
                            },
                          },
                          "title": "Baz",
                          "type": "number",
                        },
                        "name": Object {
                          "it": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Baz",
                      "type": "object",
                    },
                  ],
                },
                "title": "Varied Array Card",
                "type": "array",
              },
            }
          }
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          triggerSubmit={undefined}
          untouch={[Function]}
          valid={true}
          warning={undefined}
          withRef={true}
        >
          <VariedArrayCard
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            classes={
              Object {
                ".select-0-8 select": "select-0-8 select",
                "container": "container-0-6",
                "header": "header-0-7",
                "select": "select-0-8",
              }
            }
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={false}
            dispatch={[Function]}
            error={undefined}
            form="TestForm"
            handleSubmit={[Function]}
            initialValues={undefined}
            initialize={[Function]}
            initialized={false}
            invalid={false}
            name="foobar"
            pristine={true}
            pure={true}
            reset={[Function]}
            schemaVis={
              Object {
                "components": Object {
                  "CardItem": [Function],
                  "CardWithHeader": [Function],
                  "Color": [Function],
                  "Date": [Function],
                  "DateTime": [Function],
                  "Email": [Function],
                  "ListItemTemplate": [Function],
                  "ModalUniformedArrayCard": [Function],
                  "ModalUniformedArrayInline": [Function],
                  "ModalVariedArrayCard": [Function],
                  "ModalVariedArrayInline": [Function],
                  "Number": [Function],
                  "Password": [Function],
                  "SingleSelect": [Function],
                  "Text": [Function],
                  "TextArea": [Function],
                  "UniformedArrayCard": [Function],
                  "UniformedArrayInline": [Function],
                  "VariedArrayCard": [Function],
                  "VariedArrayInline": [Function],
                },
                "prefix": "meta.vis",
                "schema": Object {
                  "id": "VariedArrayCard",
                  "items": Object {
                    "anyOf": Array [
                      Object {
                        "id": "Bar",
                        "meta": Object {
                          "vis": Object {
                            "component": "CardItem",
                            "ordinal": 1,
                          },
                        },
                        "properties": Object {
                          "bar": Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 2,
                              },
                            },
                            "title": "Bar",
                            "type": "string",
                          },
                          "name": Object {
                            "it": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Bar",
                        "type": "object",
                      },
                      Object {
                        "id": "Baz",
                        "meta": Object {
                          "vis": Object {
                            "component": "CardItem",
                            "ordinal": 1,
                          },
                        },
                        "properties": Object {
                          "baz": Object {
                            "id": "Baz",
                            "meta": Object {
                              "vis": Object {
                                "component": "Number",
                                "ordinal": 2,
                              },
                            },
                            "title": "Baz",
                            "type": "number",
                          },
                          "name": Object {
                            "it": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Baz",
                        "type": "object",
                      },
                    ],
                  },
                  "title": "Varied Array Card",
                  "type": "array",
                },
              }
            }
            sheet={
              StyleSheet {
                "attached": true,
                "classes": Object {
                  ".select-0-8 select": "select-0-8 select",
                  "container": "container-0-6",
                  "header": "header-0-7",
                  "select": "select-0-8",
                },
                "deployed": true,
                "linked": false,
                "options": Object {
                  "Renderer": [Function],
                  "classes": Object {
                    ".select-0-8 select": "select-0-8 select",
                    "container": "container-0-6",
                    "header": "header-0-7",
                    "select": "select-0-8",
                  },
                  "generateClassName": [Function],
                  "index": 0,
                  "insertionPoint": undefined,
                  "jss": Jss {
                    "generateClassName": [Function],
                    "options": Object {
                      "Renderer": [Function],
                      "createGenerateClassName": [Function],
                      "plugins": Array [
                        Object {
                          "onCreateRule": [Function],
                          "onProcessRule": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessRule": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                      ],
                    },
                    "plugins": PluginsRegistry {
                      "hooks": Object {
                        "onChangeValue": Array [
                          [Function],
                          [Function],
                        ],
                        "onCreateRule": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "onProcessRule": Array [
                          [Function],
                          [Function],
                        ],
                        "onProcessSheet": Array [],
                        "onProcessStyle": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                    },
                    "version": "8.1.0",
                  },
                  "parent": [Circular],
                  "sheet": [Circular],
                },
                "renderer": DomRenderer {
                  "element": <style
                    data-jss=""
                    type="text/css"
                  >
                    
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                  </style>,
                  "getSelector": [Function],
                  "getStyle": [Function],
                  "hasInsertedRules": false,
                  "setSelector": [Function],
                  "setStyle": [Function],
                  "sheet": [Circular],
                },
                "rules": RuleList {
                  "classes": Object {
                    ".select-0-8 select": "select-0-8 select",
                    "container": "container-0-6",
                    "header": "header-0-7",
                    "select": "select-0-8",
                  },
                  "index": Array [
                    Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    Object {
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    Object {
                      "display": "inline-flex",
                      "width": "100%",
                    },
                    Object {
                      "margin-right": "5px",
                    },
                  ],
                  "map": Object {
                    ".container-0-6": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    ".header-0-7": Object {
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    ".select-0-8": Object {
                      "display": "inline-flex",
                      "width": "100%",
                    },
                    ".select-0-8 select": Object {
                      "margin-right": "5px",
                    },
                    "container": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    "header": Object {
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    "select": Object {
                      "display": "inline-flex",
                      "width": "100%",
                    },
                  },
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "raw": Object {
                    ".select-0-8 select": Object {
                      "marginRight": 5,
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "select": Object {
                      "@global select": Object {
                        "marginRight": 5,
                      },
                      "display": "inline-flex",
                      "width": "100%",
                    },
                  },
                },
              }
            }
            styles={
              Object {
                "container": Object {
                  "marginBottom": 10,
                  "marginTop": 15,
                },
                "header": Object {
                  "padding": 5,
                  "paddingLeft": 10,
                },
                "select": Object {
                  "@global select": Object {
                    "marginRight": 5,
                  },
                  "display": "inline-flex",
                  "width": "100%",
                },
              }
            }
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            touch={[Function]}
            triggerSubmit={undefined}
            untouch={[Function]}
            valid={true}
            warning={undefined}
            withRef={true}
          >
            <FieldArray
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              asyncValidate={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              change={[Function]}
              classes={
                Object {
                  ".select-0-8 select": "select-0-8 select",
                  "container": "container-0-6",
                  "header": "header-0-7",
                  "select": "select-0-8",
                }
              }
              clearAsyncError={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              component={[Function]}
              destroy={[Function]}
              dirty={false}
              dispatch={[Function]}
              error={undefined}
              form="TestForm"
              handleSubmit={[Function]}
              initialValues={undefined}
              initialize={[Function]}
              initialized={false}
              invalid={false}
              name="foobar"
              pristine={true}
              pure={true}
              reset={[Function]}
              schemaVis={
                Object {
                  "components": Object {
                    "CardItem": [Function],
                    "CardWithHeader": [Function],
                    "Color": [Function],
                    "Date": [Function],
                    "DateTime": [Function],
                    "Email": [Function],
                    "ListItemTemplate": [Function],
                    "ModalUniformedArrayCard": [Function],
                    "ModalUniformedArrayInline": [Function],
                    "ModalVariedArrayCard": [Function],
                    "ModalVariedArrayInline": [Function],
                    "Number": [Function],
                    "Password": [Function],
                    "SingleSelect": [Function],
                    "Text": [Function],
                    "TextArea": [Function],
                    "UniformedArrayCard": [Function],
                    "UniformedArrayInline": [Function],
                    "VariedArrayCard": [Function],
                    "VariedArrayInline": [Function],
                  },
                  "prefix": "meta.vis",
                  "schema": Object {
                    "id": "VariedArrayCard",
                    "items": Object {
                      "anyOf": Array [
                        Object {
                          "id": "Bar",
                          "meta": Object {
                            "vis": Object {
                              "component": "CardItem",
                              "ordinal": 1,
                            },
                          },
                          "properties": Object {
                            "bar": Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Bar",
                              "type": "string",
                            },
                            "name": Object {
                              "it": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Bar",
                          "type": "object",
                        },
                        Object {
                          "id": "Baz",
                          "meta": Object {
                            "vis": Object {
                              "component": "CardItem",
                              "ordinal": 1,
                            },
                          },
                          "properties": Object {
                            "baz": Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Number",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Baz",
                              "type": "number",
                            },
                            "name": Object {
                              "it": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Baz",
                          "type": "object",
                        },
                      ],
                    },
                    "title": "Varied Array Card",
                    "type": "array",
                  },
                }
              }
              sheet={
                StyleSheet {
                  "attached": true,
                  "classes": Object {
                    ".select-0-8 select": "select-0-8 select",
                    "container": "container-0-6",
                    "header": "header-0-7",
                    "select": "select-0-8",
                  },
                  "deployed": true,
                  "linked": false,
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "renderer": DomRenderer {
                    "element": <style
                      data-jss=""
                      type="text/css"
                    >
                      
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                    </style>,
                    "getSelector": [Function],
                    "getStyle": [Function],
                    "hasInsertedRules": false,
                    "setSelector": [Function],
                    "setStyle": [Function],
                    "sheet": [Circular],
                  },
                  "rules": RuleList {
                    "classes": Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    },
                    "index": Array [
                      Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      Object {
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      Object {
                        "display": "inline-flex",
                        "width": "100%",
                      },
                      Object {
                        "margin-right": "5px",
                      },
                    ],
                    "map": Object {
                      ".container-0-6": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      ".header-0-7": Object {
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      ".select-0-8": Object {
                        "display": "inline-flex",
                        "width": "100%",
                      },
                      ".select-0-8 select": Object {
                        "margin-right": "5px",
                      },
                      "container": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      "header": Object {
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      "select": Object {
                        "display": "inline-flex",
                        "width": "100%",
                      },
                    },
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "raw": Object {
                      ".select-0-8 select": Object {
                        "marginRight": 5,
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "select": Object {
                        "@global select": Object {
                          "marginRight": 5,
                        },
                        "display": "inline-flex",
                        "width": "100%",
                      },
                    },
                  },
                }
              }
              styles={
                Object {
                  "container": Object {
                    "marginBottom": 10,
                    "marginTop": 15,
                  },
                  "header": Object {
                    "padding": 5,
                    "paddingLeft": 10,
                  },
                  "select": Object {
                    "@global select": Object {
                      "marginRight": 5,
                    },
                    "display": "inline-flex",
                    "width": "100%",
                  },
                }
              }
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              touch={[Function]}
              triggerSubmit={undefined}
              untouch={[Function]}
              valid={true}
              validate={[Function]}
              warning={undefined}
              withRef={true}
            >
              <Connect(ConnectedFieldArray)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "TestForm",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "name": "foobar",
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": undefined,
                    "reset": [Function],
                    "schemaVis": Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "CardItem",
                                  "ordinal": 1,
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "CardItem",
                                  "ordinal": 1,
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    },
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldError": [Function],
                    "shouldValidate": [Function],
                    "shouldWarn": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {},
                    "warning": undefined,
                    "withRef": true,
                  }
                }
                anyTouched={false}
                array={
                  Object {
                    "insert": [Function],
                    "move": [Function],
                    "pop": [Function],
                    "push": [Function],
                    "remove": [Function],
                    "removeAll": [Function],
                    "shift": [Function],
                    "splice": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                  }
                }
                asyncValidate={[Function]}
                asyncValidating={false}
                autofill={[Function]}
                blur={[Function]}
                change={[Function]}
                classes={
                  Object {
                    ".select-0-8 select": "select-0-8 select",
                    "container": "container-0-6",
                    "header": "header-0-7",
                    "select": "select-0-8",
                  }
                }
                clearAsyncError={[Function]}
                clearSubmit={[Function]}
                clearSubmitErrors={[Function]}
                component={[Function]}
                destroy={[Function]}
                dirty={false}
                dispatch={[Function]}
                error={undefined}
                form="TestForm"
                handleSubmit={[Function]}
                initialValues={undefined}
                initialize={[Function]}
                initialized={false}
                invalid={false}
                name="foobar"
                pristine={true}
                pure={true}
                reset={[Function]}
                schemaVis={
                  Object {
                    "components": Object {
                      "CardItem": [Function],
                      "CardWithHeader": [Function],
                      "Color": [Function],
                      "Date": [Function],
                      "DateTime": [Function],
                      "Email": [Function],
                      "ListItemTemplate": [Function],
                      "ModalUniformedArrayCard": [Function],
                      "ModalUniformedArrayInline": [Function],
                      "ModalVariedArrayCard": [Function],
                      "ModalVariedArrayInline": [Function],
                      "Number": [Function],
                      "Password": [Function],
                      "SingleSelect": [Function],
                      "Text": [Function],
                      "TextArea": [Function],
                      "UniformedArrayCard": [Function],
                      "UniformedArrayInline": [Function],
                      "VariedArrayCard": [Function],
                      "VariedArrayInline": [Function],
                    },
                    "prefix": "meta.vis",
                    "schema": Object {
                      "id": "VariedArrayCard",
                      "items": Object {
                        "anyOf": Array [
                          Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "CardItem",
                                "ordinal": 1,
                              },
                            },
                            "properties": Object {
                              "bar": Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Bar",
                                "type": "string",
                              },
                              "name": Object {
                                "it": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Bar",
                            "type": "object",
                          },
                          Object {
                            "id": "Baz",
                            "meta": Object {
                              "vis": Object {
                                "component": "CardItem",
                                "ordinal": 1,
                              },
                            },
                            "properties": Object {
                              "baz": Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Number",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Baz",
                                "type": "number",
                              },
                              "name": Object {
                                "it": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Baz",
                            "type": "object",
                          },
                        ],
                      },
                      "title": "Varied Array Card",
                      "type": "array",
                    },
                  }
                }
                sheet={
                  StyleSheet {
                    "attached": true,
                    "classes": Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    },
                    "deployed": true,
                    "linked": false,
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "renderer": DomRenderer {
                      "element": <style
                        data-jss=""
                        type="text/css"
                      >
                        
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                      </style>,
                      "getSelector": [Function],
                      "getStyle": [Function],
                      "hasInsertedRules": false,
                      "setSelector": [Function],
                      "setStyle": [Function],
                      "sheet": [Circular],
                    },
                    "rules": RuleList {
                      "classes": Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      },
                      "index": Array [
                        Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        Object {
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        Object {
                          "display": "inline-flex",
                          "width": "100%",
                        },
                        Object {
                          "margin-right": "5px",
                        },
                      ],
                      "map": Object {
                        ".container-0-6": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        ".header-0-7": Object {
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        ".select-0-8": Object {
                          "display": "inline-flex",
                          "width": "100%",
                        },
                        ".select-0-8 select": Object {
                          "margin-right": "5px",
                        },
                        "container": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        "header": Object {
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        "select": Object {
                          "display": "inline-flex",
                          "width": "100%",
                        },
                      },
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          ".select-0-8 select": "select-0-8 select",
                          "container": "container-0-6",
                          "header": "header-0-7",
                          "select": "select-0-8",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "raw": Object {
                        ".select-0-8 select": Object {
                          "marginRight": 5,
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "select": Object {
                          "@global select": Object {
                            "marginRight": 5,
                          },
                          "display": "inline-flex",
                          "width": "100%",
                        },
                      },
                    },
                  }
                }
                styles={
                  Object {
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "select": Object {
                      "@global select": Object {
                        "marginRight": 5,
                      },
                      "display": "inline-flex",
                      "width": "100%",
                    },
                  }
                }
                submit={[Function]}
                submitFailed={false}
                submitSucceeded={false}
                submitting={false}
                touch={[Function]}
                triggerSubmit={undefined}
                untouch={[Function]}
                valid={true}
                validate={[Function]}
                warning={undefined}
                withRef={true}
              >
                <ConnectedFieldArray
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "TestForm",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "name": "foobar",
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": undefined,
                      "reset": [Function],
                      "schemaVis": Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "CardItem",
                                    "ordinal": 1,
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "CardItem",
                                    "ordinal": 1,
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      },
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldError": [Function],
                      "shouldValidate": [Function],
                      "shouldWarn": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {},
                      "warning": undefined,
                      "withRef": true,
                    }
                  }
                  anyTouched={false}
                  array={
                    Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    }
                  }
                  arrayInsert={[Function]}
                  arrayMove={[Function]}
                  arrayPop={[Function]}
                  arrayPush={[Function]}
                  arrayRemove={[Function]}
                  arrayRemoveAll={[Function]}
                  arrayShift={[Function]}
                  arraySplice={[Function]}
                  arraySwap={[Function]}
                  arrayUnshift={[Function]}
                  asyncError={undefined}
                  asyncValidate={[Function]}
                  asyncValidating={false}
                  autofill={[Function]}
                  blur={[Function]}
                  change={[Function]}
                  classes={
                    Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    }
                  }
                  clearAsyncError={[Function]}
                  clearSubmit={[Function]}
                  clearSubmitErrors={[Function]}
                  component={[Function]}
                  destroy={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  error={undefined}
                  form="TestForm"
                  handleSubmit={[Function]}
                  initialValues={undefined}
                  initialize={[Function]}
                  initialized={false}
                  invalid={false}
                  length={0}
                  name="foobar"
                  pristine={true}
                  pure={true}
                  rerenderOnEveryChange={false}
                  reset={[Function]}
                  schemaVis={
                    Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "CardItem",
                                  "ordinal": 1,
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "CardItem",
                                  "ordinal": 1,
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    }
                  }
                  sheet={
                    StyleSheet {
                      "attached": true,
                      "classes": Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      },
                      "deployed": true,
                      "linked": false,
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          ".select-0-8 select": "select-0-8 select",
                          "container": "container-0-6",
                          "header": "header-0-7",
                          "select": "select-0-8",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "renderer": DomRenderer {
                        "element": <style
                          data-jss=""
                          type="text/css"
                        >
                          
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                        </style>,
                        "getSelector": [Function],
                        "getStyle": [Function],
                        "hasInsertedRules": false,
                        "setSelector": [Function],
                        "setStyle": [Function],
                        "sheet": [Circular],
                      },
                      "rules": RuleList {
                        "classes": Object {
                          ".select-0-8 select": "select-0-8 select",
                          "container": "container-0-6",
                          "header": "header-0-7",
                          "select": "select-0-8",
                        },
                        "index": Array [
                          Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          Object {
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          Object {
                            "display": "inline-flex",
                            "width": "100%",
                          },
                          Object {
                            "margin-right": "5px",
                          },
                        ],
                        "map": Object {
                          ".container-0-6": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          ".header-0-7": Object {
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          ".select-0-8": Object {
                            "display": "inline-flex",
                            "width": "100%",
                          },
                          ".select-0-8 select": Object {
                            "margin-right": "5px",
                          },
                          "container": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          "header": Object {
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          "select": Object {
                            "display": "inline-flex",
                            "width": "100%",
                          },
                        },
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            ".select-0-8 select": "select-0-8 select",
                            "container": "container-0-6",
                            "header": "header-0-7",
                            "select": "select-0-8",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "raw": Object {
                          ".select-0-8 select": Object {
                            "marginRight": 5,
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "select": Object {
                            "@global select": Object {
                              "marginRight": 5,
                            },
                            "display": "inline-flex",
                            "width": "100%",
                          },
                        },
                      },
                    }
                  }
                  state={undefined}
                  styles={
                    Object {
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "select": Object {
                        "@global select": Object {
                          "marginRight": 5,
                        },
                        "display": "inline-flex",
                        "width": "100%",
                      },
                    }
                  }
                  submit={[Function]}
                  submitError={undefined}
                  submitFailed={undefined}
                  submitSucceeded={false}
                  submitting={undefined}
                  syncError={undefined}
                  syncWarning={undefined}
                  touch={[Function]}
                  triggerSubmit={undefined}
                  untouch={[Function]}
                  valid={true}
                  validate={[Function]}
                  value={undefined}
                  warning={undefined}
                  withRef={true}
                >
                  <VariedArray
                    addBtnProps={Object {}}
                    anyTouched={false}
                    array={
                      Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    asyncValidate={[Function]}
                    asyncValidating={false}
                    autofill={[Function]}
                    blur={[Function]}
                    bodyTag={[Function]}
                    change={[Function]}
                    classes={
                      Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      }
                    }
                    clearAsyncError={[Function]}
                    clearSubmit={[Function]}
                    clearSubmitErrors={[Function]}
                    destroy={[Function]}
                    dispatch={[Function]}
                    error={undefined}
                    fields={
                      Object {
                        "_isFieldArray": true,
                        "forEach": [Function],
                        "get": [Function],
                        "getAll": [Function],
                        "insert": [Function],
                        "length": 0,
                        "map": [Function],
                        "move": [Function],
                        "name": "foobar",
                        "pop": [Function],
                        "push": [Function],
                        "reduce": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    form="TestForm"
                    handleSubmit={[Function]}
                    headerTag={[Function]}
                    initialValues={undefined}
                    initialize={[Function]}
                    initialized={false}
                    invalid={false}
                    meta={
                      Object {
                        "dirty": false,
                        "error": undefined,
                        "form": "TestForm",
                        "invalid": false,
                        "pristine": true,
                        "submitFailed": undefined,
                        "submitting": undefined,
                        "valid": true,
                        "warning": undefined,
                      }
                    }
                    pure={true}
                    required={false}
                    reset={[Function]}
                    schemaVis={
                      Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "CardItem",
                                    "ordinal": 1,
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "CardItem",
                                    "ordinal": 1,
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      }
                    }
                    selectInputProps={Object {}}
                    sheet={
                      StyleSheet {
                        "attached": true,
                        "classes": Object {
                          ".select-0-8 select": "select-0-8 select",
                          "container": "container-0-6",
                          "header": "header-0-7",
                          "select": "select-0-8",
                        },
                        "deployed": true,
                        "linked": false,
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            ".select-0-8 select": "select-0-8 select",
                            "container": "container-0-6",
                            "header": "header-0-7",
                            "select": "select-0-8",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "renderer": DomRenderer {
                          "element": <style
                            data-jss=""
                            type="text/css"
                          >
                            
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                          </style>,
                          "getSelector": [Function],
                          "getStyle": [Function],
                          "hasInsertedRules": false,
                          "setSelector": [Function],
                          "setStyle": [Function],
                          "sheet": [Circular],
                        },
                        "rules": RuleList {
                          "classes": Object {
                            ".select-0-8 select": "select-0-8 select",
                            "container": "container-0-6",
                            "header": "header-0-7",
                            "select": "select-0-8",
                          },
                          "index": Array [
                            Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            Object {
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            Object {
                              "display": "inline-flex",
                              "width": "100%",
                            },
                            Object {
                              "margin-right": "5px",
                            },
                          ],
                          "map": Object {
                            ".container-0-6": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            ".header-0-7": Object {
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            ".select-0-8": Object {
                              "display": "inline-flex",
                              "width": "100%",
                            },
                            ".select-0-8 select": Object {
                              "margin-right": "5px",
                            },
                            "container": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            "header": Object {
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            "select": Object {
                              "display": "inline-flex",
                              "width": "100%",
                            },
                          },
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              ".select-0-8 select": "select-0-8 select",
                              "container": "container-0-6",
                              "header": "header-0-7",
                              "select": "select-0-8",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "raw": Object {
                            ".select-0-8 select": Object {
                              "marginRight": 5,
                            },
                            "container": Object {
                              "marginBottom": 10,
                              "marginTop": 15,
                            },
                            "header": Object {
                              "padding": 5,
                              "paddingLeft": 10,
                            },
                            "select": Object {
                              "@global select": Object {
                                "marginRight": 5,
                              },
                              "display": "inline-flex",
                              "width": "100%",
                            },
                          },
                        },
                      }
                    }
                    styles={
                      Object {
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "select": Object {
                          "@global select": Object {
                            "marginRight": 5,
                          },
                          "display": "inline-flex",
                          "width": "100%",
                        },
                      }
                    }
                    submit={[Function]}
                    submitSucceeded={false}
                    tag={[Function]}
                    touch={[Function]}
                    triggerSubmit={undefined}
                    untouch={[Function]}
                    valid={true}
                    warning={undefined}
                  >
                    <Card
                      className="container-0-6"
                      tag="div"
                    >
                      <div
                        className="container-0-6 card"
                      >
                        <CardHeader
                          className="header-0-7"
                          tag="div"
                        >
                          <div
                            className="header-0-7 card-header"
                          >
                            Varied Array Card
                          </div>
                        </CardHeader>
                        <CardBody
                          className={undefined}
                          tag="div"
                        >
                          <div
                            className="card-body"
                          >
                            <div
                              className="select-0-8"
                            >
                              <Input
                                id="selectItem"
                                onChange={[Function]}
                                tag="p"
                                type="select"
                                value="Bar"
                              >
                                <select
                                  className="form-control"
                                  id="selectItem"
                                  onChange={[Function]}
                                  value="Bar"
                                >
                                  <option
                                    disabled={true}
                                    value=""
                                  />
                                  <option
                                    key="selectOption-0"
                                    value="Bar"
                                  >
                                    Bar
                                  </option>
                                  <option
                                    key="selectOption-1"
                                    value="Baz"
                                  >
                                    Baz
                                  </option>
                                </select>
                              </Input>
                              <Button
                                color="primary"
                                disabled={false}
                                id="addItemBtn"
                                onClick={[Function]}
                                tag="button"
                              >
                                <button
                                  className="btn btn-primary"
                                  disabled={false}
                                  id="addItemBtn"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Add
                                </button>
                              </Button>
                            </div>
                            <div
                              className={undefined}
                            />
                          </div>
                        </CardBody>
                      </div>
                    </Card>
                  </VariedArray>
                </ConnectedFieldArray>
              </Connect(ConnectedFieldArray)>
            </FieldArray>
          </VariedArrayCard>
        </StyledComponent>
      </Form(StyledComponent)>
    </Connect(Form(StyledComponent))>
  </ReduxForm>
</Provider>
`;

exports[`Render Varied Array Fields should handle add item and remove Varied item 2`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    form="TestForm"
    name="foobar"
    schemaVis={
      Object {
        "components": Object {
          "CardItem": [Function],
          "CardWithHeader": [Function],
          "Color": [Function],
          "Date": [Function],
          "DateTime": [Function],
          "Email": [Function],
          "ListItemTemplate": [Function],
          "ModalUniformedArrayCard": [Function],
          "ModalUniformedArrayInline": [Function],
          "ModalVariedArrayCard": [Function],
          "ModalVariedArrayInline": [Function],
          "Number": [Function],
          "Password": [Function],
          "SingleSelect": [Function],
          "Text": [Function],
          "TextArea": [Function],
          "UniformedArrayCard": [Function],
          "UniformedArrayInline": [Function],
          "VariedArrayCard": [Function],
          "VariedArrayInline": [Function],
        },
        "prefix": "meta.vis",
        "schema": Object {
          "id": "VariedArrayCard",
          "items": Object {
            "anyOf": Array [
              Object {
                "id": "Bar",
                "meta": Object {
                  "vis": Object {
                    "component": "CardItem",
                    "ordinal": 1,
                  },
                },
                "properties": Object {
                  "bar": Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 2,
                      },
                    },
                    "title": "Bar",
                    "type": "string",
                  },
                  "name": Object {
                    "it": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Bar",
                "type": "object",
              },
              Object {
                "id": "Baz",
                "meta": Object {
                  "vis": Object {
                    "component": "CardItem",
                    "ordinal": 1,
                  },
                },
                "properties": Object {
                  "baz": Object {
                    "id": "Baz",
                    "meta": Object {
                      "vis": Object {
                        "component": "Number",
                        "ordinal": 2,
                      },
                    },
                    "title": "Baz",
                    "type": "number",
                  },
                  "name": Object {
                    "it": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Baz",
                "type": "object",
              },
            ],
          },
          "title": "Varied Array Card",
          "type": "array",
        },
      }
    }
  >
    <Connect(Form(StyledComponent))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="TestForm"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      name="foobar"
      persistentSubmitErrors={false}
      pure={true}
      schemaVis={
        Object {
          "components": Object {
            "CardItem": [Function],
            "CardWithHeader": [Function],
            "Color": [Function],
            "Date": [Function],
            "DateTime": [Function],
            "Email": [Function],
            "ListItemTemplate": [Function],
            "ModalUniformedArrayCard": [Function],
            "ModalUniformedArrayInline": [Function],
            "ModalVariedArrayCard": [Function],
            "ModalVariedArrayInline": [Function],
            "Number": [Function],
            "Password": [Function],
            "SingleSelect": [Function],
            "Text": [Function],
            "TextArea": [Function],
            "UniformedArrayCard": [Function],
            "UniformedArrayInline": [Function],
            "VariedArrayCard": [Function],
            "VariedArrayInline": [Function],
          },
          "prefix": "meta.vis",
          "schema": Object {
            "id": "VariedArrayCard",
            "items": Object {
              "anyOf": Array [
                Object {
                  "id": "Bar",
                  "meta": Object {
                    "vis": Object {
                      "component": "CardItem",
                      "ordinal": 1,
                    },
                  },
                  "properties": Object {
                    "bar": Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 2,
                        },
                      },
                      "title": "Bar",
                      "type": "string",
                    },
                    "name": Object {
                      "it": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Bar",
                  "type": "object",
                },
                Object {
                  "id": "Baz",
                  "meta": Object {
                    "vis": Object {
                      "component": "CardItem",
                      "ordinal": 1,
                    },
                  },
                  "properties": Object {
                    "baz": Object {
                      "id": "Baz",
                      "meta": Object {
                        "vis": Object {
                          "component": "Number",
                          "ordinal": 2,
                        },
                      },
                      "title": "Baz",
                      "type": "number",
                    },
                    "name": Object {
                      "it": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Baz",
                  "type": "object",
                },
              ],
            },
            "title": "Varied Array Card",
            "type": "array",
          },
        }
      }
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      withRef={true}
    >
      <Form(StyledComponent)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncErrors={undefined}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={true}
        dispatch={[Function]}
        enableReinitialize={false}
        error={undefined}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="TestForm"
        getFormState={[Function]}
        initialValues={undefined}
        initialize={[Function]}
        initialized={false}
        invalid={false}
        keepDirtyOnReinitialize={false}
        name="foobar"
        persistentSubmitErrors={false}
        pristine={false}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "foobar": Object {
              "count": 1,
              "name": "foobar",
              "type": "FieldArray",
            },
            "foobar[0].bar": Object {
              "count": 1,
              "name": "foobar[0].bar",
              "type": "Field",
            },
            "foobar[0].name": Object {
              "count": 1,
              "name": "foobar[0].name",
              "type": "Field",
            },
          }
        }
        reset={[Function]}
        schemaVis={
          Object {
            "components": Object {
              "CardItem": [Function],
              "CardWithHeader": [Function],
              "Color": [Function],
              "Date": [Function],
              "DateTime": [Function],
              "Email": [Function],
              "ListItemTemplate": [Function],
              "ModalUniformedArrayCard": [Function],
              "ModalUniformedArrayInline": [Function],
              "ModalVariedArrayCard": [Function],
              "ModalVariedArrayInline": [Function],
              "Number": [Function],
              "Password": [Function],
              "SingleSelect": [Function],
              "Text": [Function],
              "TextArea": [Function],
              "UniformedArrayCard": [Function],
              "UniformedArrayInline": [Function],
              "VariedArrayCard": [Function],
              "VariedArrayInline": [Function],
            },
            "prefix": "meta.vis",
            "schema": Object {
              "id": "VariedArrayCard",
              "items": Object {
                "anyOf": Array [
                  Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "CardItem",
                        "ordinal": 1,
                      },
                    },
                    "properties": Object {
                      "bar": Object {
                        "id": "Bar",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 2,
                          },
                        },
                        "title": "Bar",
                        "type": "string",
                      },
                      "name": Object {
                        "it": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Bar",
                    "type": "object",
                  },
                  Object {
                    "id": "Baz",
                    "meta": Object {
                      "vis": Object {
                        "component": "CardItem",
                        "ordinal": 1,
                      },
                    },
                    "properties": Object {
                      "baz": Object {
                        "id": "Baz",
                        "meta": Object {
                          "vis": Object {
                            "component": "Number",
                            "ordinal": 2,
                          },
                        },
                        "title": "Baz",
                        "type": "number",
                      },
                      "name": Object {
                        "it": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Baz",
                    "type": "object",
                  },
                ],
              },
              "title": "Varied Array Card",
              "type": "array",
            },
          }
        }
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldError={[Function]}
        shouldValidate={[Function]}
        shouldWarn={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={Object {}}
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        triggerSubmit={undefined}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={true}
        validExceptSubmit={true}
        values={
          Object {
            "foobar": Array [
              Object {},
            ],
          }
        }
        warning={undefined}
        withRef={true}
      >
        <StyledComponent
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={true}
          dispatch={[Function]}
          error={undefined}
          form="TestForm"
          handleSubmit={[Function]}
          initialValues={undefined}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          name="foobar"
          pristine={false}
          pure={true}
          reset={[Function]}
          schemaVis={
            Object {
              "components": Object {
                "CardItem": [Function],
                "CardWithHeader": [Function],
                "Color": [Function],
                "Date": [Function],
                "DateTime": [Function],
                "Email": [Function],
                "ListItemTemplate": [Function],
                "ModalUniformedArrayCard": [Function],
                "ModalUniformedArrayInline": [Function],
                "ModalVariedArrayCard": [Function],
                "ModalVariedArrayInline": [Function],
                "Number": [Function],
                "Password": [Function],
                "SingleSelect": [Function],
                "Text": [Function],
                "TextArea": [Function],
                "UniformedArrayCard": [Function],
                "UniformedArrayInline": [Function],
                "VariedArrayCard": [Function],
                "VariedArrayInline": [Function],
              },
              "prefix": "meta.vis",
              "schema": Object {
                "id": "VariedArrayCard",
                "items": Object {
                  "anyOf": Array [
                    Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "CardItem",
                          "ordinal": 1,
                        },
                      },
                      "properties": Object {
                        "bar": Object {
                          "id": "Bar",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 2,
                            },
                          },
                          "title": "Bar",
                          "type": "string",
                        },
                        "name": Object {
                          "it": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Bar",
                      "type": "object",
                    },
                    Object {
                      "id": "Baz",
                      "meta": Object {
                        "vis": Object {
                          "component": "CardItem",
                          "ordinal": 1,
                        },
                      },
                      "properties": Object {
                        "baz": Object {
                          "id": "Baz",
                          "meta": Object {
                            "vis": Object {
                              "component": "Number",
                              "ordinal": 2,
                            },
                          },
                          "title": "Baz",
                          "type": "number",
                        },
                        "name": Object {
                          "it": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Baz",
                      "type": "object",
                    },
                  ],
                },
                "title": "Varied Array Card",
                "type": "array",
              },
            }
          }
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          triggerSubmit={undefined}
          untouch={[Function]}
          valid={true}
          warning={undefined}
          withRef={true}
        >
          <VariedArrayCard
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            classes={
              Object {
                ".select-0-8 select": "select-0-8 select",
                "container": "container-0-6",
                "header": "header-0-7",
                "select": "select-0-8",
              }
            }
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={true}
            dispatch={[Function]}
            error={undefined}
            form="TestForm"
            handleSubmit={[Function]}
            initialValues={undefined}
            initialize={[Function]}
            initialized={false}
            invalid={false}
            name="foobar"
            pristine={false}
            pure={true}
            reset={[Function]}
            schemaVis={
              Object {
                "components": Object {
                  "CardItem": [Function],
                  "CardWithHeader": [Function],
                  "Color": [Function],
                  "Date": [Function],
                  "DateTime": [Function],
                  "Email": [Function],
                  "ListItemTemplate": [Function],
                  "ModalUniformedArrayCard": [Function],
                  "ModalUniformedArrayInline": [Function],
                  "ModalVariedArrayCard": [Function],
                  "ModalVariedArrayInline": [Function],
                  "Number": [Function],
                  "Password": [Function],
                  "SingleSelect": [Function],
                  "Text": [Function],
                  "TextArea": [Function],
                  "UniformedArrayCard": [Function],
                  "UniformedArrayInline": [Function],
                  "VariedArrayCard": [Function],
                  "VariedArrayInline": [Function],
                },
                "prefix": "meta.vis",
                "schema": Object {
                  "id": "VariedArrayCard",
                  "items": Object {
                    "anyOf": Array [
                      Object {
                        "id": "Bar",
                        "meta": Object {
                          "vis": Object {
                            "component": "CardItem",
                            "ordinal": 1,
                          },
                        },
                        "properties": Object {
                          "bar": Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 2,
                              },
                            },
                            "title": "Bar",
                            "type": "string",
                          },
                          "name": Object {
                            "it": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Bar",
                        "type": "object",
                      },
                      Object {
                        "id": "Baz",
                        "meta": Object {
                          "vis": Object {
                            "component": "CardItem",
                            "ordinal": 1,
                          },
                        },
                        "properties": Object {
                          "baz": Object {
                            "id": "Baz",
                            "meta": Object {
                              "vis": Object {
                                "component": "Number",
                                "ordinal": 2,
                              },
                            },
                            "title": "Baz",
                            "type": "number",
                          },
                          "name": Object {
                            "it": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Baz",
                        "type": "object",
                      },
                    ],
                  },
                  "title": "Varied Array Card",
                  "type": "array",
                },
              }
            }
            sheet={
              StyleSheet {
                "attached": true,
                "classes": Object {
                  ".select-0-8 select": "select-0-8 select",
                  "container": "container-0-6",
                  "header": "header-0-7",
                  "select": "select-0-8",
                },
                "deployed": true,
                "linked": false,
                "options": Object {
                  "Renderer": [Function],
                  "classes": Object {
                    ".select-0-8 select": "select-0-8 select",
                    "container": "container-0-6",
                    "header": "header-0-7",
                    "select": "select-0-8",
                  },
                  "generateClassName": [Function],
                  "index": 0,
                  "insertionPoint": undefined,
                  "jss": Jss {
                    "generateClassName": [Function],
                    "options": Object {
                      "Renderer": [Function],
                      "createGenerateClassName": [Function],
                      "plugins": Array [
                        Object {
                          "onCreateRule": [Function],
                          "onProcessRule": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessRule": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                      ],
                    },
                    "plugins": PluginsRegistry {
                      "hooks": Object {
                        "onChangeValue": Array [
                          [Function],
                          [Function],
                        ],
                        "onCreateRule": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "onProcessRule": Array [
                          [Function],
                          [Function],
                        ],
                        "onProcessSheet": Array [],
                        "onProcessStyle": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                    },
                    "version": "8.1.0",
                  },
                  "parent": [Circular],
                  "sheet": [Circular],
                },
                "renderer": DomRenderer {
                  "element": <style
                    data-jss=""
                    type="text/css"
                  >
                    
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                  </style>,
                  "getSelector": [Function],
                  "getStyle": [Function],
                  "hasInsertedRules": false,
                  "setSelector": [Function],
                  "setStyle": [Function],
                  "sheet": [Circular],
                },
                "rules": RuleList {
                  "classes": Object {
                    ".select-0-8 select": "select-0-8 select",
                    "container": "container-0-6",
                    "header": "header-0-7",
                    "select": "select-0-8",
                  },
                  "index": Array [
                    Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    Object {
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    Object {
                      "display": "inline-flex",
                      "width": "100%",
                    },
                    Object {
                      "margin-right": "5px",
                    },
                  ],
                  "map": Object {
                    ".container-0-6": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    ".header-0-7": Object {
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    ".select-0-8": Object {
                      "display": "inline-flex",
                      "width": "100%",
                    },
                    ".select-0-8 select": Object {
                      "margin-right": "5px",
                    },
                    "container": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    "header": Object {
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    "select": Object {
                      "display": "inline-flex",
                      "width": "100%",
                    },
                  },
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "raw": Object {
                    ".select-0-8 select": Object {
                      "marginRight": 5,
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "select": Object {
                      "@global select": Object {
                        "marginRight": 5,
                      },
                      "display": "inline-flex",
                      "width": "100%",
                    },
                  },
                },
              }
            }
            styles={
              Object {
                "container": Object {
                  "marginBottom": 10,
                  "marginTop": 15,
                },
                "header": Object {
                  "padding": 5,
                  "paddingLeft": 10,
                },
                "select": Object {
                  "@global select": Object {
                    "marginRight": 5,
                  },
                  "display": "inline-flex",
                  "width": "100%",
                },
              }
            }
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            touch={[Function]}
            triggerSubmit={undefined}
            untouch={[Function]}
            valid={true}
            warning={undefined}
            withRef={true}
          >
            <FieldArray
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              asyncValidate={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              change={[Function]}
              classes={
                Object {
                  ".select-0-8 select": "select-0-8 select",
                  "container": "container-0-6",
                  "header": "header-0-7",
                  "select": "select-0-8",
                }
              }
              clearAsyncError={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              component={[Function]}
              destroy={[Function]}
              dirty={true}
              dispatch={[Function]}
              error={undefined}
              form="TestForm"
              handleSubmit={[Function]}
              initialValues={undefined}
              initialize={[Function]}
              initialized={false}
              invalid={false}
              name="foobar"
              pristine={false}
              pure={true}
              reset={[Function]}
              schemaVis={
                Object {
                  "components": Object {
                    "CardItem": [Function],
                    "CardWithHeader": [Function],
                    "Color": [Function],
                    "Date": [Function],
                    "DateTime": [Function],
                    "Email": [Function],
                    "ListItemTemplate": [Function],
                    "ModalUniformedArrayCard": [Function],
                    "ModalUniformedArrayInline": [Function],
                    "ModalVariedArrayCard": [Function],
                    "ModalVariedArrayInline": [Function],
                    "Number": [Function],
                    "Password": [Function],
                    "SingleSelect": [Function],
                    "Text": [Function],
                    "TextArea": [Function],
                    "UniformedArrayCard": [Function],
                    "UniformedArrayInline": [Function],
                    "VariedArrayCard": [Function],
                    "VariedArrayInline": [Function],
                  },
                  "prefix": "meta.vis",
                  "schema": Object {
                    "id": "VariedArrayCard",
                    "items": Object {
                      "anyOf": Array [
                        Object {
                          "id": "Bar",
                          "meta": Object {
                            "vis": Object {
                              "component": "CardItem",
                              "ordinal": 1,
                            },
                          },
                          "properties": Object {
                            "bar": Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Bar",
                              "type": "string",
                            },
                            "name": Object {
                              "it": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Bar",
                          "type": "object",
                        },
                        Object {
                          "id": "Baz",
                          "meta": Object {
                            "vis": Object {
                              "component": "CardItem",
                              "ordinal": 1,
                            },
                          },
                          "properties": Object {
                            "baz": Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Number",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Baz",
                              "type": "number",
                            },
                            "name": Object {
                              "it": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Baz",
                          "type": "object",
                        },
                      ],
                    },
                    "title": "Varied Array Card",
                    "type": "array",
                  },
                }
              }
              sheet={
                StyleSheet {
                  "attached": true,
                  "classes": Object {
                    ".select-0-8 select": "select-0-8 select",
                    "container": "container-0-6",
                    "header": "header-0-7",
                    "select": "select-0-8",
                  },
                  "deployed": true,
                  "linked": false,
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "renderer": DomRenderer {
                    "element": <style
                      data-jss=""
                      type="text/css"
                    >
                      
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                    </style>,
                    "getSelector": [Function],
                    "getStyle": [Function],
                    "hasInsertedRules": false,
                    "setSelector": [Function],
                    "setStyle": [Function],
                    "sheet": [Circular],
                  },
                  "rules": RuleList {
                    "classes": Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    },
                    "index": Array [
                      Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      Object {
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      Object {
                        "display": "inline-flex",
                        "width": "100%",
                      },
                      Object {
                        "margin-right": "5px",
                      },
                    ],
                    "map": Object {
                      ".container-0-6": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      ".header-0-7": Object {
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      ".select-0-8": Object {
                        "display": "inline-flex",
                        "width": "100%",
                      },
                      ".select-0-8 select": Object {
                        "margin-right": "5px",
                      },
                      "container": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      "header": Object {
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      "select": Object {
                        "display": "inline-flex",
                        "width": "100%",
                      },
                    },
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "raw": Object {
                      ".select-0-8 select": Object {
                        "marginRight": 5,
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "select": Object {
                        "@global select": Object {
                          "marginRight": 5,
                        },
                        "display": "inline-flex",
                        "width": "100%",
                      },
                    },
                  },
                }
              }
              styles={
                Object {
                  "container": Object {
                    "marginBottom": 10,
                    "marginTop": 15,
                  },
                  "header": Object {
                    "padding": 5,
                    "paddingLeft": 10,
                  },
                  "select": Object {
                    "@global select": Object {
                      "marginRight": 5,
                    },
                    "display": "inline-flex",
                    "width": "100%",
                  },
                }
              }
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              touch={[Function]}
              triggerSubmit={undefined}
              untouch={[Function]}
              valid={true}
              validate={[Function]}
              warning={undefined}
              withRef={true}
            >
              <Connect(ConnectedFieldArray)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": true,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "TestForm",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "name": "foobar",
                    "persistentSubmitErrors": false,
                    "pristine": false,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "foobar": Object {
                        "count": 1,
                        "name": "foobar",
                        "type": "FieldArray",
                      },
                    },
                    "reset": [Function],
                    "schemaVis": Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "CardItem",
                                  "ordinal": 1,
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "CardItem",
                                  "ordinal": 1,
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    },
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldError": [Function],
                    "shouldValidate": [Function],
                    "shouldWarn": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {
                      "foobar": Array [
                        Object {},
                      ],
                    },
                    "warning": undefined,
                    "withRef": true,
                  }
                }
                anyTouched={false}
                array={
                  Object {
                    "insert": [Function],
                    "move": [Function],
                    "pop": [Function],
                    "push": [Function],
                    "remove": [Function],
                    "removeAll": [Function],
                    "shift": [Function],
                    "splice": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                  }
                }
                asyncValidate={[Function]}
                asyncValidating={false}
                autofill={[Function]}
                blur={[Function]}
                change={[Function]}
                classes={
                  Object {
                    ".select-0-8 select": "select-0-8 select",
                    "container": "container-0-6",
                    "header": "header-0-7",
                    "select": "select-0-8",
                  }
                }
                clearAsyncError={[Function]}
                clearSubmit={[Function]}
                clearSubmitErrors={[Function]}
                component={[Function]}
                destroy={[Function]}
                dirty={true}
                dispatch={[Function]}
                error={undefined}
                form="TestForm"
                handleSubmit={[Function]}
                initialValues={undefined}
                initialize={[Function]}
                initialized={false}
                invalid={false}
                name="foobar"
                pristine={false}
                pure={true}
                reset={[Function]}
                schemaVis={
                  Object {
                    "components": Object {
                      "CardItem": [Function],
                      "CardWithHeader": [Function],
                      "Color": [Function],
                      "Date": [Function],
                      "DateTime": [Function],
                      "Email": [Function],
                      "ListItemTemplate": [Function],
                      "ModalUniformedArrayCard": [Function],
                      "ModalUniformedArrayInline": [Function],
                      "ModalVariedArrayCard": [Function],
                      "ModalVariedArrayInline": [Function],
                      "Number": [Function],
                      "Password": [Function],
                      "SingleSelect": [Function],
                      "Text": [Function],
                      "TextArea": [Function],
                      "UniformedArrayCard": [Function],
                      "UniformedArrayInline": [Function],
                      "VariedArrayCard": [Function],
                      "VariedArrayInline": [Function],
                    },
                    "prefix": "meta.vis",
                    "schema": Object {
                      "id": "VariedArrayCard",
                      "items": Object {
                        "anyOf": Array [
                          Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "CardItem",
                                "ordinal": 1,
                              },
                            },
                            "properties": Object {
                              "bar": Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Bar",
                                "type": "string",
                              },
                              "name": Object {
                                "it": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Bar",
                            "type": "object",
                          },
                          Object {
                            "id": "Baz",
                            "meta": Object {
                              "vis": Object {
                                "component": "CardItem",
                                "ordinal": 1,
                              },
                            },
                            "properties": Object {
                              "baz": Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Number",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Baz",
                                "type": "number",
                              },
                              "name": Object {
                                "it": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Baz",
                            "type": "object",
                          },
                        ],
                      },
                      "title": "Varied Array Card",
                      "type": "array",
                    },
                  }
                }
                sheet={
                  StyleSheet {
                    "attached": true,
                    "classes": Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    },
                    "deployed": true,
                    "linked": false,
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "renderer": DomRenderer {
                      "element": <style
                        data-jss=""
                        type="text/css"
                      >
                        
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                      </style>,
                      "getSelector": [Function],
                      "getStyle": [Function],
                      "hasInsertedRules": false,
                      "setSelector": [Function],
                      "setStyle": [Function],
                      "sheet": [Circular],
                    },
                    "rules": RuleList {
                      "classes": Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      },
                      "index": Array [
                        Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        Object {
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        Object {
                          "display": "inline-flex",
                          "width": "100%",
                        },
                        Object {
                          "margin-right": "5px",
                        },
                      ],
                      "map": Object {
                        ".container-0-6": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        ".header-0-7": Object {
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        ".select-0-8": Object {
                          "display": "inline-flex",
                          "width": "100%",
                        },
                        ".select-0-8 select": Object {
                          "margin-right": "5px",
                        },
                        "container": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        "header": Object {
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        "select": Object {
                          "display": "inline-flex",
                          "width": "100%",
                        },
                      },
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          ".select-0-8 select": "select-0-8 select",
                          "container": "container-0-6",
                          "header": "header-0-7",
                          "select": "select-0-8",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "raw": Object {
                        ".select-0-8 select": Object {
                          "marginRight": 5,
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "select": Object {
                          "@global select": Object {
                            "marginRight": 5,
                          },
                          "display": "inline-flex",
                          "width": "100%",
                        },
                      },
                    },
                  }
                }
                styles={
                  Object {
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "select": Object {
                      "@global select": Object {
                        "marginRight": 5,
                      },
                      "display": "inline-flex",
                      "width": "100%",
                    },
                  }
                }
                submit={[Function]}
                submitFailed={false}
                submitSucceeded={false}
                submitting={false}
                touch={[Function]}
                triggerSubmit={undefined}
                untouch={[Function]}
                valid={true}
                validate={[Function]}
                warning={undefined}
                withRef={true}
              >
                <ConnectedFieldArray
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": true,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "TestForm",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "name": "foobar",
                      "persistentSubmitErrors": false,
                      "pristine": false,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "foobar": Object {
                          "count": 1,
                          "name": "foobar",
                          "type": "FieldArray",
                        },
                      },
                      "reset": [Function],
                      "schemaVis": Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "CardItem",
                                    "ordinal": 1,
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "CardItem",
                                    "ordinal": 1,
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      },
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldError": [Function],
                      "shouldValidate": [Function],
                      "shouldWarn": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {
                        "foobar": Array [
                          Object {},
                        ],
                      },
                      "warning": undefined,
                      "withRef": true,
                    }
                  }
                  anyTouched={false}
                  array={
                    Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    }
                  }
                  arrayInsert={[Function]}
                  arrayMove={[Function]}
                  arrayPop={[Function]}
                  arrayPush={[Function]}
                  arrayRemove={[Function]}
                  arrayRemoveAll={[Function]}
                  arrayShift={[Function]}
                  arraySplice={[Function]}
                  arraySwap={[Function]}
                  arrayUnshift={[Function]}
                  asyncError={undefined}
                  asyncValidate={[Function]}
                  asyncValidating={false}
                  autofill={[Function]}
                  blur={[Function]}
                  change={[Function]}
                  classes={
                    Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    }
                  }
                  clearAsyncError={[Function]}
                  clearSubmit={[Function]}
                  clearSubmitErrors={[Function]}
                  component={[Function]}
                  destroy={[Function]}
                  dirty={true}
                  dispatch={[Function]}
                  error={undefined}
                  form="TestForm"
                  handleSubmit={[Function]}
                  initialValues={undefined}
                  initialize={[Function]}
                  initialized={false}
                  invalid={false}
                  length={1}
                  name="foobar"
                  pristine={false}
                  pure={true}
                  rerenderOnEveryChange={false}
                  reset={[Function]}
                  schemaVis={
                    Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "CardItem",
                                  "ordinal": 1,
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "CardItem",
                                  "ordinal": 1,
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    }
                  }
                  sheet={
                    StyleSheet {
                      "attached": true,
                      "classes": Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      },
                      "deployed": true,
                      "linked": false,
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          ".select-0-8 select": "select-0-8 select",
                          "container": "container-0-6",
                          "header": "header-0-7",
                          "select": "select-0-8",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "renderer": DomRenderer {
                        "element": <style
                          data-jss=""
                          type="text/css"
                        >
                          
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                        </style>,
                        "getSelector": [Function],
                        "getStyle": [Function],
                        "hasInsertedRules": false,
                        "setSelector": [Function],
                        "setStyle": [Function],
                        "sheet": [Circular],
                      },
                      "rules": RuleList {
                        "classes": Object {
                          ".select-0-8 select": "select-0-8 select",
                          "container": "container-0-6",
                          "header": "header-0-7",
                          "select": "select-0-8",
                        },
                        "index": Array [
                          Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          Object {
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          Object {
                            "display": "inline-flex",
                            "width": "100%",
                          },
                          Object {
                            "margin-right": "5px",
                          },
                        ],
                        "map": Object {
                          ".container-0-6": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          ".header-0-7": Object {
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          ".select-0-8": Object {
                            "display": "inline-flex",
                            "width": "100%",
                          },
                          ".select-0-8 select": Object {
                            "margin-right": "5px",
                          },
                          "container": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          "header": Object {
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          "select": Object {
                            "display": "inline-flex",
                            "width": "100%",
                          },
                        },
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            ".select-0-8 select": "select-0-8 select",
                            "container": "container-0-6",
                            "header": "header-0-7",
                            "select": "select-0-8",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "raw": Object {
                          ".select-0-8 select": Object {
                            "marginRight": 5,
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "select": Object {
                            "@global select": Object {
                              "marginRight": 5,
                            },
                            "display": "inline-flex",
                            "width": "100%",
                          },
                        },
                      },
                    }
                  }
                  state={undefined}
                  styles={
                    Object {
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "select": Object {
                        "@global select": Object {
                          "marginRight": 5,
                        },
                        "display": "inline-flex",
                        "width": "100%",
                      },
                    }
                  }
                  submit={[Function]}
                  submitError={undefined}
                  submitFailed={undefined}
                  submitSucceeded={false}
                  submitting={undefined}
                  syncError={undefined}
                  syncWarning={undefined}
                  touch={[Function]}
                  triggerSubmit={undefined}
                  untouch={[Function]}
                  valid={true}
                  validate={[Function]}
                  value={
                    Array [
                      Object {},
                    ]
                  }
                  warning={undefined}
                  withRef={true}
                >
                  <VariedArray
                    addBtnProps={Object {}}
                    anyTouched={false}
                    array={
                      Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    asyncValidate={[Function]}
                    asyncValidating={false}
                    autofill={[Function]}
                    blur={[Function]}
                    bodyTag={[Function]}
                    change={[Function]}
                    classes={
                      Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      }
                    }
                    clearAsyncError={[Function]}
                    clearSubmit={[Function]}
                    clearSubmitErrors={[Function]}
                    destroy={[Function]}
                    dispatch={[Function]}
                    error={undefined}
                    fields={
                      Object {
                        "_isFieldArray": true,
                        "forEach": [Function],
                        "get": [Function],
                        "getAll": [Function],
                        "insert": [Function],
                        "length": 1,
                        "map": [Function],
                        "move": [Function],
                        "name": "foobar",
                        "pop": [Function],
                        "push": [Function],
                        "reduce": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    form="TestForm"
                    handleSubmit={[Function]}
                    headerTag={[Function]}
                    initialValues={undefined}
                    initialize={[Function]}
                    initialized={false}
                    invalid={false}
                    meta={
                      Object {
                        "dirty": true,
                        "error": undefined,
                        "form": "TestForm",
                        "invalid": false,
                        "pristine": false,
                        "submitFailed": undefined,
                        "submitting": undefined,
                        "valid": true,
                        "warning": undefined,
                      }
                    }
                    pure={true}
                    required={false}
                    reset={[Function]}
                    schemaVis={
                      Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "CardItem",
                                    "ordinal": 1,
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "CardItem",
                                    "ordinal": 1,
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      }
                    }
                    selectInputProps={Object {}}
                    sheet={
                      StyleSheet {
                        "attached": true,
                        "classes": Object {
                          ".select-0-8 select": "select-0-8 select",
                          "container": "container-0-6",
                          "header": "header-0-7",
                          "select": "select-0-8",
                        },
                        "deployed": true,
                        "linked": false,
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            ".select-0-8 select": "select-0-8 select",
                            "container": "container-0-6",
                            "header": "header-0-7",
                            "select": "select-0-8",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "renderer": DomRenderer {
                          "element": <style
                            data-jss=""
                            type="text/css"
                          >
                            
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                          </style>,
                          "getSelector": [Function],
                          "getStyle": [Function],
                          "hasInsertedRules": false,
                          "setSelector": [Function],
                          "setStyle": [Function],
                          "sheet": [Circular],
                        },
                        "rules": RuleList {
                          "classes": Object {
                            ".select-0-8 select": "select-0-8 select",
                            "container": "container-0-6",
                            "header": "header-0-7",
                            "select": "select-0-8",
                          },
                          "index": Array [
                            Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            Object {
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            Object {
                              "display": "inline-flex",
                              "width": "100%",
                            },
                            Object {
                              "margin-right": "5px",
                            },
                          ],
                          "map": Object {
                            ".container-0-6": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            ".header-0-7": Object {
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            ".select-0-8": Object {
                              "display": "inline-flex",
                              "width": "100%",
                            },
                            ".select-0-8 select": Object {
                              "margin-right": "5px",
                            },
                            "container": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            "header": Object {
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            "select": Object {
                              "display": "inline-flex",
                              "width": "100%",
                            },
                          },
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              ".select-0-8 select": "select-0-8 select",
                              "container": "container-0-6",
                              "header": "header-0-7",
                              "select": "select-0-8",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "raw": Object {
                            ".select-0-8 select": Object {
                              "marginRight": 5,
                            },
                            "container": Object {
                              "marginBottom": 10,
                              "marginTop": 15,
                            },
                            "header": Object {
                              "padding": 5,
                              "paddingLeft": 10,
                            },
                            "select": Object {
                              "@global select": Object {
                                "marginRight": 5,
                              },
                              "display": "inline-flex",
                              "width": "100%",
                            },
                          },
                        },
                      }
                    }
                    styles={
                      Object {
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "select": Object {
                          "@global select": Object {
                            "marginRight": 5,
                          },
                          "display": "inline-flex",
                          "width": "100%",
                        },
                      }
                    }
                    submit={[Function]}
                    submitSucceeded={false}
                    tag={[Function]}
                    touch={[Function]}
                    triggerSubmit={undefined}
                    untouch={[Function]}
                    valid={true}
                    warning={undefined}
                  >
                    <Card
                      className="container-0-6"
                      tag="div"
                    >
                      <div
                        className="container-0-6 card"
                      >
                        <CardHeader
                          className="header-0-7"
                          tag="div"
                        >
                          <div
                            className="header-0-7 card-header"
                          >
                            Varied Array Card
                          </div>
                        </CardHeader>
                        <CardBody
                          className={undefined}
                          tag="div"
                        >
                          <div
                            className="card-body"
                          >
                            <div
                              className="select-0-8"
                            >
                              <Input
                                id="selectItem"
                                onChange={[Function]}
                                tag="p"
                                type="select"
                                value="Bar"
                              >
                                <select
                                  className="form-control"
                                  id="selectItem"
                                  onChange={[Function]}
                                  value="Bar"
                                >
                                  <option
                                    disabled={true}
                                    value=""
                                  />
                                  <option
                                    key="selectOption-0"
                                    value="Bar"
                                  >
                                    Bar
                                  </option>
                                  <option
                                    key="selectOption-1"
                                    value="Baz"
                                  >
                                    Baz
                                  </option>
                                </select>
                              </Input>
                              <Button
                                color="primary"
                                disabled={false}
                                id="addItemBtn"
                                onClick={[Function]}
                                tag="button"
                              >
                                <button
                                  className="btn btn-primary"
                                  disabled={false}
                                  id="addItemBtn"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Add
                                </button>
                              </Button>
                            </div>
                            <div
                              className={undefined}
                            >
                              <SchemaVis
                                componentProps={
                                  Object {
                                    "CardItem": Object {
                                      "removeBtnProps": Object {
                                        "onClick": [Function],
                                      },
                                    },
                                  }
                                }
                                components={
                                  Object {
                                    "CardItem": [Function],
                                    "CardWithHeader": [Function],
                                    "Color": [Function],
                                    "Date": [Function],
                                    "DateTime": [Function],
                                    "Email": [Function],
                                    "ListItemTemplate": [Function],
                                    "ModalUniformedArrayCard": [Function],
                                    "ModalUniformedArrayInline": [Function],
                                    "ModalVariedArrayCard": [Function],
                                    "ModalVariedArrayInline": [Function],
                                    "Number": [Function],
                                    "Password": [Function],
                                    "SingleSelect": [Function],
                                    "Text": [Function],
                                    "TextArea": [Function],
                                    "UniformedArrayCard": [Function],
                                    "UniformedArrayInline": [Function],
                                    "VariedArrayCard": [Function],
                                    "VariedArrayInline": [Function],
                                  }
                                }
                                id="schemaVis"
                                key="ArrayFields-foobar[0]-0"
                                namespace="foobar[0]"
                                prefix="meta.vis"
                                schema={
                                  Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "CardItem",
                                        "ordinal": 1,
                                      },
                                    },
                                    "properties": Object {
                                      "bar": Object {
                                        "id": "Bar",
                                        "meta": Object {
                                          "vis": Object {
                                            "component": "Text",
                                            "ordinal": 2,
                                          },
                                        },
                                        "title": "Bar",
                                        "type": "string",
                                      },
                                      "name": Object {
                                        "it": "Name",
                                        "meta": Object {
                                          "vis": Object {
                                            "component": "Text",
                                            "ordinal": 1,
                                          },
                                        },
                                        "title": "Name",
                                        "type": "string",
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "object",
                                  }
                                }
                                styles={Object {}}
                                tag="div"
                              >
                                <StyledComponent
                                  id="schemaVis"
                                  key="schemaVis"
                                  name="foobar[0]"
                                  removeBtnProps={
                                    Object {
                                      "onClick": [Function],
                                    }
                                  }
                                  required={false}
                                  schemaVis={
                                    Object {
                                      "componentProps": Object {
                                        "CardItem": Object {
                                          "removeBtnProps": Object {
                                            "onClick": [Function],
                                          },
                                        },
                                      },
                                      "components": Object {
                                        "CardItem": [Function],
                                        "CardWithHeader": [Function],
                                        "Color": [Function],
                                        "Date": [Function],
                                        "DateTime": [Function],
                                        "Email": [Function],
                                        "ListItemTemplate": [Function],
                                        "ModalUniformedArrayCard": [Function],
                                        "ModalUniformedArrayInline": [Function],
                                        "ModalVariedArrayCard": [Function],
                                        "ModalVariedArrayInline": [Function],
                                        "Number": [Function],
                                        "Password": [Function],
                                        "SingleSelect": [Function],
                                        "Text": [Function],
                                        "TextArea": [Function],
                                        "UniformedArrayCard": [Function],
                                        "UniformedArrayInline": [Function],
                                        "VariedArrayCard": [Function],
                                        "VariedArrayInline": [Function],
                                      },
                                      "defaultComponents": undefined,
                                      "definitions": Object {},
                                      "prefix": "meta.vis",
                                      "schema": Object {
                                        "id": "Bar",
                                        "meta": Object {
                                          "vis": Object {
                                            "component": "CardItem",
                                            "ordinal": 1,
                                          },
                                        },
                                        "properties": Object {
                                          "bar": Object {
                                            "id": "Bar",
                                            "meta": Object {
                                              "vis": Object {
                                                "component": "Text",
                                                "ordinal": 2,
                                              },
                                            },
                                            "title": "Bar",
                                            "type": "string",
                                          },
                                          "name": Object {
                                            "it": "Name",
                                            "meta": Object {
                                              "vis": Object {
                                                "component": "Text",
                                                "ordinal": 1,
                                              },
                                            },
                                            "title": "Name",
                                            "type": "string",
                                          },
                                        },
                                        "title": "Bar",
                                        "type": "object",
                                      },
                                    }
                                  }
                                  styles={Object {}}
                                >
                                  <CardItem
                                    classes={
                                      Object {
                                        "card": "card-0-9",
                                        "header": "header-0-10",
                                        "headerTitle": "headerTitle-0-12",
                                        "removeButton": "removeButton-0-11",
                                      }
                                    }
                                    id="schemaVis"
                                    name="foobar[0]"
                                    removeBtnProps={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    required={false}
                                    schemaVis={
                                      Object {
                                        "componentProps": Object {
                                          "CardItem": Object {
                                            "removeBtnProps": Object {
                                              "onClick": [Function],
                                            },
                                          },
                                        },
                                        "components": Object {
                                          "CardItem": [Function],
                                          "CardWithHeader": [Function],
                                          "Color": [Function],
                                          "Date": [Function],
                                          "DateTime": [Function],
                                          "Email": [Function],
                                          "ListItemTemplate": [Function],
                                          "ModalUniformedArrayCard": [Function],
                                          "ModalUniformedArrayInline": [Function],
                                          "ModalVariedArrayCard": [Function],
                                          "ModalVariedArrayInline": [Function],
                                          "Number": [Function],
                                          "Password": [Function],
                                          "SingleSelect": [Function],
                                          "Text": [Function],
                                          "TextArea": [Function],
                                          "UniformedArrayCard": [Function],
                                          "UniformedArrayInline": [Function],
                                          "VariedArrayCard": [Function],
                                          "VariedArrayInline": [Function],
                                        },
                                        "defaultComponents": undefined,
                                        "definitions": Object {},
                                        "prefix": "meta.vis",
                                        "schema": Object {
                                          "id": "Bar",
                                          "meta": Object {
                                            "vis": Object {
                                              "component": "CardItem",
                                              "ordinal": 1,
                                            },
                                          },
                                          "properties": Object {
                                            "bar": Object {
                                              "id": "Bar",
                                              "meta": Object {
                                                "vis": Object {
                                                  "component": "Text",
                                                  "ordinal": 2,
                                                },
                                              },
                                              "title": "Bar",
                                              "type": "string",
                                            },
                                            "name": Object {
                                              "it": "Name",
                                              "meta": Object {
                                                "vis": Object {
                                                  "component": "Text",
                                                  "ordinal": 1,
                                                },
                                              },
                                              "title": "Name",
                                              "type": "string",
                                            },
                                          },
                                          "title": "Bar",
                                          "type": "object",
                                        },
                                      }
                                    }
                                    sheet={
                                      StyleSheet {
                                        "attached": true,
                                        "classes": Object {
                                          "card": "card-0-9",
                                          "header": "header-0-10",
                                          "headerTitle": "headerTitle-0-12",
                                          "removeButton": "removeButton-0-11",
                                        },
                                        "deployed": true,
                                        "linked": false,
                                        "options": Object {
                                          "Renderer": [Function],
                                          "classes": Object {
                                            "card": "card-0-9",
                                            "header": "header-0-10",
                                            "headerTitle": "headerTitle-0-12",
                                            "removeButton": "removeButton-0-11",
                                          },
                                          "generateClassName": [Function],
                                          "index": 0,
                                          "insertionPoint": undefined,
                                          "jss": Jss {
                                            "generateClassName": [Function],
                                            "options": Object {
                                              "Renderer": [Function],
                                              "createGenerateClassName": [Function],
                                              "plugins": Array [
                                                Object {
                                                  "onCreateRule": [Function],
                                                  "onProcessRule": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessRule": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                              ],
                                            },
                                            "plugins": PluginsRegistry {
                                              "hooks": Object {
                                                "onChangeValue": Array [
                                                  [Function],
                                                  [Function],
                                                ],
                                                "onCreateRule": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "onProcessRule": Array [
                                                  [Function],
                                                  [Function],
                                                ],
                                                "onProcessSheet": Array [],
                                                "onProcessStyle": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                            },
                                            "version": "8.1.0",
                                          },
                                          "parent": [Circular],
                                          "sheet": [Circular],
                                        },
                                        "renderer": DomRenderer {
                                          "element": <style
                                            data-jss=""
                                            type="text/css"
                                          >
                                            
.card-0-9 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-10 {
  padding: 5px;
  display: inline-flex;
  padding-left: 10px;
}
.removeButton-0-11 {
  margin-left: auto;
}
.headerTitle-0-12 {
  margin-top: auto;
  margin-bottom: auto;
}

                                          </style>,
                                          "getSelector": [Function],
                                          "getStyle": [Function],
                                          "hasInsertedRules": false,
                                          "setSelector": [Function],
                                          "setStyle": [Function],
                                          "sheet": [Circular],
                                        },
                                        "rules": RuleList {
                                          "classes": Object {
                                            "card": "card-0-9",
                                            "header": "header-0-10",
                                            "headerTitle": "headerTitle-0-12",
                                            "removeButton": "removeButton-0-11",
                                          },
                                          "index": Array [
                                            Object {
                                              "margin-bottom": "10px",
                                              "margin-top": "15px",
                                            },
                                            Object {
                                              "display": "inline-flex",
                                              "padding": "5px",
                                              "padding-left": "10px",
                                            },
                                            Object {
                                              "margin-left": "auto",
                                            },
                                            Object {
                                              "margin-bottom": "auto",
                                              "margin-top": "auto",
                                            },
                                          ],
                                          "map": Object {
                                            ".card-0-9": Object {
                                              "margin-bottom": "10px",
                                              "margin-top": "15px",
                                            },
                                            ".header-0-10": Object {
                                              "display": "inline-flex",
                                              "padding": "5px",
                                              "padding-left": "10px",
                                            },
                                            ".headerTitle-0-12": Object {
                                              "margin-bottom": "auto",
                                              "margin-top": "auto",
                                            },
                                            ".removeButton-0-11": Object {
                                              "margin-left": "auto",
                                            },
                                            "card": Object {
                                              "margin-bottom": "10px",
                                              "margin-top": "15px",
                                            },
                                            "header": Object {
                                              "display": "inline-flex",
                                              "padding": "5px",
                                              "padding-left": "10px",
                                            },
                                            "headerTitle": Object {
                                              "margin-bottom": "auto",
                                              "margin-top": "auto",
                                            },
                                            "removeButton": Object {
                                              "margin-left": "auto",
                                            },
                                          },
                                          "options": Object {
                                            "Renderer": [Function],
                                            "classes": Object {
                                              "card": "card-0-9",
                                              "header": "header-0-10",
                                              "headerTitle": "headerTitle-0-12",
                                              "removeButton": "removeButton-0-11",
                                            },
                                            "generateClassName": [Function],
                                            "index": 0,
                                            "insertionPoint": undefined,
                                            "jss": Jss {
                                              "generateClassName": [Function],
                                              "options": Object {
                                                "Renderer": [Function],
                                                "createGenerateClassName": [Function],
                                                "plugins": Array [
                                                  Object {
                                                    "onCreateRule": [Function],
                                                    "onProcessRule": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessRule": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                ],
                                              },
                                              "plugins": PluginsRegistry {
                                                "hooks": Object {
                                                  "onChangeValue": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onCreateRule": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onProcessRule": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onProcessSheet": Array [],
                                                  "onProcessStyle": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                              },
                                              "version": "8.1.0",
                                            },
                                            "parent": [Circular],
                                            "sheet": [Circular],
                                          },
                                          "raw": Object {
                                            "card": Object {
                                              "marginBottom": 10,
                                              "marginTop": 15,
                                            },
                                            "header": Object {
                                              "display": "inline-flex",
                                              "padding": 5,
                                              "paddingLeft": 10,
                                            },
                                            "headerTitle": Object {
                                              "marginBottom": "auto",
                                              "marginTop": "auto",
                                            },
                                            "removeButton": Object {
                                              "marginLeft": "auto",
                                            },
                                          },
                                        },
                                      }
                                    }
                                    styles={
                                      Object {
                                        "card": Object {
                                          "marginBottom": 10,
                                          "marginTop": 15,
                                        },
                                        "header": Object {
                                          "display": "inline-flex",
                                          "padding": 5,
                                          "paddingLeft": 10,
                                        },
                                        "headerTitle": Object {
                                          "marginBottom": "auto",
                                          "marginTop": "auto",
                                        },
                                        "removeButton": Object {
                                          "marginLeft": "auto",
                                        },
                                      }
                                    }
                                  >
                                    <Card
                                      className="card-0-9"
                                      tag="div"
                                    >
                                      <div
                                        className="card-0-9 card"
                                      >
                                        <CardHeader
                                          className="header-0-10"
                                          tag="div"
                                        >
                                          <div
                                            className="header-0-10 card-header"
                                          >
                                            <div
                                              className="headerTitle-0-12"
                                            >
                                              Bar
                                            </div>
                                            <div
                                              className="removeButton-0-11"
                                            >
                                              <Button
                                                color="danger"
                                                id="removeItemBtn"
                                                onClick={[Function]}
                                                size="sm"
                                                tag="button"
                                              >
                                                <button
                                                  className="btn btn-danger btn-sm"
                                                  id="removeItemBtn"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  Remove
                                                </button>
                                              </Button>
                                            </div>
                                          </div>
                                        </CardHeader>
                                        <SchemaVis
                                          className={undefined}
                                          componentProps={
                                            Object {
                                              "CardItem": Object {
                                                "removeBtnProps": Object {
                                                  "onClick": [Function],
                                                },
                                              },
                                            }
                                          }
                                          components={
                                            Object {
                                              "CardItem": [Function],
                                              "CardWithHeader": [Function],
                                              "Color": [Function],
                                              "Date": [Function],
                                              "DateTime": [Function],
                                              "Email": [Function],
                                              "ListItemTemplate": [Function],
                                              "ModalUniformedArrayCard": [Function],
                                              "ModalUniformedArrayInline": [Function],
                                              "ModalVariedArrayCard": [Function],
                                              "ModalVariedArrayInline": [Function],
                                              "Number": [Function],
                                              "Password": [Function],
                                              "SingleSelect": [Function],
                                              "Text": [Function],
                                              "TextArea": [Function],
                                              "UniformedArrayCard": [Function],
                                              "UniformedArrayInline": [Function],
                                              "VariedArrayCard": [Function],
                                              "VariedArrayInline": [Function],
                                            }
                                          }
                                          defaultComponents={undefined}
                                          definitions={Object {}}
                                          id="schemaVis"
                                          namespace="foobar[0]"
                                          prefix="meta.vis"
                                          required={false}
                                          schema={
                                            Object {
                                              "id": "Bar",
                                              "meta": Object {
                                                "vis": undefined,
                                              },
                                              "properties": Object {
                                                "bar": Object {
                                                  "id": "Bar",
                                                  "meta": Object {
                                                    "vis": Object {
                                                      "component": "Text",
                                                      "ordinal": 2,
                                                    },
                                                  },
                                                  "title": "Bar",
                                                  "type": "string",
                                                },
                                                "name": Object {
                                                  "it": "Name",
                                                  "meta": Object {
                                                    "vis": Object {
                                                      "component": "Text",
                                                      "ordinal": 1,
                                                    },
                                                  },
                                                  "title": "Name",
                                                  "type": "string",
                                                },
                                              },
                                              "title": "Bar",
                                              "type": "object",
                                            }
                                          }
                                          styles={Object {}}
                                          tag={[Function]}
                                        >
                                          <CardBody
                                            className={undefined}
                                            id="schemaVis"
                                            key="schemaVis"
                                            required={false}
                                            tag="div"
                                          >
                                            <div
                                              className="card-body"
                                              id="schemaVis"
                                              required={false}
                                            >
                                              <StyledComponent
                                                className={undefined}
                                                id="schemaVis"
                                                key="0"
                                                name="foobar[0].name"
                                                required={false}
                                                schemaVis={
                                                  Object {
                                                    "componentProps": Object {
                                                      "CardItem": Object {
                                                        "removeBtnProps": Object {
                                                          "onClick": [Function],
                                                        },
                                                      },
                                                    },
                                                    "components": Object {
                                                      "CardItem": [Function],
                                                      "CardWithHeader": [Function],
                                                      "Color": [Function],
                                                      "Date": [Function],
                                                      "DateTime": [Function],
                                                      "Email": [Function],
                                                      "ListItemTemplate": [Function],
                                                      "ModalUniformedArrayCard": [Function],
                                                      "ModalUniformedArrayInline": [Function],
                                                      "ModalVariedArrayCard": [Function],
                                                      "ModalVariedArrayInline": [Function],
                                                      "Number": [Function],
                                                      "Password": [Function],
                                                      "SingleSelect": [Function],
                                                      "Text": [Function],
                                                      "TextArea": [Function],
                                                      "UniformedArrayCard": [Function],
                                                      "UniformedArrayInline": [Function],
                                                      "VariedArrayCard": [Function],
                                                      "VariedArrayInline": [Function],
                                                    },
                                                    "defaultComponents": undefined,
                                                    "definitions": Object {},
                                                    "prefix": "meta.vis",
                                                    "schema": Object {
                                                      "it": "Name",
                                                      "meta": Object {
                                                        "vis": Object {
                                                          "component": "Text",
                                                          "ordinal": 1,
                                                        },
                                                      },
                                                      "title": "Name",
                                                      "type": "string",
                                                    },
                                                  }
                                                }
                                                styles={Object {}}
                                              >
                                                <CreatedInputField
                                                  className={undefined}
                                                  classes={Object {}}
                                                  id="schemaVis"
                                                  name="foobar[0].name"
                                                  required={false}
                                                  schemaVis={
                                                    Object {
                                                      "componentProps": Object {
                                                        "CardItem": Object {
                                                          "removeBtnProps": Object {
                                                            "onClick": [Function],
                                                          },
                                                        },
                                                      },
                                                      "components": Object {
                                                        "CardItem": [Function],
                                                        "CardWithHeader": [Function],
                                                        "Color": [Function],
                                                        "Date": [Function],
                                                        "DateTime": [Function],
                                                        "Email": [Function],
                                                        "ListItemTemplate": [Function],
                                                        "ModalUniformedArrayCard": [Function],
                                                        "ModalUniformedArrayInline": [Function],
                                                        "ModalVariedArrayCard": [Function],
                                                        "ModalVariedArrayInline": [Function],
                                                        "Number": [Function],
                                                        "Password": [Function],
                                                        "SingleSelect": [Function],
                                                        "Text": [Function],
                                                        "TextArea": [Function],
                                                        "UniformedArrayCard": [Function],
                                                        "UniformedArrayInline": [Function],
                                                        "VariedArrayCard": [Function],
                                                        "VariedArrayInline": [Function],
                                                      },
                                                      "defaultComponents": undefined,
                                                      "definitions": Object {},
                                                      "prefix": "meta.vis",
                                                      "schema": Object {
                                                        "it": "Name",
                                                        "meta": Object {
                                                          "vis": Object {
                                                            "component": "Text",
                                                            "ordinal": 1,
                                                          },
                                                        },
                                                        "title": "Name",
                                                        "type": "string",
                                                      },
                                                    }
                                                  }
                                                  sheet={
                                                    StyleSheet {
                                                      "attached": true,
                                                      "classes": Object {},
                                                      "deployed": true,
                                                      "linked": false,
                                                      "options": Object {
                                                        "Renderer": [Function],
                                                        "classes": Object {},
                                                        "generateClassName": [Function],
                                                        "index": 0,
                                                        "insertionPoint": undefined,
                                                        "jss": Jss {
                                                          "generateClassName": [Function],
                                                          "options": Object {
                                                            "Renderer": [Function],
                                                            "createGenerateClassName": [Function],
                                                            "plugins": Array [
                                                              Object {
                                                                "onCreateRule": [Function],
                                                                "onProcessRule": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onChangeValue": [Function],
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onChangeValue": [Function],
                                                                "onProcessRule": [Function],
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                            ],
                                                          },
                                                          "plugins": PluginsRegistry {
                                                            "hooks": Object {
                                                              "onChangeValue": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                              "onCreateRule": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                              "onProcessRule": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                              "onProcessSheet": Array [],
                                                              "onProcessStyle": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                          },
                                                          "version": "8.1.0",
                                                        },
                                                        "parent": [Circular],
                                                        "sheet": [Circular],
                                                      },
                                                      "renderer": DomRenderer {
                                                        "element": <style
                                                          data-jss=""
                                                          type="text/css"
                                                        >
                                                          


                                                        </style>,
                                                        "getSelector": [Function],
                                                        "getStyle": [Function],
                                                        "hasInsertedRules": false,
                                                        "setSelector": [Function],
                                                        "setStyle": [Function],
                                                        "sheet": [Circular],
                                                      },
                                                      "rules": RuleList {
                                                        "classes": Object {},
                                                        "index": Array [],
                                                        "map": Object {},
                                                        "options": Object {
                                                          "Renderer": [Function],
                                                          "classes": Object {},
                                                          "generateClassName": [Function],
                                                          "index": 0,
                                                          "insertionPoint": undefined,
                                                          "jss": Jss {
                                                            "generateClassName": [Function],
                                                            "options": Object {
                                                              "Renderer": [Function],
                                                              "createGenerateClassName": [Function],
                                                              "plugins": Array [
                                                                Object {
                                                                  "onCreateRule": [Function],
                                                                  "onProcessRule": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onChangeValue": [Function],
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onChangeValue": [Function],
                                                                  "onProcessRule": [Function],
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                              ],
                                                            },
                                                            "plugins": PluginsRegistry {
                                                              "hooks": Object {
                                                                "onChangeValue": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onCreateRule": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onProcessRule": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onProcessSheet": Array [],
                                                                "onProcessStyle": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                            },
                                                            "version": "8.1.0",
                                                          },
                                                          "parent": [Circular],
                                                          "sheet": [Circular],
                                                        },
                                                        "raw": Object {},
                                                      },
                                                    }
                                                  }
                                                  styles={Object {}}
                                                >
                                                  <InputField
                                                    className={undefined}
                                                    classes={Object {}}
                                                    component={[Function]}
                                                    id="schemaVis"
                                                    name="foobar[0].name"
                                                    required={false}
                                                    schemaVis={
                                                      Object {
                                                        "componentProps": Object {
                                                          "CardItem": Object {
                                                            "removeBtnProps": Object {
                                                              "onClick": [Function],
                                                            },
                                                          },
                                                        },
                                                        "components": Object {
                                                          "CardItem": [Function],
                                                          "CardWithHeader": [Function],
                                                          "Color": [Function],
                                                          "Date": [Function],
                                                          "DateTime": [Function],
                                                          "Email": [Function],
                                                          "ListItemTemplate": [Function],
                                                          "ModalUniformedArrayCard": [Function],
                                                          "ModalUniformedArrayInline": [Function],
                                                          "ModalVariedArrayCard": [Function],
                                                          "ModalVariedArrayInline": [Function],
                                                          "Number": [Function],
                                                          "Password": [Function],
                                                          "SingleSelect": [Function],
                                                          "Text": [Function],
                                                          "TextArea": [Function],
                                                          "UniformedArrayCard": [Function],
                                                          "UniformedArrayInline": [Function],
                                                          "VariedArrayCard": [Function],
                                                          "VariedArrayInline": [Function],
                                                        },
                                                        "defaultComponents": undefined,
                                                        "definitions": Object {},
                                                        "prefix": "meta.vis",
                                                        "schema": Object {
                                                          "it": "Name",
                                                          "meta": Object {
                                                            "vis": Object {
                                                              "component": "Text",
                                                              "ordinal": 1,
                                                            },
                                                          },
                                                          "title": "Name",
                                                          "type": "string",
                                                        },
                                                      }
                                                    }
                                                    sheet={
                                                      StyleSheet {
                                                        "attached": true,
                                                        "classes": Object {},
                                                        "deployed": true,
                                                        "linked": false,
                                                        "options": Object {
                                                          "Renderer": [Function],
                                                          "classes": Object {},
                                                          "generateClassName": [Function],
                                                          "index": 0,
                                                          "insertionPoint": undefined,
                                                          "jss": Jss {
                                                            "generateClassName": [Function],
                                                            "options": Object {
                                                              "Renderer": [Function],
                                                              "createGenerateClassName": [Function],
                                                              "plugins": Array [
                                                                Object {
                                                                  "onCreateRule": [Function],
                                                                  "onProcessRule": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onChangeValue": [Function],
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onChangeValue": [Function],
                                                                  "onProcessRule": [Function],
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                              ],
                                                            },
                                                            "plugins": PluginsRegistry {
                                                              "hooks": Object {
                                                                "onChangeValue": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onCreateRule": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onProcessRule": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onProcessSheet": Array [],
                                                                "onProcessStyle": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                            },
                                                            "version": "8.1.0",
                                                          },
                                                          "parent": [Circular],
                                                          "sheet": [Circular],
                                                        },
                                                        "renderer": DomRenderer {
                                                          "element": <style
                                                            data-jss=""
                                                            type="text/css"
                                                          >
                                                            


                                                          </style>,
                                                          "getSelector": [Function],
                                                          "getStyle": [Function],
                                                          "hasInsertedRules": false,
                                                          "setSelector": [Function],
                                                          "setStyle": [Function],
                                                          "sheet": [Circular],
                                                        },
                                                        "rules": RuleList {
                                                          "classes": Object {},
                                                          "index": Array [],
                                                          "map": Object {},
                                                          "options": Object {
                                                            "Renderer": [Function],
                                                            "classes": Object {},
                                                            "generateClassName": [Function],
                                                            "index": 0,
                                                            "insertionPoint": undefined,
                                                            "jss": Jss {
                                                              "generateClassName": [Function],
                                                              "options": Object {
                                                                "Renderer": [Function],
                                                                "createGenerateClassName": [Function],
                                                                "plugins": Array [
                                                                  Object {
                                                                    "onCreateRule": [Function],
                                                                    "onProcessRule": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onChangeValue": [Function],
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onChangeValue": [Function],
                                                                    "onProcessRule": [Function],
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                ],
                                                              },
                                                              "plugins": PluginsRegistry {
                                                                "hooks": Object {
                                                                  "onChangeValue": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onCreateRule": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onProcessRule": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onProcessSheet": Array [],
                                                                  "onProcessStyle": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                              },
                                                              "version": "8.1.0",
                                                            },
                                                            "parent": [Circular],
                                                            "sheet": [Circular],
                                                          },
                                                          "raw": Object {},
                                                        },
                                                      }
                                                    }
                                                    styles={Object {}}
                                                    type="text"
                                                  >
                                                    <Field
                                                      className={undefined}
                                                      classes={Object {}}
                                                      component={[Function]}
                                                      id="schemaVis"
                                                      name="foobar[0].name"
                                                      required={false}
                                                      schemaVis={
                                                        Object {
                                                          "componentProps": Object {
                                                            "CardItem": Object {
                                                              "removeBtnProps": Object {
                                                                "onClick": [Function],
                                                              },
                                                            },
                                                          },
                                                          "components": Object {
                                                            "CardItem": [Function],
                                                            "CardWithHeader": [Function],
                                                            "Color": [Function],
                                                            "Date": [Function],
                                                            "DateTime": [Function],
                                                            "Email": [Function],
                                                            "ListItemTemplate": [Function],
                                                            "ModalUniformedArrayCard": [Function],
                                                            "ModalUniformedArrayInline": [Function],
                                                            "ModalVariedArrayCard": [Function],
                                                            "ModalVariedArrayInline": [Function],
                                                            "Number": [Function],
                                                            "Password": [Function],
                                                            "SingleSelect": [Function],
                                                            "Text": [Function],
                                                            "TextArea": [Function],
                                                            "UniformedArrayCard": [Function],
                                                            "UniformedArrayInline": [Function],
                                                            "VariedArrayCard": [Function],
                                                            "VariedArrayInline": [Function],
                                                          },
                                                          "defaultComponents": undefined,
                                                          "definitions": Object {},
                                                          "prefix": "meta.vis",
                                                          "schema": Object {
                                                            "it": "Name",
                                                            "meta": Object {
                                                              "vis": Object {
                                                                "component": "Text",
                                                                "ordinal": 1,
                                                              },
                                                            },
                                                            "title": "Name",
                                                            "type": "string",
                                                          },
                                                        }
                                                      }
                                                      sheet={
                                                        StyleSheet {
                                                          "attached": true,
                                                          "classes": Object {},
                                                          "deployed": true,
                                                          "linked": false,
                                                          "options": Object {
                                                            "Renderer": [Function],
                                                            "classes": Object {},
                                                            "generateClassName": [Function],
                                                            "index": 0,
                                                            "insertionPoint": undefined,
                                                            "jss": Jss {
                                                              "generateClassName": [Function],
                                                              "options": Object {
                                                                "Renderer": [Function],
                                                                "createGenerateClassName": [Function],
                                                                "plugins": Array [
                                                                  Object {
                                                                    "onCreateRule": [Function],
                                                                    "onProcessRule": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onChangeValue": [Function],
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onChangeValue": [Function],
                                                                    "onProcessRule": [Function],
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                ],
                                                              },
                                                              "plugins": PluginsRegistry {
                                                                "hooks": Object {
                                                                  "onChangeValue": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onCreateRule": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onProcessRule": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onProcessSheet": Array [],
                                                                  "onProcessStyle": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                              },
                                                              "version": "8.1.0",
                                                            },
                                                            "parent": [Circular],
                                                            "sheet": [Circular],
                                                          },
                                                          "renderer": DomRenderer {
                                                            "element": <style
                                                              data-jss=""
                                                              type="text/css"
                                                            >
                                                              


                                                            </style>,
                                                            "getSelector": [Function],
                                                            "getStyle": [Function],
                                                            "hasInsertedRules": false,
                                                            "setSelector": [Function],
                                                            "setStyle": [Function],
                                                            "sheet": [Circular],
                                                          },
                                                          "rules": RuleList {
                                                            "classes": Object {},
                                                            "index": Array [],
                                                            "map": Object {},
                                                            "options": Object {
                                                              "Renderer": [Function],
                                                              "classes": Object {},
                                                              "generateClassName": [Function],
                                                              "index": 0,
                                                              "insertionPoint": undefined,
                                                              "jss": Jss {
                                                                "generateClassName": [Function],
                                                                "options": Object {
                                                                  "Renderer": [Function],
                                                                  "createGenerateClassName": [Function],
                                                                  "plugins": Array [
                                                                    Object {
                                                                      "onCreateRule": [Function],
                                                                      "onProcessRule": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onChangeValue": [Function],
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onChangeValue": [Function],
                                                                      "onProcessRule": [Function],
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                  ],
                                                                },
                                                                "plugins": PluginsRegistry {
                                                                  "hooks": Object {
                                                                    "onChangeValue": Array [
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onCreateRule": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onProcessRule": Array [
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onProcessSheet": Array [],
                                                                    "onProcessStyle": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                  },
                                                                },
                                                                "version": "8.1.0",
                                                              },
                                                              "parent": [Circular],
                                                              "sheet": [Circular],
                                                            },
                                                            "raw": Object {},
                                                          },
                                                        }
                                                      }
                                                      styles={Object {}}
                                                      type="text"
                                                      validate={[Function]}
                                                    >
                                                      <Connect(ConnectedField)
                                                        _reduxForm={
                                                          Object {
                                                            "anyTouched": false,
                                                            "array": Object {
                                                              "insert": [Function],
                                                              "move": [Function],
                                                              "pop": [Function],
                                                              "push": [Function],
                                                              "remove": [Function],
                                                              "removeAll": [Function],
                                                              "shift": [Function],
                                                              "splice": [Function],
                                                              "swap": [Function],
                                                              "unshift": [Function],
                                                            },
                                                            "arrayInsert": [Function],
                                                            "arrayMove": [Function],
                                                            "arrayPop": [Function],
                                                            "arrayPush": [Function],
                                                            "arrayRemove": [Function],
                                                            "arrayRemoveAll": [Function],
                                                            "arrayShift": [Function],
                                                            "arraySplice": [Function],
                                                            "arraySwap": [Function],
                                                            "arrayUnshift": [Function],
                                                            "asyncErrors": undefined,
                                                            "asyncValidate": [Function],
                                                            "asyncValidating": false,
                                                            "autofill": [Function],
                                                            "blur": [Function],
                                                            "change": [Function],
                                                            "clearAsyncError": [Function],
                                                            "clearSubmit": [Function],
                                                            "clearSubmitErrors": [Function],
                                                            "destroy": [Function],
                                                            "destroyOnUnmount": true,
                                                            "dirty": true,
                                                            "dispatch": [Function],
                                                            "enableReinitialize": false,
                                                            "error": undefined,
                                                            "focus": [Function],
                                                            "forceUnregisterOnUnmount": false,
                                                            "form": "TestForm",
                                                            "getFormState": [Function],
                                                            "getValues": [Function],
                                                            "initialValues": undefined,
                                                            "initialize": [Function],
                                                            "initialized": false,
                                                            "invalid": false,
                                                            "keepDirtyOnReinitialize": false,
                                                            "name": "foobar",
                                                            "persistentSubmitErrors": false,
                                                            "pristine": false,
                                                            "pure": true,
                                                            "register": [Function],
                                                            "registerField": [Function],
                                                            "registerInnerOnSubmit": [Function],
                                                            "registeredFields": Object {
                                                              "foobar": Object {
                                                                "count": 1,
                                                                "name": "foobar",
                                                                "type": "FieldArray",
                                                              },
                                                            },
                                                            "reset": [Function],
                                                            "schemaVis": Object {
                                                              "components": Object {
                                                                "CardItem": [Function],
                                                                "CardWithHeader": [Function],
                                                                "Color": [Function],
                                                                "Date": [Function],
                                                                "DateTime": [Function],
                                                                "Email": [Function],
                                                                "ListItemTemplate": [Function],
                                                                "ModalUniformedArrayCard": [Function],
                                                                "ModalUniformedArrayInline": [Function],
                                                                "ModalVariedArrayCard": [Function],
                                                                "ModalVariedArrayInline": [Function],
                                                                "Number": [Function],
                                                                "Password": [Function],
                                                                "SingleSelect": [Function],
                                                                "Text": [Function],
                                                                "TextArea": [Function],
                                                                "UniformedArrayCard": [Function],
                                                                "UniformedArrayInline": [Function],
                                                                "VariedArrayCard": [Function],
                                                                "VariedArrayInline": [Function],
                                                              },
                                                              "prefix": "meta.vis",
                                                              "schema": Object {
                                                                "id": "VariedArrayCard",
                                                                "items": Object {
                                                                  "anyOf": Array [
                                                                    Object {
                                                                      "id": "Bar",
                                                                      "meta": Object {
                                                                        "vis": Object {
                                                                          "component": "CardItem",
                                                                          "ordinal": 1,
                                                                        },
                                                                      },
                                                                      "properties": Object {
                                                                        "bar": Object {
                                                                          "id": "Bar",
                                                                          "meta": Object {
                                                                            "vis": Object {
                                                                              "component": "Text",
                                                                              "ordinal": 2,
                                                                            },
                                                                          },
                                                                          "title": "Bar",
                                                                          "type": "string",
                                                                        },
                                                                        "name": Object {
                                                                          "it": "Name",
                                                                          "meta": Object {
                                                                            "vis": Object {
                                                                              "component": "Text",
                                                                              "ordinal": 1,
                                                                            },
                                                                          },
                                                                          "title": "Name",
                                                                          "type": "string",
                                                                        },
                                                                      },
                                                                      "title": "Bar",
                                                                      "type": "object",
                                                                    },
                                                                    Object {
                                                                      "id": "Baz",
                                                                      "meta": Object {
                                                                        "vis": Object {
                                                                          "component": "CardItem",
                                                                          "ordinal": 1,
                                                                        },
                                                                      },
                                                                      "properties": Object {
                                                                        "baz": Object {
                                                                          "id": "Baz",
                                                                          "meta": Object {
                                                                            "vis": Object {
                                                                              "component": "Number",
                                                                              "ordinal": 2,
                                                                            },
                                                                          },
                                                                          "title": "Baz",
                                                                          "type": "number",
                                                                        },
                                                                        "name": Object {
                                                                          "it": "Name",
                                                                          "meta": Object {
                                                                            "vis": Object {
                                                                              "component": "Text",
                                                                              "ordinal": 1,
                                                                            },
                                                                          },
                                                                          "title": "Name",
                                                                          "type": "string",
                                                                        },
                                                                      },
                                                                      "title": "Baz",
                                                                      "type": "object",
                                                                    },
                                                                  ],
                                                                },
                                                                "title": "Varied Array Card",
                                                                "type": "array",
                                                              },
                                                            },
                                                            "sectionPrefix": undefined,
                                                            "setSubmitFailed": [Function],
                                                            "setSubmitSucceeded": [Function],
                                                            "shouldAsyncValidate": [Function],
                                                            "shouldError": [Function],
                                                            "shouldValidate": [Function],
                                                            "shouldWarn": [Function],
                                                            "startAsyncValidation": [Function],
                                                            "startSubmit": [Function],
                                                            "stopAsyncValidation": [Function],
                                                            "stopSubmit": [Function],
                                                            "submit": [Function],
                                                            "submitFailed": false,
                                                            "submitSucceeded": false,
                                                            "submitting": false,
                                                            "syncErrors": Object {},
                                                            "syncWarnings": Object {},
                                                            "touch": [Function],
                                                            "touchOnBlur": true,
                                                            "touchOnChange": false,
                                                            "triggerSubmit": undefined,
                                                            "unregister": [Function],
                                                            "unregisterField": [Function],
                                                            "untouch": [Function],
                                                            "updateSyncErrors": [Function],
                                                            "updateSyncWarnings": [Function],
                                                            "valid": true,
                                                            "validExceptSubmit": true,
                                                            "values": Object {
                                                              "foobar": Array [
                                                                Object {},
                                                              ],
                                                            },
                                                            "warning": undefined,
                                                            "withRef": true,
                                                          }
                                                        }
                                                        className={undefined}
                                                        classes={Object {}}
                                                        component={[Function]}
                                                        id="schemaVis"
                                                        name="foobar[0].name"
                                                        normalize={[Function]}
                                                        required={false}
                                                        schemaVis={
                                                          Object {
                                                            "componentProps": Object {
                                                              "CardItem": Object {
                                                                "removeBtnProps": Object {
                                                                  "onClick": [Function],
                                                                },
                                                              },
                                                            },
                                                            "components": Object {
                                                              "CardItem": [Function],
                                                              "CardWithHeader": [Function],
                                                              "Color": [Function],
                                                              "Date": [Function],
                                                              "DateTime": [Function],
                                                              "Email": [Function],
                                                              "ListItemTemplate": [Function],
                                                              "ModalUniformedArrayCard": [Function],
                                                              "ModalUniformedArrayInline": [Function],
                                                              "ModalVariedArrayCard": [Function],
                                                              "ModalVariedArrayInline": [Function],
                                                              "Number": [Function],
                                                              "Password": [Function],
                                                              "SingleSelect": [Function],
                                                              "Text": [Function],
                                                              "TextArea": [Function],
                                                              "UniformedArrayCard": [Function],
                                                              "UniformedArrayInline": [Function],
                                                              "VariedArrayCard": [Function],
                                                              "VariedArrayInline": [Function],
                                                            },
                                                            "defaultComponents": undefined,
                                                            "definitions": Object {},
                                                            "prefix": "meta.vis",
                                                            "schema": Object {
                                                              "it": "Name",
                                                              "meta": Object {
                                                                "vis": Object {
                                                                  "component": "Text",
                                                                  "ordinal": 1,
                                                                },
                                                              },
                                                              "title": "Name",
                                                              "type": "string",
                                                            },
                                                          }
                                                        }
                                                        sheet={
                                                          StyleSheet {
                                                            "attached": true,
                                                            "classes": Object {},
                                                            "deployed": true,
                                                            "linked": false,
                                                            "options": Object {
                                                              "Renderer": [Function],
                                                              "classes": Object {},
                                                              "generateClassName": [Function],
                                                              "index": 0,
                                                              "insertionPoint": undefined,
                                                              "jss": Jss {
                                                                "generateClassName": [Function],
                                                                "options": Object {
                                                                  "Renderer": [Function],
                                                                  "createGenerateClassName": [Function],
                                                                  "plugins": Array [
                                                                    Object {
                                                                      "onCreateRule": [Function],
                                                                      "onProcessRule": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onChangeValue": [Function],
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onChangeValue": [Function],
                                                                      "onProcessRule": [Function],
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                  ],
                                                                },
                                                                "plugins": PluginsRegistry {
                                                                  "hooks": Object {
                                                                    "onChangeValue": Array [
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onCreateRule": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onProcessRule": Array [
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onProcessSheet": Array [],
                                                                    "onProcessStyle": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                  },
                                                                },
                                                                "version": "8.1.0",
                                                              },
                                                              "parent": [Circular],
                                                              "sheet": [Circular],
                                                            },
                                                            "renderer": DomRenderer {
                                                              "element": <style
                                                                data-jss=""
                                                                type="text/css"
                                                              >
                                                                


                                                              </style>,
                                                              "getSelector": [Function],
                                                              "getStyle": [Function],
                                                              "hasInsertedRules": false,
                                                              "setSelector": [Function],
                                                              "setStyle": [Function],
                                                              "sheet": [Circular],
                                                            },
                                                            "rules": RuleList {
                                                              "classes": Object {},
                                                              "index": Array [],
                                                              "map": Object {},
                                                              "options": Object {
                                                                "Renderer": [Function],
                                                                "classes": Object {},
                                                                "generateClassName": [Function],
                                                                "index": 0,
                                                                "insertionPoint": undefined,
                                                                "jss": Jss {
                                                                  "generateClassName": [Function],
                                                                  "options": Object {
                                                                    "Renderer": [Function],
                                                                    "createGenerateClassName": [Function],
                                                                    "plugins": Array [
                                                                      Object {
                                                                        "onCreateRule": [Function],
                                                                        "onProcessRule": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onChangeValue": [Function],
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onChangeValue": [Function],
                                                                        "onProcessRule": [Function],
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                    ],
                                                                  },
                                                                  "plugins": PluginsRegistry {
                                                                    "hooks": Object {
                                                                      "onChangeValue": Array [
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onCreateRule": Array [
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onProcessRule": Array [
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onProcessSheet": Array [],
                                                                      "onProcessStyle": Array [
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                    },
                                                                  },
                                                                  "version": "8.1.0",
                                                                },
                                                                "parent": [Circular],
                                                                "sheet": [Circular],
                                                              },
                                                              "raw": Object {},
                                                            },
                                                          }
                                                        }
                                                        styles={Object {}}
                                                        type="text"
                                                        validate={[Function]}
                                                      >
                                                        <ConnectedField
                                                          _reduxForm={
                                                            Object {
                                                              "anyTouched": false,
                                                              "array": Object {
                                                                "insert": [Function],
                                                                "move": [Function],
                                                                "pop": [Function],
                                                                "push": [Function],
                                                                "remove": [Function],
                                                                "removeAll": [Function],
                                                                "shift": [Function],
                                                                "splice": [Function],
                                                                "swap": [Function],
                                                                "unshift": [Function],
                                                              },
                                                              "arrayInsert": [Function],
                                                              "arrayMove": [Function],
                                                              "arrayPop": [Function],
                                                              "arrayPush": [Function],
                                                              "arrayRemove": [Function],
                                                              "arrayRemoveAll": [Function],
                                                              "arrayShift": [Function],
                                                              "arraySplice": [Function],
                                                              "arraySwap": [Function],
                                                              "arrayUnshift": [Function],
                                                              "asyncErrors": undefined,
                                                              "asyncValidate": [Function],
                                                              "asyncValidating": false,
                                                              "autofill": [Function],
                                                              "blur": [Function],
                                                              "change": [Function],
                                                              "clearAsyncError": [Function],
                                                              "clearSubmit": [Function],
                                                              "clearSubmitErrors": [Function],
                                                              "destroy": [Function],
                                                              "destroyOnUnmount": true,
                                                              "dirty": true,
                                                              "dispatch": [Function],
                                                              "enableReinitialize": false,
                                                              "error": undefined,
                                                              "focus": [Function],
                                                              "forceUnregisterOnUnmount": false,
                                                              "form": "TestForm",
                                                              "getFormState": [Function],
                                                              "getValues": [Function],
                                                              "initialValues": undefined,
                                                              "initialize": [Function],
                                                              "initialized": false,
                                                              "invalid": false,
                                                              "keepDirtyOnReinitialize": false,
                                                              "name": "foobar",
                                                              "persistentSubmitErrors": false,
                                                              "pristine": false,
                                                              "pure": true,
                                                              "register": [Function],
                                                              "registerField": [Function],
                                                              "registerInnerOnSubmit": [Function],
                                                              "registeredFields": Object {
                                                                "foobar": Object {
                                                                  "count": 1,
                                                                  "name": "foobar",
                                                                  "type": "FieldArray",
                                                                },
                                                              },
                                                              "reset": [Function],
                                                              "schemaVis": Object {
                                                                "components": Object {
                                                                  "CardItem": [Function],
                                                                  "CardWithHeader": [Function],
                                                                  "Color": [Function],
                                                                  "Date": [Function],
                                                                  "DateTime": [Function],
                                                                  "Email": [Function],
                                                                  "ListItemTemplate": [Function],
                                                                  "ModalUniformedArrayCard": [Function],
                                                                  "ModalUniformedArrayInline": [Function],
                                                                  "ModalVariedArrayCard": [Function],
                                                                  "ModalVariedArrayInline": [Function],
                                                                  "Number": [Function],
                                                                  "Password": [Function],
                                                                  "SingleSelect": [Function],
                                                                  "Text": [Function],
                                                                  "TextArea": [Function],
                                                                  "UniformedArrayCard": [Function],
                                                                  "UniformedArrayInline": [Function],
                                                                  "VariedArrayCard": [Function],
                                                                  "VariedArrayInline": [Function],
                                                                },
                                                                "prefix": "meta.vis",
                                                                "schema": Object {
                                                                  "id": "VariedArrayCard",
                                                                  "items": Object {
                                                                    "anyOf": Array [
                                                                      Object {
                                                                        "id": "Bar",
                                                                        "meta": Object {
                                                                          "vis": Object {
                                                                            "component": "CardItem",
                                                                            "ordinal": 1,
                                                                          },
                                                                        },
                                                                        "properties": Object {
                                                                          "bar": Object {
                                                                            "id": "Bar",
                                                                            "meta": Object {
                                                                              "vis": Object {
                                                                                "component": "Text",
                                                                                "ordinal": 2,
                                                                              },
                                                                            },
                                                                            "title": "Bar",
                                                                            "type": "string",
                                                                          },
                                                                          "name": Object {
                                                                            "it": "Name",
                                                                            "meta": Object {
                                                                              "vis": Object {
                                                                                "component": "Text",
                                                                                "ordinal": 1,
                                                                              },
                                                                            },
                                                                            "title": "Name",
                                                                            "type": "string",
                                                                          },
                                                                        },
                                                                        "title": "Bar",
                                                                        "type": "object",
                                                                      },
                                                                      Object {
                                                                        "id": "Baz",
                                                                        "meta": Object {
                                                                          "vis": Object {
                                                                            "component": "CardItem",
                                                                            "ordinal": 1,
                                                                          },
                                                                        },
                                                                        "properties": Object {
                                                                          "baz": Object {
                                                                            "id": "Baz",
                                                                            "meta": Object {
                                                                              "vis": Object {
                                                                                "component": "Number",
                                                                                "ordinal": 2,
                                                                              },
                                                                            },
                                                                            "title": "Baz",
                                                                            "type": "number",
                                                                          },
                                                                          "name": Object {
                                                                            "it": "Name",
                                                                            "meta": Object {
                                                                              "vis": Object {
                                                                                "component": "Text",
                                                                                "ordinal": 1,
                                                                              },
                                                                            },
                                                                            "title": "Name",
                                                                            "type": "string",
                                                                          },
                                                                        },
                                                                        "title": "Baz",
                                                                        "type": "object",
                                                                      },
                                                                    ],
                                                                  },
                                                                  "title": "Varied Array Card",
                                                                  "type": "array",
                                                                },
                                                              },
                                                              "sectionPrefix": undefined,
                                                              "setSubmitFailed": [Function],
                                                              "setSubmitSucceeded": [Function],
                                                              "shouldAsyncValidate": [Function],
                                                              "shouldError": [Function],
                                                              "shouldValidate": [Function],
                                                              "shouldWarn": [Function],
                                                              "startAsyncValidation": [Function],
                                                              "startSubmit": [Function],
                                                              "stopAsyncValidation": [Function],
                                                              "stopSubmit": [Function],
                                                              "submit": [Function],
                                                              "submitFailed": false,
                                                              "submitSucceeded": false,
                                                              "submitting": false,
                                                              "syncErrors": Object {},
                                                              "syncWarnings": Object {},
                                                              "touch": [Function],
                                                              "touchOnBlur": true,
                                                              "touchOnChange": false,
                                                              "triggerSubmit": undefined,
                                                              "unregister": [Function],
                                                              "unregisterField": [Function],
                                                              "untouch": [Function],
                                                              "updateSyncErrors": [Function],
                                                              "updateSyncWarnings": [Function],
                                                              "valid": true,
                                                              "validExceptSubmit": true,
                                                              "values": Object {
                                                                "foobar": Array [
                                                                  Object {},
                                                                ],
                                                              },
                                                              "warning": undefined,
                                                              "withRef": true,
                                                            }
                                                          }
                                                          _value={undefined}
                                                          asyncError={undefined}
                                                          asyncValidating={false}
                                                          className={undefined}
                                                          classes={Object {}}
                                                          component={[Function]}
                                                          dirty={false}
                                                          dispatch={[Function]}
                                                          id="schemaVis"
                                                          initial={undefined}
                                                          name="foobar[0].name"
                                                          normalize={[Function]}
                                                          pristine={true}
                                                          required={false}
                                                          schemaVis={
                                                            Object {
                                                              "componentProps": Object {
                                                                "CardItem": Object {
                                                                  "removeBtnProps": Object {
                                                                    "onClick": [Function],
                                                                  },
                                                                },
                                                              },
                                                              "components": Object {
                                                                "CardItem": [Function],
                                                                "CardWithHeader": [Function],
                                                                "Color": [Function],
                                                                "Date": [Function],
                                                                "DateTime": [Function],
                                                                "Email": [Function],
                                                                "ListItemTemplate": [Function],
                                                                "ModalUniformedArrayCard": [Function],
                                                                "ModalUniformedArrayInline": [Function],
                                                                "ModalVariedArrayCard": [Function],
                                                                "ModalVariedArrayInline": [Function],
                                                                "Number": [Function],
                                                                "Password": [Function],
                                                                "SingleSelect": [Function],
                                                                "Text": [Function],
                                                                "TextArea": [Function],
                                                                "UniformedArrayCard": [Function],
                                                                "UniformedArrayInline": [Function],
                                                                "VariedArrayCard": [Function],
                                                                "VariedArrayInline": [Function],
                                                              },
                                                              "defaultComponents": undefined,
                                                              "definitions": Object {},
                                                              "prefix": "meta.vis",
                                                              "schema": Object {
                                                                "it": "Name",
                                                                "meta": Object {
                                                                  "vis": Object {
                                                                    "component": "Text",
                                                                    "ordinal": 1,
                                                                  },
                                                                },
                                                                "title": "Name",
                                                                "type": "string",
                                                              },
                                                            }
                                                          }
                                                          sheet={
                                                            StyleSheet {
                                                              "attached": true,
                                                              "classes": Object {},
                                                              "deployed": true,
                                                              "linked": false,
                                                              "options": Object {
                                                                "Renderer": [Function],
                                                                "classes": Object {},
                                                                "generateClassName": [Function],
                                                                "index": 0,
                                                                "insertionPoint": undefined,
                                                                "jss": Jss {
                                                                  "generateClassName": [Function],
                                                                  "options": Object {
                                                                    "Renderer": [Function],
                                                                    "createGenerateClassName": [Function],
                                                                    "plugins": Array [
                                                                      Object {
                                                                        "onCreateRule": [Function],
                                                                        "onProcessRule": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onChangeValue": [Function],
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onChangeValue": [Function],
                                                                        "onProcessRule": [Function],
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                    ],
                                                                  },
                                                                  "plugins": PluginsRegistry {
                                                                    "hooks": Object {
                                                                      "onChangeValue": Array [
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onCreateRule": Array [
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onProcessRule": Array [
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onProcessSheet": Array [],
                                                                      "onProcessStyle": Array [
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                    },
                                                                  },
                                                                  "version": "8.1.0",
                                                                },
                                                                "parent": [Circular],
                                                                "sheet": [Circular],
                                                              },
                                                              "renderer": DomRenderer {
                                                                "element": <style
                                                                  data-jss=""
                                                                  type="text/css"
                                                                >
                                                                  


                                                                </style>,
                                                                "getSelector": [Function],
                                                                "getStyle": [Function],
                                                                "hasInsertedRules": false,
                                                                "setSelector": [Function],
                                                                "setStyle": [Function],
                                                                "sheet": [Circular],
                                                              },
                                                              "rules": RuleList {
                                                                "classes": Object {},
                                                                "index": Array [],
                                                                "map": Object {},
                                                                "options": Object {
                                                                  "Renderer": [Function],
                                                                  "classes": Object {},
                                                                  "generateClassName": [Function],
                                                                  "index": 0,
                                                                  "insertionPoint": undefined,
                                                                  "jss": Jss {
                                                                    "generateClassName": [Function],
                                                                    "options": Object {
                                                                      "Renderer": [Function],
                                                                      "createGenerateClassName": [Function],
                                                                      "plugins": Array [
                                                                        Object {
                                                                          "onCreateRule": [Function],
                                                                          "onProcessRule": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onChangeValue": [Function],
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onChangeValue": [Function],
                                                                          "onProcessRule": [Function],
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                      ],
                                                                    },
                                                                    "plugins": PluginsRegistry {
                                                                      "hooks": Object {
                                                                        "onChangeValue": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onCreateRule": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onProcessRule": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onProcessSheet": Array [],
                                                                        "onProcessStyle": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                    },
                                                                    "version": "8.1.0",
                                                                  },
                                                                  "parent": [Circular],
                                                                  "sheet": [Circular],
                                                                },
                                                                "raw": Object {},
                                                              },
                                                            }
                                                          }
                                                          state={undefined}
                                                          styles={Object {}}
                                                          submitError={undefined}
                                                          submitFailed={undefined}
                                                          submitting={undefined}
                                                          syncError={undefined}
                                                          syncWarning={undefined}
                                                          type="text"
                                                          validate={[Function]}
                                                          value={undefined}
                                                        >
                                                          <InputComponent
                                                            className={undefined}
                                                            classes={Object {}}
                                                            id="schemaVis"
                                                            input={
                                                              Object {
                                                                "name": "foobar[0].name",
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onDragStart": [Function],
                                                                "onDrop": [Function],
                                                                "onFocus": [Function],
                                                                "value": "",
                                                              }
                                                            }
                                                            meta={
                                                              Object {
                                                                "active": false,
                                                                "asyncValidating": false,
                                                                "autofilled": false,
                                                                "dirty": false,
                                                                "dispatch": [Function],
                                                                "error": undefined,
                                                                "form": "TestForm",
                                                                "initial": undefined,
                                                                "invalid": false,
                                                                "pristine": true,
                                                                "submitFailed": false,
                                                                "submitting": false,
                                                                "touched": false,
                                                                "valid": true,
                                                                "visited": false,
                                                                "warning": undefined,
                                                              }
                                                            }
                                                            required={false}
                                                            schemaVis={
                                                              Object {
                                                                "componentProps": Object {
                                                                  "CardItem": Object {
                                                                    "removeBtnProps": Object {
                                                                      "onClick": [Function],
                                                                    },
                                                                  },
                                                                },
                                                                "components": Object {
                                                                  "CardItem": [Function],
                                                                  "CardWithHeader": [Function],
                                                                  "Color": [Function],
                                                                  "Date": [Function],
                                                                  "DateTime": [Function],
                                                                  "Email": [Function],
                                                                  "ListItemTemplate": [Function],
                                                                  "ModalUniformedArrayCard": [Function],
                                                                  "ModalUniformedArrayInline": [Function],
                                                                  "ModalVariedArrayCard": [Function],
                                                                  "ModalVariedArrayInline": [Function],
                                                                  "Number": [Function],
                                                                  "Password": [Function],
                                                                  "SingleSelect": [Function],
                                                                  "Text": [Function],
                                                                  "TextArea": [Function],
                                                                  "UniformedArrayCard": [Function],
                                                                  "UniformedArrayInline": [Function],
                                                                  "VariedArrayCard": [Function],
                                                                  "VariedArrayInline": [Function],
                                                                },
                                                                "defaultComponents": undefined,
                                                                "definitions": Object {},
                                                                "prefix": "meta.vis",
                                                                "schema": Object {
                                                                  "it": "Name",
                                                                  "meta": Object {
                                                                    "vis": Object {
                                                                      "component": "Text",
                                                                      "ordinal": 1,
                                                                    },
                                                                  },
                                                                  "title": "Name",
                                                                  "type": "string",
                                                                },
                                                              }
                                                            }
                                                            sheet={
                                                              StyleSheet {
                                                                "attached": true,
                                                                "classes": Object {},
                                                                "deployed": true,
                                                                "linked": false,
                                                                "options": Object {
                                                                  "Renderer": [Function],
                                                                  "classes": Object {},
                                                                  "generateClassName": [Function],
                                                                  "index": 0,
                                                                  "insertionPoint": undefined,
                                                                  "jss": Jss {
                                                                    "generateClassName": [Function],
                                                                    "options": Object {
                                                                      "Renderer": [Function],
                                                                      "createGenerateClassName": [Function],
                                                                      "plugins": Array [
                                                                        Object {
                                                                          "onCreateRule": [Function],
                                                                          "onProcessRule": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onChangeValue": [Function],
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onChangeValue": [Function],
                                                                          "onProcessRule": [Function],
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                      ],
                                                                    },
                                                                    "plugins": PluginsRegistry {
                                                                      "hooks": Object {
                                                                        "onChangeValue": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onCreateRule": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onProcessRule": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onProcessSheet": Array [],
                                                                        "onProcessStyle": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                    },
                                                                    "version": "8.1.0",
                                                                  },
                                                                  "parent": [Circular],
                                                                  "sheet": [Circular],
                                                                },
                                                                "renderer": DomRenderer {
                                                                  "element": <style
                                                                    data-jss=""
                                                                    type="text/css"
                                                                  >
                                                                    


                                                                  </style>,
                                                                  "getSelector": [Function],
                                                                  "getStyle": [Function],
                                                                  "hasInsertedRules": false,
                                                                  "setSelector": [Function],
                                                                  "setStyle": [Function],
                                                                  "sheet": [Circular],
                                                                },
                                                                "rules": RuleList {
                                                                  "classes": Object {},
                                                                  "index": Array [],
                                                                  "map": Object {},
                                                                  "options": Object {
                                                                    "Renderer": [Function],
                                                                    "classes": Object {},
                                                                    "generateClassName": [Function],
                                                                    "index": 0,
                                                                    "insertionPoint": undefined,
                                                                    "jss": Jss {
                                                                      "generateClassName": [Function],
                                                                      "options": Object {
                                                                        "Renderer": [Function],
                                                                        "createGenerateClassName": [Function],
                                                                        "plugins": Array [
                                                                          Object {
                                                                            "onCreateRule": [Function],
                                                                            "onProcessRule": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onChangeValue": [Function],
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onChangeValue": [Function],
                                                                            "onProcessRule": [Function],
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                        ],
                                                                      },
                                                                      "plugins": PluginsRegistry {
                                                                        "hooks": Object {
                                                                          "onChangeValue": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onCreateRule": Array [
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onProcessRule": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onProcessSheet": Array [],
                                                                          "onProcessStyle": Array [
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                      },
                                                                      "version": "8.1.0",
                                                                    },
                                                                    "parent": [Circular],
                                                                    "sheet": [Circular],
                                                                  },
                                                                  "raw": Object {},
                                                                },
                                                              }
                                                            }
                                                            styles={Object {}}
                                                            type="text"
                                                          >
                                                            <FormField
                                                              className={undefined}
                                                              classes={Object {}}
                                                              id="schemaVis"
                                                              input={
                                                                Object {
                                                                  "name": "foobar[0].name",
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onDragStart": [Function],
                                                                  "onDrop": [Function],
                                                                  "onFocus": [Function],
                                                                  "value": "",
                                                                }
                                                              }
                                                              labelProps={Object {}}
                                                              meta={
                                                                Object {
                                                                  "active": false,
                                                                  "asyncValidating": false,
                                                                  "autofilled": false,
                                                                  "dirty": false,
                                                                  "dispatch": [Function],
                                                                  "error": undefined,
                                                                  "form": "TestForm",
                                                                  "initial": undefined,
                                                                  "invalid": false,
                                                                  "pristine": true,
                                                                  "submitFailed": false,
                                                                  "submitting": false,
                                                                  "touched": false,
                                                                  "valid": true,
                                                                  "visited": false,
                                                                  "warning": undefined,
                                                                }
                                                              }
                                                              required={false}
                                                              schema={
                                                                Object {
                                                                  "it": "Name",
                                                                  "meta": Object {
                                                                    "vis": Object {
                                                                      "component": "Text",
                                                                      "ordinal": 1,
                                                                    },
                                                                  },
                                                                  "title": "Name",
                                                                  "type": "string",
                                                                }
                                                              }
                                                              sheet={
                                                                StyleSheet {
                                                                  "attached": true,
                                                                  "classes": Object {},
                                                                  "deployed": true,
                                                                  "linked": false,
                                                                  "options": Object {
                                                                    "Renderer": [Function],
                                                                    "classes": Object {},
                                                                    "generateClassName": [Function],
                                                                    "index": 0,
                                                                    "insertionPoint": undefined,
                                                                    "jss": Jss {
                                                                      "generateClassName": [Function],
                                                                      "options": Object {
                                                                        "Renderer": [Function],
                                                                        "createGenerateClassName": [Function],
                                                                        "plugins": Array [
                                                                          Object {
                                                                            "onCreateRule": [Function],
                                                                            "onProcessRule": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onChangeValue": [Function],
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onChangeValue": [Function],
                                                                            "onProcessRule": [Function],
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                        ],
                                                                      },
                                                                      "plugins": PluginsRegistry {
                                                                        "hooks": Object {
                                                                          "onChangeValue": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onCreateRule": Array [
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onProcessRule": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onProcessSheet": Array [],
                                                                          "onProcessStyle": Array [
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                      },
                                                                      "version": "8.1.0",
                                                                    },
                                                                    "parent": [Circular],
                                                                    "sheet": [Circular],
                                                                  },
                                                                  "renderer": DomRenderer {
                                                                    "element": <style
                                                                      data-jss=""
                                                                      type="text/css"
                                                                    >
                                                                      


                                                                    </style>,
                                                                    "getSelector": [Function],
                                                                    "getStyle": [Function],
                                                                    "hasInsertedRules": false,
                                                                    "setSelector": [Function],
                                                                    "setStyle": [Function],
                                                                    "sheet": [Circular],
                                                                  },
                                                                  "rules": RuleList {
                                                                    "classes": Object {},
                                                                    "index": Array [],
                                                                    "map": Object {},
                                                                    "options": Object {
                                                                      "Renderer": [Function],
                                                                      "classes": Object {},
                                                                      "generateClassName": [Function],
                                                                      "index": 0,
                                                                      "insertionPoint": undefined,
                                                                      "jss": Jss {
                                                                        "generateClassName": [Function],
                                                                        "options": Object {
                                                                          "Renderer": [Function],
                                                                          "createGenerateClassName": [Function],
                                                                          "plugins": Array [
                                                                            Object {
                                                                              "onCreateRule": [Function],
                                                                              "onProcessRule": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onChangeValue": [Function],
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onChangeValue": [Function],
                                                                              "onProcessRule": [Function],
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                          ],
                                                                        },
                                                                        "plugins": PluginsRegistry {
                                                                          "hooks": Object {
                                                                            "onChangeValue": Array [
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                            "onCreateRule": Array [
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                            "onProcessRule": Array [
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                            "onProcessSheet": Array [],
                                                                            "onProcessStyle": Array [
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                        },
                                                                        "version": "8.1.0",
                                                                      },
                                                                      "parent": [Circular],
                                                                      "sheet": [Circular],
                                                                    },
                                                                    "raw": Object {},
                                                                  },
                                                                }
                                                              }
                                                              showFeedback={[Function]}
                                                              styles={Object {}}
                                                              tag={[Function]}
                                                              tooltipProps={Object {}}
                                                            >
                                                              <FormGroup
                                                                className={undefined}
                                                                id="schemaVis"
                                                                tag="div"
                                                              >
                                                                <div
                                                                  className="form-group"
                                                                  id="schemaVis"
                                                                >
                                                                  <Label
                                                                    className={undefined}
                                                                    for="foobar[0].name"
                                                                    id="foobar[0].name-label"
                                                                    tag="label"
                                                                    widths={
                                                                      Array [
                                                                        "xs",
                                                                        "sm",
                                                                        "md",
                                                                        "lg",
                                                                        "xl",
                                                                      ]
                                                                    }
                                                                  >
                                                                    <label
                                                                      className=" form-control-label"
                                                                      htmlFor="foobar[0].name"
                                                                      id="foobar[0].name-label"
                                                                    >
                                                                      Name
                                                                    </label>
                                                                  </Label>
                                                                  <Input
                                                                    className={undefined}
                                                                    id="foobar[0].name"
                                                                    key=".0"
                                                                    name="foobar[0].name"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onDrop={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    tag="p"
                                                                    type="text"
                                                                    valid={true}
                                                                    value=""
                                                                  >
                                                                    <input
                                                                      className="is-valid form-control"
                                                                      id="foobar[0].name"
                                                                      name="foobar[0].name"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onDrop={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={false}
                                                                      type="text"
                                                                      value=""
                                                                    />
                                                                  </Input>
                                                                  <FormFeedback
                                                                    className={undefined}
                                                                    id="foobar[0].name-feedback"
                                                                    tag="div"
                                                                  >
                                                                    <div
                                                                      className="invalid-feedback"
                                                                      id="foobar[0].name-feedback"
                                                                    />
                                                                  </FormFeedback>
                                                                </div>
                                                              </FormGroup>
                                                            </FormField>
                                                          </InputComponent>
                                                        </ConnectedField>
                                                      </Connect(ConnectedField)>
                                                    </Field>
                                                  </InputField>
                                                </CreatedInputField>
                                              </StyledComponent>
                                              <StyledComponent
                                                className={undefined}
                                                id="schemaVis"
                                                key="1"
                                                name="foobar[0].bar"
                                                required={false}
                                                schemaVis={
                                                  Object {
                                                    "componentProps": Object {
                                                      "CardItem": Object {
                                                        "removeBtnProps": Object {
                                                          "onClick": [Function],
                                                        },
                                                      },
                                                    },
                                                    "components": Object {
                                                      "CardItem": [Function],
                                                      "CardWithHeader": [Function],
                                                      "Color": [Function],
                                                      "Date": [Function],
                                                      "DateTime": [Function],
                                                      "Email": [Function],
                                                      "ListItemTemplate": [Function],
                                                      "ModalUniformedArrayCard": [Function],
                                                      "ModalUniformedArrayInline": [Function],
                                                      "ModalVariedArrayCard": [Function],
                                                      "ModalVariedArrayInline": [Function],
                                                      "Number": [Function],
                                                      "Password": [Function],
                                                      "SingleSelect": [Function],
                                                      "Text": [Function],
                                                      "TextArea": [Function],
                                                      "UniformedArrayCard": [Function],
                                                      "UniformedArrayInline": [Function],
                                                      "VariedArrayCard": [Function],
                                                      "VariedArrayInline": [Function],
                                                    },
                                                    "defaultComponents": undefined,
                                                    "definitions": Object {},
                                                    "prefix": "meta.vis",
                                                    "schema": Object {
                                                      "id": "Bar",
                                                      "meta": Object {
                                                        "vis": Object {
                                                          "component": "Text",
                                                          "ordinal": 2,
                                                        },
                                                      },
                                                      "title": "Bar",
                                                      "type": "string",
                                                    },
                                                  }
                                                }
                                                styles={Object {}}
                                              >
                                                <CreatedInputField
                                                  className={undefined}
                                                  classes={Object {}}
                                                  id="schemaVis"
                                                  name="foobar[0].bar"
                                                  required={false}
                                                  schemaVis={
                                                    Object {
                                                      "componentProps": Object {
                                                        "CardItem": Object {
                                                          "removeBtnProps": Object {
                                                            "onClick": [Function],
                                                          },
                                                        },
                                                      },
                                                      "components": Object {
                                                        "CardItem": [Function],
                                                        "CardWithHeader": [Function],
                                                        "Color": [Function],
                                                        "Date": [Function],
                                                        "DateTime": [Function],
                                                        "Email": [Function],
                                                        "ListItemTemplate": [Function],
                                                        "ModalUniformedArrayCard": [Function],
                                                        "ModalUniformedArrayInline": [Function],
                                                        "ModalVariedArrayCard": [Function],
                                                        "ModalVariedArrayInline": [Function],
                                                        "Number": [Function],
                                                        "Password": [Function],
                                                        "SingleSelect": [Function],
                                                        "Text": [Function],
                                                        "TextArea": [Function],
                                                        "UniformedArrayCard": [Function],
                                                        "UniformedArrayInline": [Function],
                                                        "VariedArrayCard": [Function],
                                                        "VariedArrayInline": [Function],
                                                      },
                                                      "defaultComponents": undefined,
                                                      "definitions": Object {},
                                                      "prefix": "meta.vis",
                                                      "schema": Object {
                                                        "id": "Bar",
                                                        "meta": Object {
                                                          "vis": Object {
                                                            "component": "Text",
                                                            "ordinal": 2,
                                                          },
                                                        },
                                                        "title": "Bar",
                                                        "type": "string",
                                                      },
                                                    }
                                                  }
                                                  sheet={
                                                    StyleSheet {
                                                      "attached": true,
                                                      "classes": Object {},
                                                      "deployed": true,
                                                      "linked": false,
                                                      "options": Object {
                                                        "Renderer": [Function],
                                                        "classes": Object {},
                                                        "generateClassName": [Function],
                                                        "index": 0,
                                                        "insertionPoint": undefined,
                                                        "jss": Jss {
                                                          "generateClassName": [Function],
                                                          "options": Object {
                                                            "Renderer": [Function],
                                                            "createGenerateClassName": [Function],
                                                            "plugins": Array [
                                                              Object {
                                                                "onCreateRule": [Function],
                                                                "onProcessRule": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onChangeValue": [Function],
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onChangeValue": [Function],
                                                                "onProcessRule": [Function],
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                            ],
                                                          },
                                                          "plugins": PluginsRegistry {
                                                            "hooks": Object {
                                                              "onChangeValue": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                              "onCreateRule": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                              "onProcessRule": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                              "onProcessSheet": Array [],
                                                              "onProcessStyle": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                          },
                                                          "version": "8.1.0",
                                                        },
                                                        "parent": [Circular],
                                                        "sheet": [Circular],
                                                      },
                                                      "renderer": DomRenderer {
                                                        "element": <style
                                                          data-jss=""
                                                          type="text/css"
                                                        >
                                                          


                                                        </style>,
                                                        "getSelector": [Function],
                                                        "getStyle": [Function],
                                                        "hasInsertedRules": false,
                                                        "setSelector": [Function],
                                                        "setStyle": [Function],
                                                        "sheet": [Circular],
                                                      },
                                                      "rules": RuleList {
                                                        "classes": Object {},
                                                        "index": Array [],
                                                        "map": Object {},
                                                        "options": Object {
                                                          "Renderer": [Function],
                                                          "classes": Object {},
                                                          "generateClassName": [Function],
                                                          "index": 0,
                                                          "insertionPoint": undefined,
                                                          "jss": Jss {
                                                            "generateClassName": [Function],
                                                            "options": Object {
                                                              "Renderer": [Function],
                                                              "createGenerateClassName": [Function],
                                                              "plugins": Array [
                                                                Object {
                                                                  "onCreateRule": [Function],
                                                                  "onProcessRule": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onChangeValue": [Function],
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onChangeValue": [Function],
                                                                  "onProcessRule": [Function],
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                              ],
                                                            },
                                                            "plugins": PluginsRegistry {
                                                              "hooks": Object {
                                                                "onChangeValue": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onCreateRule": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onProcessRule": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onProcessSheet": Array [],
                                                                "onProcessStyle": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                            },
                                                            "version": "8.1.0",
                                                          },
                                                          "parent": [Circular],
                                                          "sheet": [Circular],
                                                        },
                                                        "raw": Object {},
                                                      },
                                                    }
                                                  }
                                                  styles={Object {}}
                                                >
                                                  <InputField
                                                    className={undefined}
                                                    classes={Object {}}
                                                    component={[Function]}
                                                    id="schemaVis"
                                                    name="foobar[0].bar"
                                                    required={false}
                                                    schemaVis={
                                                      Object {
                                                        "componentProps": Object {
                                                          "CardItem": Object {
                                                            "removeBtnProps": Object {
                                                              "onClick": [Function],
                                                            },
                                                          },
                                                        },
                                                        "components": Object {
                                                          "CardItem": [Function],
                                                          "CardWithHeader": [Function],
                                                          "Color": [Function],
                                                          "Date": [Function],
                                                          "DateTime": [Function],
                                                          "Email": [Function],
                                                          "ListItemTemplate": [Function],
                                                          "ModalUniformedArrayCard": [Function],
                                                          "ModalUniformedArrayInline": [Function],
                                                          "ModalVariedArrayCard": [Function],
                                                          "ModalVariedArrayInline": [Function],
                                                          "Number": [Function],
                                                          "Password": [Function],
                                                          "SingleSelect": [Function],
                                                          "Text": [Function],
                                                          "TextArea": [Function],
                                                          "UniformedArrayCard": [Function],
                                                          "UniformedArrayInline": [Function],
                                                          "VariedArrayCard": [Function],
                                                          "VariedArrayInline": [Function],
                                                        },
                                                        "defaultComponents": undefined,
                                                        "definitions": Object {},
                                                        "prefix": "meta.vis",
                                                        "schema": Object {
                                                          "id": "Bar",
                                                          "meta": Object {
                                                            "vis": Object {
                                                              "component": "Text",
                                                              "ordinal": 2,
                                                            },
                                                          },
                                                          "title": "Bar",
                                                          "type": "string",
                                                        },
                                                      }
                                                    }
                                                    sheet={
                                                      StyleSheet {
                                                        "attached": true,
                                                        "classes": Object {},
                                                        "deployed": true,
                                                        "linked": false,
                                                        "options": Object {
                                                          "Renderer": [Function],
                                                          "classes": Object {},
                                                          "generateClassName": [Function],
                                                          "index": 0,
                                                          "insertionPoint": undefined,
                                                          "jss": Jss {
                                                            "generateClassName": [Function],
                                                            "options": Object {
                                                              "Renderer": [Function],
                                                              "createGenerateClassName": [Function],
                                                              "plugins": Array [
                                                                Object {
                                                                  "onCreateRule": [Function],
                                                                  "onProcessRule": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onChangeValue": [Function],
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onChangeValue": [Function],
                                                                  "onProcessRule": [Function],
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                              ],
                                                            },
                                                            "plugins": PluginsRegistry {
                                                              "hooks": Object {
                                                                "onChangeValue": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onCreateRule": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onProcessRule": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onProcessSheet": Array [],
                                                                "onProcessStyle": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                            },
                                                            "version": "8.1.0",
                                                          },
                                                          "parent": [Circular],
                                                          "sheet": [Circular],
                                                        },
                                                        "renderer": DomRenderer {
                                                          "element": <style
                                                            data-jss=""
                                                            type="text/css"
                                                          >
                                                            


                                                          </style>,
                                                          "getSelector": [Function],
                                                          "getStyle": [Function],
                                                          "hasInsertedRules": false,
                                                          "setSelector": [Function],
                                                          "setStyle": [Function],
                                                          "sheet": [Circular],
                                                        },
                                                        "rules": RuleList {
                                                          "classes": Object {},
                                                          "index": Array [],
                                                          "map": Object {},
                                                          "options": Object {
                                                            "Renderer": [Function],
                                                            "classes": Object {},
                                                            "generateClassName": [Function],
                                                            "index": 0,
                                                            "insertionPoint": undefined,
                                                            "jss": Jss {
                                                              "generateClassName": [Function],
                                                              "options": Object {
                                                                "Renderer": [Function],
                                                                "createGenerateClassName": [Function],
                                                                "plugins": Array [
                                                                  Object {
                                                                    "onCreateRule": [Function],
                                                                    "onProcessRule": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onChangeValue": [Function],
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onChangeValue": [Function],
                                                                    "onProcessRule": [Function],
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                ],
                                                              },
                                                              "plugins": PluginsRegistry {
                                                                "hooks": Object {
                                                                  "onChangeValue": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onCreateRule": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onProcessRule": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onProcessSheet": Array [],
                                                                  "onProcessStyle": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                              },
                                                              "version": "8.1.0",
                                                            },
                                                            "parent": [Circular],
                                                            "sheet": [Circular],
                                                          },
                                                          "raw": Object {},
                                                        },
                                                      }
                                                    }
                                                    styles={Object {}}
                                                    type="text"
                                                  >
                                                    <Field
                                                      className={undefined}
                                                      classes={Object {}}
                                                      component={[Function]}
                                                      id="schemaVis"
                                                      name="foobar[0].bar"
                                                      required={false}
                                                      schemaVis={
                                                        Object {
                                                          "componentProps": Object {
                                                            "CardItem": Object {
                                                              "removeBtnProps": Object {
                                                                "onClick": [Function],
                                                              },
                                                            },
                                                          },
                                                          "components": Object {
                                                            "CardItem": [Function],
                                                            "CardWithHeader": [Function],
                                                            "Color": [Function],
                                                            "Date": [Function],
                                                            "DateTime": [Function],
                                                            "Email": [Function],
                                                            "ListItemTemplate": [Function],
                                                            "ModalUniformedArrayCard": [Function],
                                                            "ModalUniformedArrayInline": [Function],
                                                            "ModalVariedArrayCard": [Function],
                                                            "ModalVariedArrayInline": [Function],
                                                            "Number": [Function],
                                                            "Password": [Function],
                                                            "SingleSelect": [Function],
                                                            "Text": [Function],
                                                            "TextArea": [Function],
                                                            "UniformedArrayCard": [Function],
                                                            "UniformedArrayInline": [Function],
                                                            "VariedArrayCard": [Function],
                                                            "VariedArrayInline": [Function],
                                                          },
                                                          "defaultComponents": undefined,
                                                          "definitions": Object {},
                                                          "prefix": "meta.vis",
                                                          "schema": Object {
                                                            "id": "Bar",
                                                            "meta": Object {
                                                              "vis": Object {
                                                                "component": "Text",
                                                                "ordinal": 2,
                                                              },
                                                            },
                                                            "title": "Bar",
                                                            "type": "string",
                                                          },
                                                        }
                                                      }
                                                      sheet={
                                                        StyleSheet {
                                                          "attached": true,
                                                          "classes": Object {},
                                                          "deployed": true,
                                                          "linked": false,
                                                          "options": Object {
                                                            "Renderer": [Function],
                                                            "classes": Object {},
                                                            "generateClassName": [Function],
                                                            "index": 0,
                                                            "insertionPoint": undefined,
                                                            "jss": Jss {
                                                              "generateClassName": [Function],
                                                              "options": Object {
                                                                "Renderer": [Function],
                                                                "createGenerateClassName": [Function],
                                                                "plugins": Array [
                                                                  Object {
                                                                    "onCreateRule": [Function],
                                                                    "onProcessRule": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onChangeValue": [Function],
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onChangeValue": [Function],
                                                                    "onProcessRule": [Function],
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                ],
                                                              },
                                                              "plugins": PluginsRegistry {
                                                                "hooks": Object {
                                                                  "onChangeValue": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onCreateRule": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onProcessRule": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onProcessSheet": Array [],
                                                                  "onProcessStyle": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                              },
                                                              "version": "8.1.0",
                                                            },
                                                            "parent": [Circular],
                                                            "sheet": [Circular],
                                                          },
                                                          "renderer": DomRenderer {
                                                            "element": <style
                                                              data-jss=""
                                                              type="text/css"
                                                            >
                                                              


                                                            </style>,
                                                            "getSelector": [Function],
                                                            "getStyle": [Function],
                                                            "hasInsertedRules": false,
                                                            "setSelector": [Function],
                                                            "setStyle": [Function],
                                                            "sheet": [Circular],
                                                          },
                                                          "rules": RuleList {
                                                            "classes": Object {},
                                                            "index": Array [],
                                                            "map": Object {},
                                                            "options": Object {
                                                              "Renderer": [Function],
                                                              "classes": Object {},
                                                              "generateClassName": [Function],
                                                              "index": 0,
                                                              "insertionPoint": undefined,
                                                              "jss": Jss {
                                                                "generateClassName": [Function],
                                                                "options": Object {
                                                                  "Renderer": [Function],
                                                                  "createGenerateClassName": [Function],
                                                                  "plugins": Array [
                                                                    Object {
                                                                      "onCreateRule": [Function],
                                                                      "onProcessRule": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onChangeValue": [Function],
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onChangeValue": [Function],
                                                                      "onProcessRule": [Function],
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                  ],
                                                                },
                                                                "plugins": PluginsRegistry {
                                                                  "hooks": Object {
                                                                    "onChangeValue": Array [
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onCreateRule": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onProcessRule": Array [
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onProcessSheet": Array [],
                                                                    "onProcessStyle": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                  },
                                                                },
                                                                "version": "8.1.0",
                                                              },
                                                              "parent": [Circular],
                                                              "sheet": [Circular],
                                                            },
                                                            "raw": Object {},
                                                          },
                                                        }
                                                      }
                                                      styles={Object {}}
                                                      type="text"
                                                      validate={[Function]}
                                                    >
                                                      <Connect(ConnectedField)
                                                        _reduxForm={
                                                          Object {
                                                            "anyTouched": false,
                                                            "array": Object {
                                                              "insert": [Function],
                                                              "move": [Function],
                                                              "pop": [Function],
                                                              "push": [Function],
                                                              "remove": [Function],
                                                              "removeAll": [Function],
                                                              "shift": [Function],
                                                              "splice": [Function],
                                                              "swap": [Function],
                                                              "unshift": [Function],
                                                            },
                                                            "arrayInsert": [Function],
                                                            "arrayMove": [Function],
                                                            "arrayPop": [Function],
                                                            "arrayPush": [Function],
                                                            "arrayRemove": [Function],
                                                            "arrayRemoveAll": [Function],
                                                            "arrayShift": [Function],
                                                            "arraySplice": [Function],
                                                            "arraySwap": [Function],
                                                            "arrayUnshift": [Function],
                                                            "asyncErrors": undefined,
                                                            "asyncValidate": [Function],
                                                            "asyncValidating": false,
                                                            "autofill": [Function],
                                                            "blur": [Function],
                                                            "change": [Function],
                                                            "clearAsyncError": [Function],
                                                            "clearSubmit": [Function],
                                                            "clearSubmitErrors": [Function],
                                                            "destroy": [Function],
                                                            "destroyOnUnmount": true,
                                                            "dirty": true,
                                                            "dispatch": [Function],
                                                            "enableReinitialize": false,
                                                            "error": undefined,
                                                            "focus": [Function],
                                                            "forceUnregisterOnUnmount": false,
                                                            "form": "TestForm",
                                                            "getFormState": [Function],
                                                            "getValues": [Function],
                                                            "initialValues": undefined,
                                                            "initialize": [Function],
                                                            "initialized": false,
                                                            "invalid": false,
                                                            "keepDirtyOnReinitialize": false,
                                                            "name": "foobar",
                                                            "persistentSubmitErrors": false,
                                                            "pristine": false,
                                                            "pure": true,
                                                            "register": [Function],
                                                            "registerField": [Function],
                                                            "registerInnerOnSubmit": [Function],
                                                            "registeredFields": Object {
                                                              "foobar": Object {
                                                                "count": 1,
                                                                "name": "foobar",
                                                                "type": "FieldArray",
                                                              },
                                                            },
                                                            "reset": [Function],
                                                            "schemaVis": Object {
                                                              "components": Object {
                                                                "CardItem": [Function],
                                                                "CardWithHeader": [Function],
                                                                "Color": [Function],
                                                                "Date": [Function],
                                                                "DateTime": [Function],
                                                                "Email": [Function],
                                                                "ListItemTemplate": [Function],
                                                                "ModalUniformedArrayCard": [Function],
                                                                "ModalUniformedArrayInline": [Function],
                                                                "ModalVariedArrayCard": [Function],
                                                                "ModalVariedArrayInline": [Function],
                                                                "Number": [Function],
                                                                "Password": [Function],
                                                                "SingleSelect": [Function],
                                                                "Text": [Function],
                                                                "TextArea": [Function],
                                                                "UniformedArrayCard": [Function],
                                                                "UniformedArrayInline": [Function],
                                                                "VariedArrayCard": [Function],
                                                                "VariedArrayInline": [Function],
                                                              },
                                                              "prefix": "meta.vis",
                                                              "schema": Object {
                                                                "id": "VariedArrayCard",
                                                                "items": Object {
                                                                  "anyOf": Array [
                                                                    Object {
                                                                      "id": "Bar",
                                                                      "meta": Object {
                                                                        "vis": Object {
                                                                          "component": "CardItem",
                                                                          "ordinal": 1,
                                                                        },
                                                                      },
                                                                      "properties": Object {
                                                                        "bar": Object {
                                                                          "id": "Bar",
                                                                          "meta": Object {
                                                                            "vis": Object {
                                                                              "component": "Text",
                                                                              "ordinal": 2,
                                                                            },
                                                                          },
                                                                          "title": "Bar",
                                                                          "type": "string",
                                                                        },
                                                                        "name": Object {
                                                                          "it": "Name",
                                                                          "meta": Object {
                                                                            "vis": Object {
                                                                              "component": "Text",
                                                                              "ordinal": 1,
                                                                            },
                                                                          },
                                                                          "title": "Name",
                                                                          "type": "string",
                                                                        },
                                                                      },
                                                                      "title": "Bar",
                                                                      "type": "object",
                                                                    },
                                                                    Object {
                                                                      "id": "Baz",
                                                                      "meta": Object {
                                                                        "vis": Object {
                                                                          "component": "CardItem",
                                                                          "ordinal": 1,
                                                                        },
                                                                      },
                                                                      "properties": Object {
                                                                        "baz": Object {
                                                                          "id": "Baz",
                                                                          "meta": Object {
                                                                            "vis": Object {
                                                                              "component": "Number",
                                                                              "ordinal": 2,
                                                                            },
                                                                          },
                                                                          "title": "Baz",
                                                                          "type": "number",
                                                                        },
                                                                        "name": Object {
                                                                          "it": "Name",
                                                                          "meta": Object {
                                                                            "vis": Object {
                                                                              "component": "Text",
                                                                              "ordinal": 1,
                                                                            },
                                                                          },
                                                                          "title": "Name",
                                                                          "type": "string",
                                                                        },
                                                                      },
                                                                      "title": "Baz",
                                                                      "type": "object",
                                                                    },
                                                                  ],
                                                                },
                                                                "title": "Varied Array Card",
                                                                "type": "array",
                                                              },
                                                            },
                                                            "sectionPrefix": undefined,
                                                            "setSubmitFailed": [Function],
                                                            "setSubmitSucceeded": [Function],
                                                            "shouldAsyncValidate": [Function],
                                                            "shouldError": [Function],
                                                            "shouldValidate": [Function],
                                                            "shouldWarn": [Function],
                                                            "startAsyncValidation": [Function],
                                                            "startSubmit": [Function],
                                                            "stopAsyncValidation": [Function],
                                                            "stopSubmit": [Function],
                                                            "submit": [Function],
                                                            "submitFailed": false,
                                                            "submitSucceeded": false,
                                                            "submitting": false,
                                                            "syncErrors": Object {},
                                                            "syncWarnings": Object {},
                                                            "touch": [Function],
                                                            "touchOnBlur": true,
                                                            "touchOnChange": false,
                                                            "triggerSubmit": undefined,
                                                            "unregister": [Function],
                                                            "unregisterField": [Function],
                                                            "untouch": [Function],
                                                            "updateSyncErrors": [Function],
                                                            "updateSyncWarnings": [Function],
                                                            "valid": true,
                                                            "validExceptSubmit": true,
                                                            "values": Object {
                                                              "foobar": Array [
                                                                Object {},
                                                              ],
                                                            },
                                                            "warning": undefined,
                                                            "withRef": true,
                                                          }
                                                        }
                                                        className={undefined}
                                                        classes={Object {}}
                                                        component={[Function]}
                                                        id="schemaVis"
                                                        name="foobar[0].bar"
                                                        normalize={[Function]}
                                                        required={false}
                                                        schemaVis={
                                                          Object {
                                                            "componentProps": Object {
                                                              "CardItem": Object {
                                                                "removeBtnProps": Object {
                                                                  "onClick": [Function],
                                                                },
                                                              },
                                                            },
                                                            "components": Object {
                                                              "CardItem": [Function],
                                                              "CardWithHeader": [Function],
                                                              "Color": [Function],
                                                              "Date": [Function],
                                                              "DateTime": [Function],
                                                              "Email": [Function],
                                                              "ListItemTemplate": [Function],
                                                              "ModalUniformedArrayCard": [Function],
                                                              "ModalUniformedArrayInline": [Function],
                                                              "ModalVariedArrayCard": [Function],
                                                              "ModalVariedArrayInline": [Function],
                                                              "Number": [Function],
                                                              "Password": [Function],
                                                              "SingleSelect": [Function],
                                                              "Text": [Function],
                                                              "TextArea": [Function],
                                                              "UniformedArrayCard": [Function],
                                                              "UniformedArrayInline": [Function],
                                                              "VariedArrayCard": [Function],
                                                              "VariedArrayInline": [Function],
                                                            },
                                                            "defaultComponents": undefined,
                                                            "definitions": Object {},
                                                            "prefix": "meta.vis",
                                                            "schema": Object {
                                                              "id": "Bar",
                                                              "meta": Object {
                                                                "vis": Object {
                                                                  "component": "Text",
                                                                  "ordinal": 2,
                                                                },
                                                              },
                                                              "title": "Bar",
                                                              "type": "string",
                                                            },
                                                          }
                                                        }
                                                        sheet={
                                                          StyleSheet {
                                                            "attached": true,
                                                            "classes": Object {},
                                                            "deployed": true,
                                                            "linked": false,
                                                            "options": Object {
                                                              "Renderer": [Function],
                                                              "classes": Object {},
                                                              "generateClassName": [Function],
                                                              "index": 0,
                                                              "insertionPoint": undefined,
                                                              "jss": Jss {
                                                                "generateClassName": [Function],
                                                                "options": Object {
                                                                  "Renderer": [Function],
                                                                  "createGenerateClassName": [Function],
                                                                  "plugins": Array [
                                                                    Object {
                                                                      "onCreateRule": [Function],
                                                                      "onProcessRule": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onChangeValue": [Function],
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onChangeValue": [Function],
                                                                      "onProcessRule": [Function],
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                  ],
                                                                },
                                                                "plugins": PluginsRegistry {
                                                                  "hooks": Object {
                                                                    "onChangeValue": Array [
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onCreateRule": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onProcessRule": Array [
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onProcessSheet": Array [],
                                                                    "onProcessStyle": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                  },
                                                                },
                                                                "version": "8.1.0",
                                                              },
                                                              "parent": [Circular],
                                                              "sheet": [Circular],
                                                            },
                                                            "renderer": DomRenderer {
                                                              "element": <style
                                                                data-jss=""
                                                                type="text/css"
                                                              >
                                                                


                                                              </style>,
                                                              "getSelector": [Function],
                                                              "getStyle": [Function],
                                                              "hasInsertedRules": false,
                                                              "setSelector": [Function],
                                                              "setStyle": [Function],
                                                              "sheet": [Circular],
                                                            },
                                                            "rules": RuleList {
                                                              "classes": Object {},
                                                              "index": Array [],
                                                              "map": Object {},
                                                              "options": Object {
                                                                "Renderer": [Function],
                                                                "classes": Object {},
                                                                "generateClassName": [Function],
                                                                "index": 0,
                                                                "insertionPoint": undefined,
                                                                "jss": Jss {
                                                                  "generateClassName": [Function],
                                                                  "options": Object {
                                                                    "Renderer": [Function],
                                                                    "createGenerateClassName": [Function],
                                                                    "plugins": Array [
                                                                      Object {
                                                                        "onCreateRule": [Function],
                                                                        "onProcessRule": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onChangeValue": [Function],
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onChangeValue": [Function],
                                                                        "onProcessRule": [Function],
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                    ],
                                                                  },
                                                                  "plugins": PluginsRegistry {
                                                                    "hooks": Object {
                                                                      "onChangeValue": Array [
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onCreateRule": Array [
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onProcessRule": Array [
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onProcessSheet": Array [],
                                                                      "onProcessStyle": Array [
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                    },
                                                                  },
                                                                  "version": "8.1.0",
                                                                },
                                                                "parent": [Circular],
                                                                "sheet": [Circular],
                                                              },
                                                              "raw": Object {},
                                                            },
                                                          }
                                                        }
                                                        styles={Object {}}
                                                        type="text"
                                                        validate={[Function]}
                                                      >
                                                        <ConnectedField
                                                          _reduxForm={
                                                            Object {
                                                              "anyTouched": false,
                                                              "array": Object {
                                                                "insert": [Function],
                                                                "move": [Function],
                                                                "pop": [Function],
                                                                "push": [Function],
                                                                "remove": [Function],
                                                                "removeAll": [Function],
                                                                "shift": [Function],
                                                                "splice": [Function],
                                                                "swap": [Function],
                                                                "unshift": [Function],
                                                              },
                                                              "arrayInsert": [Function],
                                                              "arrayMove": [Function],
                                                              "arrayPop": [Function],
                                                              "arrayPush": [Function],
                                                              "arrayRemove": [Function],
                                                              "arrayRemoveAll": [Function],
                                                              "arrayShift": [Function],
                                                              "arraySplice": [Function],
                                                              "arraySwap": [Function],
                                                              "arrayUnshift": [Function],
                                                              "asyncErrors": undefined,
                                                              "asyncValidate": [Function],
                                                              "asyncValidating": false,
                                                              "autofill": [Function],
                                                              "blur": [Function],
                                                              "change": [Function],
                                                              "clearAsyncError": [Function],
                                                              "clearSubmit": [Function],
                                                              "clearSubmitErrors": [Function],
                                                              "destroy": [Function],
                                                              "destroyOnUnmount": true,
                                                              "dirty": true,
                                                              "dispatch": [Function],
                                                              "enableReinitialize": false,
                                                              "error": undefined,
                                                              "focus": [Function],
                                                              "forceUnregisterOnUnmount": false,
                                                              "form": "TestForm",
                                                              "getFormState": [Function],
                                                              "getValues": [Function],
                                                              "initialValues": undefined,
                                                              "initialize": [Function],
                                                              "initialized": false,
                                                              "invalid": false,
                                                              "keepDirtyOnReinitialize": false,
                                                              "name": "foobar",
                                                              "persistentSubmitErrors": false,
                                                              "pristine": false,
                                                              "pure": true,
                                                              "register": [Function],
                                                              "registerField": [Function],
                                                              "registerInnerOnSubmit": [Function],
                                                              "registeredFields": Object {
                                                                "foobar": Object {
                                                                  "count": 1,
                                                                  "name": "foobar",
                                                                  "type": "FieldArray",
                                                                },
                                                              },
                                                              "reset": [Function],
                                                              "schemaVis": Object {
                                                                "components": Object {
                                                                  "CardItem": [Function],
                                                                  "CardWithHeader": [Function],
                                                                  "Color": [Function],
                                                                  "Date": [Function],
                                                                  "DateTime": [Function],
                                                                  "Email": [Function],
                                                                  "ListItemTemplate": [Function],
                                                                  "ModalUniformedArrayCard": [Function],
                                                                  "ModalUniformedArrayInline": [Function],
                                                                  "ModalVariedArrayCard": [Function],
                                                                  "ModalVariedArrayInline": [Function],
                                                                  "Number": [Function],
                                                                  "Password": [Function],
                                                                  "SingleSelect": [Function],
                                                                  "Text": [Function],
                                                                  "TextArea": [Function],
                                                                  "UniformedArrayCard": [Function],
                                                                  "UniformedArrayInline": [Function],
                                                                  "VariedArrayCard": [Function],
                                                                  "VariedArrayInline": [Function],
                                                                },
                                                                "prefix": "meta.vis",
                                                                "schema": Object {
                                                                  "id": "VariedArrayCard",
                                                                  "items": Object {
                                                                    "anyOf": Array [
                                                                      Object {
                                                                        "id": "Bar",
                                                                        "meta": Object {
                                                                          "vis": Object {
                                                                            "component": "CardItem",
                                                                            "ordinal": 1,
                                                                          },
                                                                        },
                                                                        "properties": Object {
                                                                          "bar": Object {
                                                                            "id": "Bar",
                                                                            "meta": Object {
                                                                              "vis": Object {
                                                                                "component": "Text",
                                                                                "ordinal": 2,
                                                                              },
                                                                            },
                                                                            "title": "Bar",
                                                                            "type": "string",
                                                                          },
                                                                          "name": Object {
                                                                            "it": "Name",
                                                                            "meta": Object {
                                                                              "vis": Object {
                                                                                "component": "Text",
                                                                                "ordinal": 1,
                                                                              },
                                                                            },
                                                                            "title": "Name",
                                                                            "type": "string",
                                                                          },
                                                                        },
                                                                        "title": "Bar",
                                                                        "type": "object",
                                                                      },
                                                                      Object {
                                                                        "id": "Baz",
                                                                        "meta": Object {
                                                                          "vis": Object {
                                                                            "component": "CardItem",
                                                                            "ordinal": 1,
                                                                          },
                                                                        },
                                                                        "properties": Object {
                                                                          "baz": Object {
                                                                            "id": "Baz",
                                                                            "meta": Object {
                                                                              "vis": Object {
                                                                                "component": "Number",
                                                                                "ordinal": 2,
                                                                              },
                                                                            },
                                                                            "title": "Baz",
                                                                            "type": "number",
                                                                          },
                                                                          "name": Object {
                                                                            "it": "Name",
                                                                            "meta": Object {
                                                                              "vis": Object {
                                                                                "component": "Text",
                                                                                "ordinal": 1,
                                                                              },
                                                                            },
                                                                            "title": "Name",
                                                                            "type": "string",
                                                                          },
                                                                        },
                                                                        "title": "Baz",
                                                                        "type": "object",
                                                                      },
                                                                    ],
                                                                  },
                                                                  "title": "Varied Array Card",
                                                                  "type": "array",
                                                                },
                                                              },
                                                              "sectionPrefix": undefined,
                                                              "setSubmitFailed": [Function],
                                                              "setSubmitSucceeded": [Function],
                                                              "shouldAsyncValidate": [Function],
                                                              "shouldError": [Function],
                                                              "shouldValidate": [Function],
                                                              "shouldWarn": [Function],
                                                              "startAsyncValidation": [Function],
                                                              "startSubmit": [Function],
                                                              "stopAsyncValidation": [Function],
                                                              "stopSubmit": [Function],
                                                              "submit": [Function],
                                                              "submitFailed": false,
                                                              "submitSucceeded": false,
                                                              "submitting": false,
                                                              "syncErrors": Object {},
                                                              "syncWarnings": Object {},
                                                              "touch": [Function],
                                                              "touchOnBlur": true,
                                                              "touchOnChange": false,
                                                              "triggerSubmit": undefined,
                                                              "unregister": [Function],
                                                              "unregisterField": [Function],
                                                              "untouch": [Function],
                                                              "updateSyncErrors": [Function],
                                                              "updateSyncWarnings": [Function],
                                                              "valid": true,
                                                              "validExceptSubmit": true,
                                                              "values": Object {
                                                                "foobar": Array [
                                                                  Object {},
                                                                ],
                                                              },
                                                              "warning": undefined,
                                                              "withRef": true,
                                                            }
                                                          }
                                                          _value={undefined}
                                                          asyncError={undefined}
                                                          asyncValidating={false}
                                                          className={undefined}
                                                          classes={Object {}}
                                                          component={[Function]}
                                                          dirty={false}
                                                          dispatch={[Function]}
                                                          id="schemaVis"
                                                          initial={undefined}
                                                          name="foobar[0].bar"
                                                          normalize={[Function]}
                                                          pristine={true}
                                                          required={false}
                                                          schemaVis={
                                                            Object {
                                                              "componentProps": Object {
                                                                "CardItem": Object {
                                                                  "removeBtnProps": Object {
                                                                    "onClick": [Function],
                                                                  },
                                                                },
                                                              },
                                                              "components": Object {
                                                                "CardItem": [Function],
                                                                "CardWithHeader": [Function],
                                                                "Color": [Function],
                                                                "Date": [Function],
                                                                "DateTime": [Function],
                                                                "Email": [Function],
                                                                "ListItemTemplate": [Function],
                                                                "ModalUniformedArrayCard": [Function],
                                                                "ModalUniformedArrayInline": [Function],
                                                                "ModalVariedArrayCard": [Function],
                                                                "ModalVariedArrayInline": [Function],
                                                                "Number": [Function],
                                                                "Password": [Function],
                                                                "SingleSelect": [Function],
                                                                "Text": [Function],
                                                                "TextArea": [Function],
                                                                "UniformedArrayCard": [Function],
                                                                "UniformedArrayInline": [Function],
                                                                "VariedArrayCard": [Function],
                                                                "VariedArrayInline": [Function],
                                                              },
                                                              "defaultComponents": undefined,
                                                              "definitions": Object {},
                                                              "prefix": "meta.vis",
                                                              "schema": Object {
                                                                "id": "Bar",
                                                                "meta": Object {
                                                                  "vis": Object {
                                                                    "component": "Text",
                                                                    "ordinal": 2,
                                                                  },
                                                                },
                                                                "title": "Bar",
                                                                "type": "string",
                                                              },
                                                            }
                                                          }
                                                          sheet={
                                                            StyleSheet {
                                                              "attached": true,
                                                              "classes": Object {},
                                                              "deployed": true,
                                                              "linked": false,
                                                              "options": Object {
                                                                "Renderer": [Function],
                                                                "classes": Object {},
                                                                "generateClassName": [Function],
                                                                "index": 0,
                                                                "insertionPoint": undefined,
                                                                "jss": Jss {
                                                                  "generateClassName": [Function],
                                                                  "options": Object {
                                                                    "Renderer": [Function],
                                                                    "createGenerateClassName": [Function],
                                                                    "plugins": Array [
                                                                      Object {
                                                                        "onCreateRule": [Function],
                                                                        "onProcessRule": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onChangeValue": [Function],
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onChangeValue": [Function],
                                                                        "onProcessRule": [Function],
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                    ],
                                                                  },
                                                                  "plugins": PluginsRegistry {
                                                                    "hooks": Object {
                                                                      "onChangeValue": Array [
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onCreateRule": Array [
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onProcessRule": Array [
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onProcessSheet": Array [],
                                                                      "onProcessStyle": Array [
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                    },
                                                                  },
                                                                  "version": "8.1.0",
                                                                },
                                                                "parent": [Circular],
                                                                "sheet": [Circular],
                                                              },
                                                              "renderer": DomRenderer {
                                                                "element": <style
                                                                  data-jss=""
                                                                  type="text/css"
                                                                >
                                                                  


                                                                </style>,
                                                                "getSelector": [Function],
                                                                "getStyle": [Function],
                                                                "hasInsertedRules": false,
                                                                "setSelector": [Function],
                                                                "setStyle": [Function],
                                                                "sheet": [Circular],
                                                              },
                                                              "rules": RuleList {
                                                                "classes": Object {},
                                                                "index": Array [],
                                                                "map": Object {},
                                                                "options": Object {
                                                                  "Renderer": [Function],
                                                                  "classes": Object {},
                                                                  "generateClassName": [Function],
                                                                  "index": 0,
                                                                  "insertionPoint": undefined,
                                                                  "jss": Jss {
                                                                    "generateClassName": [Function],
                                                                    "options": Object {
                                                                      "Renderer": [Function],
                                                                      "createGenerateClassName": [Function],
                                                                      "plugins": Array [
                                                                        Object {
                                                                          "onCreateRule": [Function],
                                                                          "onProcessRule": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onChangeValue": [Function],
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onChangeValue": [Function],
                                                                          "onProcessRule": [Function],
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                      ],
                                                                    },
                                                                    "plugins": PluginsRegistry {
                                                                      "hooks": Object {
                                                                        "onChangeValue": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onCreateRule": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onProcessRule": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onProcessSheet": Array [],
                                                                        "onProcessStyle": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                    },
                                                                    "version": "8.1.0",
                                                                  },
                                                                  "parent": [Circular],
                                                                  "sheet": [Circular],
                                                                },
                                                                "raw": Object {},
                                                              },
                                                            }
                                                          }
                                                          state={undefined}
                                                          styles={Object {}}
                                                          submitError={undefined}
                                                          submitFailed={undefined}
                                                          submitting={undefined}
                                                          syncError={undefined}
                                                          syncWarning={undefined}
                                                          type="text"
                                                          validate={[Function]}
                                                          value={undefined}
                                                        >
                                                          <InputComponent
                                                            className={undefined}
                                                            classes={Object {}}
                                                            id="schemaVis"
                                                            input={
                                                              Object {
                                                                "name": "foobar[0].bar",
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onDragStart": [Function],
                                                                "onDrop": [Function],
                                                                "onFocus": [Function],
                                                                "value": "",
                                                              }
                                                            }
                                                            meta={
                                                              Object {
                                                                "active": false,
                                                                "asyncValidating": false,
                                                                "autofilled": false,
                                                                "dirty": false,
                                                                "dispatch": [Function],
                                                                "error": undefined,
                                                                "form": "TestForm",
                                                                "initial": undefined,
                                                                "invalid": false,
                                                                "pristine": true,
                                                                "submitFailed": false,
                                                                "submitting": false,
                                                                "touched": false,
                                                                "valid": true,
                                                                "visited": false,
                                                                "warning": undefined,
                                                              }
                                                            }
                                                            required={false}
                                                            schemaVis={
                                                              Object {
                                                                "componentProps": Object {
                                                                  "CardItem": Object {
                                                                    "removeBtnProps": Object {
                                                                      "onClick": [Function],
                                                                    },
                                                                  },
                                                                },
                                                                "components": Object {
                                                                  "CardItem": [Function],
                                                                  "CardWithHeader": [Function],
                                                                  "Color": [Function],
                                                                  "Date": [Function],
                                                                  "DateTime": [Function],
                                                                  "Email": [Function],
                                                                  "ListItemTemplate": [Function],
                                                                  "ModalUniformedArrayCard": [Function],
                                                                  "ModalUniformedArrayInline": [Function],
                                                                  "ModalVariedArrayCard": [Function],
                                                                  "ModalVariedArrayInline": [Function],
                                                                  "Number": [Function],
                                                                  "Password": [Function],
                                                                  "SingleSelect": [Function],
                                                                  "Text": [Function],
                                                                  "TextArea": [Function],
                                                                  "UniformedArrayCard": [Function],
                                                                  "UniformedArrayInline": [Function],
                                                                  "VariedArrayCard": [Function],
                                                                  "VariedArrayInline": [Function],
                                                                },
                                                                "defaultComponents": undefined,
                                                                "definitions": Object {},
                                                                "prefix": "meta.vis",
                                                                "schema": Object {
                                                                  "id": "Bar",
                                                                  "meta": Object {
                                                                    "vis": Object {
                                                                      "component": "Text",
                                                                      "ordinal": 2,
                                                                    },
                                                                  },
                                                                  "title": "Bar",
                                                                  "type": "string",
                                                                },
                                                              }
                                                            }
                                                            sheet={
                                                              StyleSheet {
                                                                "attached": true,
                                                                "classes": Object {},
                                                                "deployed": true,
                                                                "linked": false,
                                                                "options": Object {
                                                                  "Renderer": [Function],
                                                                  "classes": Object {},
                                                                  "generateClassName": [Function],
                                                                  "index": 0,
                                                                  "insertionPoint": undefined,
                                                                  "jss": Jss {
                                                                    "generateClassName": [Function],
                                                                    "options": Object {
                                                                      "Renderer": [Function],
                                                                      "createGenerateClassName": [Function],
                                                                      "plugins": Array [
                                                                        Object {
                                                                          "onCreateRule": [Function],
                                                                          "onProcessRule": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onChangeValue": [Function],
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onChangeValue": [Function],
                                                                          "onProcessRule": [Function],
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                      ],
                                                                    },
                                                                    "plugins": PluginsRegistry {
                                                                      "hooks": Object {
                                                                        "onChangeValue": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onCreateRule": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onProcessRule": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onProcessSheet": Array [],
                                                                        "onProcessStyle": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                    },
                                                                    "version": "8.1.0",
                                                                  },
                                                                  "parent": [Circular],
                                                                  "sheet": [Circular],
                                                                },
                                                                "renderer": DomRenderer {
                                                                  "element": <style
                                                                    data-jss=""
                                                                    type="text/css"
                                                                  >
                                                                    


                                                                  </style>,
                                                                  "getSelector": [Function],
                                                                  "getStyle": [Function],
                                                                  "hasInsertedRules": false,
                                                                  "setSelector": [Function],
                                                                  "setStyle": [Function],
                                                                  "sheet": [Circular],
                                                                },
                                                                "rules": RuleList {
                                                                  "classes": Object {},
                                                                  "index": Array [],
                                                                  "map": Object {},
                                                                  "options": Object {
                                                                    "Renderer": [Function],
                                                                    "classes": Object {},
                                                                    "generateClassName": [Function],
                                                                    "index": 0,
                                                                    "insertionPoint": undefined,
                                                                    "jss": Jss {
                                                                      "generateClassName": [Function],
                                                                      "options": Object {
                                                                        "Renderer": [Function],
                                                                        "createGenerateClassName": [Function],
                                                                        "plugins": Array [
                                                                          Object {
                                                                            "onCreateRule": [Function],
                                                                            "onProcessRule": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onChangeValue": [Function],
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onChangeValue": [Function],
                                                                            "onProcessRule": [Function],
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                        ],
                                                                      },
                                                                      "plugins": PluginsRegistry {
                                                                        "hooks": Object {
                                                                          "onChangeValue": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onCreateRule": Array [
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onProcessRule": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onProcessSheet": Array [],
                                                                          "onProcessStyle": Array [
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                      },
                                                                      "version": "8.1.0",
                                                                    },
                                                                    "parent": [Circular],
                                                                    "sheet": [Circular],
                                                                  },
                                                                  "raw": Object {},
                                                                },
                                                              }
                                                            }
                                                            styles={Object {}}
                                                            type="text"
                                                          >
                                                            <FormField
                                                              className={undefined}
                                                              classes={Object {}}
                                                              id="schemaVis"
                                                              input={
                                                                Object {
                                                                  "name": "foobar[0].bar",
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onDragStart": [Function],
                                                                  "onDrop": [Function],
                                                                  "onFocus": [Function],
                                                                  "value": "",
                                                                }
                                                              }
                                                              labelProps={Object {}}
                                                              meta={
                                                                Object {
                                                                  "active": false,
                                                                  "asyncValidating": false,
                                                                  "autofilled": false,
                                                                  "dirty": false,
                                                                  "dispatch": [Function],
                                                                  "error": undefined,
                                                                  "form": "TestForm",
                                                                  "initial": undefined,
                                                                  "invalid": false,
                                                                  "pristine": true,
                                                                  "submitFailed": false,
                                                                  "submitting": false,
                                                                  "touched": false,
                                                                  "valid": true,
                                                                  "visited": false,
                                                                  "warning": undefined,
                                                                }
                                                              }
                                                              required={false}
                                                              schema={
                                                                Object {
                                                                  "id": "Bar",
                                                                  "meta": Object {
                                                                    "vis": Object {
                                                                      "component": "Text",
                                                                      "ordinal": 2,
                                                                    },
                                                                  },
                                                                  "title": "Bar",
                                                                  "type": "string",
                                                                }
                                                              }
                                                              sheet={
                                                                StyleSheet {
                                                                  "attached": true,
                                                                  "classes": Object {},
                                                                  "deployed": true,
                                                                  "linked": false,
                                                                  "options": Object {
                                                                    "Renderer": [Function],
                                                                    "classes": Object {},
                                                                    "generateClassName": [Function],
                                                                    "index": 0,
                                                                    "insertionPoint": undefined,
                                                                    "jss": Jss {
                                                                      "generateClassName": [Function],
                                                                      "options": Object {
                                                                        "Renderer": [Function],
                                                                        "createGenerateClassName": [Function],
                                                                        "plugins": Array [
                                                                          Object {
                                                                            "onCreateRule": [Function],
                                                                            "onProcessRule": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onChangeValue": [Function],
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onChangeValue": [Function],
                                                                            "onProcessRule": [Function],
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                        ],
                                                                      },
                                                                      "plugins": PluginsRegistry {
                                                                        "hooks": Object {
                                                                          "onChangeValue": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onCreateRule": Array [
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onProcessRule": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onProcessSheet": Array [],
                                                                          "onProcessStyle": Array [
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                      },
                                                                      "version": "8.1.0",
                                                                    },
                                                                    "parent": [Circular],
                                                                    "sheet": [Circular],
                                                                  },
                                                                  "renderer": DomRenderer {
                                                                    "element": <style
                                                                      data-jss=""
                                                                      type="text/css"
                                                                    >
                                                                      


                                                                    </style>,
                                                                    "getSelector": [Function],
                                                                    "getStyle": [Function],
                                                                    "hasInsertedRules": false,
                                                                    "setSelector": [Function],
                                                                    "setStyle": [Function],
                                                                    "sheet": [Circular],
                                                                  },
                                                                  "rules": RuleList {
                                                                    "classes": Object {},
                                                                    "index": Array [],
                                                                    "map": Object {},
                                                                    "options": Object {
                                                                      "Renderer": [Function],
                                                                      "classes": Object {},
                                                                      "generateClassName": [Function],
                                                                      "index": 0,
                                                                      "insertionPoint": undefined,
                                                                      "jss": Jss {
                                                                        "generateClassName": [Function],
                                                                        "options": Object {
                                                                          "Renderer": [Function],
                                                                          "createGenerateClassName": [Function],
                                                                          "plugins": Array [
                                                                            Object {
                                                                              "onCreateRule": [Function],
                                                                              "onProcessRule": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onChangeValue": [Function],
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onChangeValue": [Function],
                                                                              "onProcessRule": [Function],
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                          ],
                                                                        },
                                                                        "plugins": PluginsRegistry {
                                                                          "hooks": Object {
                                                                            "onChangeValue": Array [
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                            "onCreateRule": Array [
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                            "onProcessRule": Array [
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                            "onProcessSheet": Array [],
                                                                            "onProcessStyle": Array [
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                        },
                                                                        "version": "8.1.0",
                                                                      },
                                                                      "parent": [Circular],
                                                                      "sheet": [Circular],
                                                                    },
                                                                    "raw": Object {},
                                                                  },
                                                                }
                                                              }
                                                              showFeedback={[Function]}
                                                              styles={Object {}}
                                                              tag={[Function]}
                                                              tooltipProps={Object {}}
                                                            >
                                                              <FormGroup
                                                                className={undefined}
                                                                id="schemaVis"
                                                                tag="div"
                                                              >
                                                                <div
                                                                  className="form-group"
                                                                  id="schemaVis"
                                                                >
                                                                  <Label
                                                                    className={undefined}
                                                                    for="foobar[0].bar"
                                                                    id="foobar[0].bar-label"
                                                                    tag="label"
                                                                    widths={
                                                                      Array [
                                                                        "xs",
                                                                        "sm",
                                                                        "md",
                                                                        "lg",
                                                                        "xl",
                                                                      ]
                                                                    }
                                                                  >
                                                                    <label
                                                                      className=" form-control-label"
                                                                      htmlFor="foobar[0].bar"
                                                                      id="foobar[0].bar-label"
                                                                    >
                                                                      Bar
                                                                    </label>
                                                                  </Label>
                                                                  <Input
                                                                    className={undefined}
                                                                    id="foobar[0].bar"
                                                                    key=".0"
                                                                    name="foobar[0].bar"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onDrop={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    tag="p"
                                                                    type="text"
                                                                    valid={true}
                                                                    value=""
                                                                  >
                                                                    <input
                                                                      className="is-valid form-control"
                                                                      id="foobar[0].bar"
                                                                      name="foobar[0].bar"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onDrop={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={false}
                                                                      type="text"
                                                                      value=""
                                                                    />
                                                                  </Input>
                                                                  <FormFeedback
                                                                    className={undefined}
                                                                    id="foobar[0].bar-feedback"
                                                                    tag="div"
                                                                  >
                                                                    <div
                                                                      className="invalid-feedback"
                                                                      id="foobar[0].bar-feedback"
                                                                    />
                                                                  </FormFeedback>
                                                                </div>
                                                              </FormGroup>
                                                            </FormField>
                                                          </InputComponent>
                                                        </ConnectedField>
                                                      </Connect(ConnectedField)>
                                                    </Field>
                                                  </InputField>
                                                </CreatedInputField>
                                              </StyledComponent>
                                            </div>
                                          </CardBody>
                                        </SchemaVis>
                                      </div>
                                    </Card>
                                  </CardItem>
                                </StyledComponent>
                              </SchemaVis>
                            </div>
                          </div>
                        </CardBody>
                      </div>
                    </Card>
                  </VariedArray>
                </ConnectedFieldArray>
              </Connect(ConnectedFieldArray)>
            </FieldArray>
          </VariedArrayCard>
        </StyledComponent>
      </Form(StyledComponent)>
    </Connect(Form(StyledComponent))>
  </ReduxForm>
</Provider>
`;

exports[`Render Varied Array Fields should handle add item and remove Varied item 3`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    form="TestForm"
    name="foobar"
    schemaVis={
      Object {
        "components": Object {
          "CardItem": [Function],
          "CardWithHeader": [Function],
          "Color": [Function],
          "Date": [Function],
          "DateTime": [Function],
          "Email": [Function],
          "ListItemTemplate": [Function],
          "ModalUniformedArrayCard": [Function],
          "ModalUniformedArrayInline": [Function],
          "ModalVariedArrayCard": [Function],
          "ModalVariedArrayInline": [Function],
          "Number": [Function],
          "Password": [Function],
          "SingleSelect": [Function],
          "Text": [Function],
          "TextArea": [Function],
          "UniformedArrayCard": [Function],
          "UniformedArrayInline": [Function],
          "VariedArrayCard": [Function],
          "VariedArrayInline": [Function],
        },
        "prefix": "meta.vis",
        "schema": Object {
          "id": "VariedArrayCard",
          "items": Object {
            "anyOf": Array [
              Object {
                "id": "Bar",
                "meta": Object {
                  "vis": Object {
                    "component": "CardItem",
                    "ordinal": 1,
                  },
                },
                "properties": Object {
                  "bar": Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 2,
                      },
                    },
                    "title": "Bar",
                    "type": "string",
                  },
                  "name": Object {
                    "it": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Bar",
                "type": "object",
              },
              Object {
                "id": "Baz",
                "meta": Object {
                  "vis": Object {
                    "component": "CardItem",
                    "ordinal": 1,
                  },
                },
                "properties": Object {
                  "baz": Object {
                    "id": "Baz",
                    "meta": Object {
                      "vis": Object {
                        "component": "Number",
                        "ordinal": 2,
                      },
                    },
                    "title": "Baz",
                    "type": "number",
                  },
                  "name": Object {
                    "it": "Name",
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                        "ordinal": 1,
                      },
                    },
                    "title": "Name",
                    "type": "string",
                  },
                },
                "title": "Baz",
                "type": "object",
              },
            ],
          },
          "title": "Varied Array Card",
          "type": "array",
        },
      }
    }
  >
    <Connect(Form(StyledComponent))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="TestForm"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      name="foobar"
      persistentSubmitErrors={false}
      pure={true}
      schemaVis={
        Object {
          "components": Object {
            "CardItem": [Function],
            "CardWithHeader": [Function],
            "Color": [Function],
            "Date": [Function],
            "DateTime": [Function],
            "Email": [Function],
            "ListItemTemplate": [Function],
            "ModalUniformedArrayCard": [Function],
            "ModalUniformedArrayInline": [Function],
            "ModalVariedArrayCard": [Function],
            "ModalVariedArrayInline": [Function],
            "Number": [Function],
            "Password": [Function],
            "SingleSelect": [Function],
            "Text": [Function],
            "TextArea": [Function],
            "UniformedArrayCard": [Function],
            "UniformedArrayInline": [Function],
            "VariedArrayCard": [Function],
            "VariedArrayInline": [Function],
          },
          "prefix": "meta.vis",
          "schema": Object {
            "id": "VariedArrayCard",
            "items": Object {
              "anyOf": Array [
                Object {
                  "id": "Bar",
                  "meta": Object {
                    "vis": Object {
                      "component": "CardItem",
                      "ordinal": 1,
                    },
                  },
                  "properties": Object {
                    "bar": Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 2,
                        },
                      },
                      "title": "Bar",
                      "type": "string",
                    },
                    "name": Object {
                      "it": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Bar",
                  "type": "object",
                },
                Object {
                  "id": "Baz",
                  "meta": Object {
                    "vis": Object {
                      "component": "CardItem",
                      "ordinal": 1,
                    },
                  },
                  "properties": Object {
                    "baz": Object {
                      "id": "Baz",
                      "meta": Object {
                        "vis": Object {
                          "component": "Number",
                          "ordinal": 2,
                        },
                      },
                      "title": "Baz",
                      "type": "number",
                    },
                    "name": Object {
                      "it": "Name",
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                          "ordinal": 1,
                        },
                      },
                      "title": "Name",
                      "type": "string",
                    },
                  },
                  "title": "Baz",
                  "type": "object",
                },
              ],
            },
            "title": "Varied Array Card",
            "type": "array",
          },
        }
      }
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      withRef={true}
    >
      <Form(StyledComponent)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncErrors={undefined}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={true}
        dispatch={[Function]}
        enableReinitialize={false}
        error={undefined}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="TestForm"
        getFormState={[Function]}
        initialValues={undefined}
        initialize={[Function]}
        initialized={false}
        invalid={false}
        keepDirtyOnReinitialize={false}
        name="foobar"
        persistentSubmitErrors={false}
        pristine={false}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "foobar": Object {
              "count": 1,
              "name": "foobar",
              "type": "FieldArray",
            },
          }
        }
        reset={[Function]}
        schemaVis={
          Object {
            "components": Object {
              "CardItem": [Function],
              "CardWithHeader": [Function],
              "Color": [Function],
              "Date": [Function],
              "DateTime": [Function],
              "Email": [Function],
              "ListItemTemplate": [Function],
              "ModalUniformedArrayCard": [Function],
              "ModalUniformedArrayInline": [Function],
              "ModalVariedArrayCard": [Function],
              "ModalVariedArrayInline": [Function],
              "Number": [Function],
              "Password": [Function],
              "SingleSelect": [Function],
              "Text": [Function],
              "TextArea": [Function],
              "UniformedArrayCard": [Function],
              "UniformedArrayInline": [Function],
              "VariedArrayCard": [Function],
              "VariedArrayInline": [Function],
            },
            "prefix": "meta.vis",
            "schema": Object {
              "id": "VariedArrayCard",
              "items": Object {
                "anyOf": Array [
                  Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "CardItem",
                        "ordinal": 1,
                      },
                    },
                    "properties": Object {
                      "bar": Object {
                        "id": "Bar",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 2,
                          },
                        },
                        "title": "Bar",
                        "type": "string",
                      },
                      "name": Object {
                        "it": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Bar",
                    "type": "object",
                  },
                  Object {
                    "id": "Baz",
                    "meta": Object {
                      "vis": Object {
                        "component": "CardItem",
                        "ordinal": 1,
                      },
                    },
                    "properties": Object {
                      "baz": Object {
                        "id": "Baz",
                        "meta": Object {
                          "vis": Object {
                            "component": "Number",
                            "ordinal": 2,
                          },
                        },
                        "title": "Baz",
                        "type": "number",
                      },
                      "name": Object {
                        "it": "Name",
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                            "ordinal": 1,
                          },
                        },
                        "title": "Name",
                        "type": "string",
                      },
                    },
                    "title": "Baz",
                    "type": "object",
                  },
                ],
              },
              "title": "Varied Array Card",
              "type": "array",
            },
          }
        }
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldError={[Function]}
        shouldValidate={[Function]}
        shouldWarn={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={Object {}}
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        triggerSubmit={undefined}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={true}
        validExceptSubmit={true}
        values={
          Object {
            "foobar": Array [],
          }
        }
        warning={undefined}
        withRef={true}
      >
        <StyledComponent
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={true}
          dispatch={[Function]}
          error={undefined}
          form="TestForm"
          handleSubmit={[Function]}
          initialValues={undefined}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          name="foobar"
          pristine={false}
          pure={true}
          reset={[Function]}
          schemaVis={
            Object {
              "components": Object {
                "CardItem": [Function],
                "CardWithHeader": [Function],
                "Color": [Function],
                "Date": [Function],
                "DateTime": [Function],
                "Email": [Function],
                "ListItemTemplate": [Function],
                "ModalUniformedArrayCard": [Function],
                "ModalUniformedArrayInline": [Function],
                "ModalVariedArrayCard": [Function],
                "ModalVariedArrayInline": [Function],
                "Number": [Function],
                "Password": [Function],
                "SingleSelect": [Function],
                "Text": [Function],
                "TextArea": [Function],
                "UniformedArrayCard": [Function],
                "UniformedArrayInline": [Function],
                "VariedArrayCard": [Function],
                "VariedArrayInline": [Function],
              },
              "prefix": "meta.vis",
              "schema": Object {
                "id": "VariedArrayCard",
                "items": Object {
                  "anyOf": Array [
                    Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "CardItem",
                          "ordinal": 1,
                        },
                      },
                      "properties": Object {
                        "bar": Object {
                          "id": "Bar",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 2,
                            },
                          },
                          "title": "Bar",
                          "type": "string",
                        },
                        "name": Object {
                          "it": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Bar",
                      "type": "object",
                    },
                    Object {
                      "id": "Baz",
                      "meta": Object {
                        "vis": Object {
                          "component": "CardItem",
                          "ordinal": 1,
                        },
                      },
                      "properties": Object {
                        "baz": Object {
                          "id": "Baz",
                          "meta": Object {
                            "vis": Object {
                              "component": "Number",
                              "ordinal": 2,
                            },
                          },
                          "title": "Baz",
                          "type": "number",
                        },
                        "name": Object {
                          "it": "Name",
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                              "ordinal": 1,
                            },
                          },
                          "title": "Name",
                          "type": "string",
                        },
                      },
                      "title": "Baz",
                      "type": "object",
                    },
                  ],
                },
                "title": "Varied Array Card",
                "type": "array",
              },
            }
          }
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          triggerSubmit={undefined}
          untouch={[Function]}
          valid={true}
          warning={undefined}
          withRef={true}
        >
          <VariedArrayCard
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            classes={
              Object {
                ".select-0-8 select": "select-0-8 select",
                "container": "container-0-6",
                "header": "header-0-7",
                "select": "select-0-8",
              }
            }
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={true}
            dispatch={[Function]}
            error={undefined}
            form="TestForm"
            handleSubmit={[Function]}
            initialValues={undefined}
            initialize={[Function]}
            initialized={false}
            invalid={false}
            name="foobar"
            pristine={false}
            pure={true}
            reset={[Function]}
            schemaVis={
              Object {
                "components": Object {
                  "CardItem": [Function],
                  "CardWithHeader": [Function],
                  "Color": [Function],
                  "Date": [Function],
                  "DateTime": [Function],
                  "Email": [Function],
                  "ListItemTemplate": [Function],
                  "ModalUniformedArrayCard": [Function],
                  "ModalUniformedArrayInline": [Function],
                  "ModalVariedArrayCard": [Function],
                  "ModalVariedArrayInline": [Function],
                  "Number": [Function],
                  "Password": [Function],
                  "SingleSelect": [Function],
                  "Text": [Function],
                  "TextArea": [Function],
                  "UniformedArrayCard": [Function],
                  "UniformedArrayInline": [Function],
                  "VariedArrayCard": [Function],
                  "VariedArrayInline": [Function],
                },
                "prefix": "meta.vis",
                "schema": Object {
                  "id": "VariedArrayCard",
                  "items": Object {
                    "anyOf": Array [
                      Object {
                        "id": "Bar",
                        "meta": Object {
                          "vis": Object {
                            "component": "CardItem",
                            "ordinal": 1,
                          },
                        },
                        "properties": Object {
                          "bar": Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 2,
                              },
                            },
                            "title": "Bar",
                            "type": "string",
                          },
                          "name": Object {
                            "it": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Bar",
                        "type": "object",
                      },
                      Object {
                        "id": "Baz",
                        "meta": Object {
                          "vis": Object {
                            "component": "CardItem",
                            "ordinal": 1,
                          },
                        },
                        "properties": Object {
                          "baz": Object {
                            "id": "Baz",
                            "meta": Object {
                              "vis": Object {
                                "component": "Number",
                                "ordinal": 2,
                              },
                            },
                            "title": "Baz",
                            "type": "number",
                          },
                          "name": Object {
                            "it": "Name",
                            "meta": Object {
                              "vis": Object {
                                "component": "Text",
                                "ordinal": 1,
                              },
                            },
                            "title": "Name",
                            "type": "string",
                          },
                        },
                        "title": "Baz",
                        "type": "object",
                      },
                    ],
                  },
                  "title": "Varied Array Card",
                  "type": "array",
                },
              }
            }
            sheet={
              StyleSheet {
                "attached": true,
                "classes": Object {
                  ".select-0-8 select": "select-0-8 select",
                  "container": "container-0-6",
                  "header": "header-0-7",
                  "select": "select-0-8",
                },
                "deployed": true,
                "linked": false,
                "options": Object {
                  "Renderer": [Function],
                  "classes": Object {
                    ".select-0-8 select": "select-0-8 select",
                    "container": "container-0-6",
                    "header": "header-0-7",
                    "select": "select-0-8",
                  },
                  "generateClassName": [Function],
                  "index": 0,
                  "insertionPoint": undefined,
                  "jss": Jss {
                    "generateClassName": [Function],
                    "options": Object {
                      "Renderer": [Function],
                      "createGenerateClassName": [Function],
                      "plugins": Array [
                        Object {
                          "onCreateRule": [Function],
                          "onProcessRule": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessRule": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                      ],
                    },
                    "plugins": PluginsRegistry {
                      "hooks": Object {
                        "onChangeValue": Array [
                          [Function],
                          [Function],
                        ],
                        "onCreateRule": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "onProcessRule": Array [
                          [Function],
                          [Function],
                        ],
                        "onProcessSheet": Array [],
                        "onProcessStyle": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                    },
                    "version": "8.1.0",
                  },
                  "parent": [Circular],
                  "sheet": [Circular],
                },
                "renderer": DomRenderer {
                  "element": <style
                    data-jss=""
                    type="text/css"
                  >
                    
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                  </style>,
                  "getSelector": [Function],
                  "getStyle": [Function],
                  "hasInsertedRules": false,
                  "setSelector": [Function],
                  "setStyle": [Function],
                  "sheet": [Circular],
                },
                "rules": RuleList {
                  "classes": Object {
                    ".select-0-8 select": "select-0-8 select",
                    "container": "container-0-6",
                    "header": "header-0-7",
                    "select": "select-0-8",
                  },
                  "index": Array [
                    Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    Object {
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    Object {
                      "display": "inline-flex",
                      "width": "100%",
                    },
                    Object {
                      "margin-right": "5px",
                    },
                  ],
                  "map": Object {
                    ".container-0-6": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    ".header-0-7": Object {
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    ".select-0-8": Object {
                      "display": "inline-flex",
                      "width": "100%",
                    },
                    ".select-0-8 select": Object {
                      "margin-right": "5px",
                    },
                    "container": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    "header": Object {
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    "select": Object {
                      "display": "inline-flex",
                      "width": "100%",
                    },
                  },
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "raw": Object {
                    ".select-0-8 select": Object {
                      "marginRight": 5,
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "select": Object {
                      "@global select": Object {
                        "marginRight": 5,
                      },
                      "display": "inline-flex",
                      "width": "100%",
                    },
                  },
                },
              }
            }
            styles={
              Object {
                "container": Object {
                  "marginBottom": 10,
                  "marginTop": 15,
                },
                "header": Object {
                  "padding": 5,
                  "paddingLeft": 10,
                },
                "select": Object {
                  "@global select": Object {
                    "marginRight": 5,
                  },
                  "display": "inline-flex",
                  "width": "100%",
                },
              }
            }
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            touch={[Function]}
            triggerSubmit={undefined}
            untouch={[Function]}
            valid={true}
            warning={undefined}
            withRef={true}
          >
            <FieldArray
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              asyncValidate={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              change={[Function]}
              classes={
                Object {
                  ".select-0-8 select": "select-0-8 select",
                  "container": "container-0-6",
                  "header": "header-0-7",
                  "select": "select-0-8",
                }
              }
              clearAsyncError={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              component={[Function]}
              destroy={[Function]}
              dirty={true}
              dispatch={[Function]}
              error={undefined}
              form="TestForm"
              handleSubmit={[Function]}
              initialValues={undefined}
              initialize={[Function]}
              initialized={false}
              invalid={false}
              name="foobar"
              pristine={false}
              pure={true}
              reset={[Function]}
              schemaVis={
                Object {
                  "components": Object {
                    "CardItem": [Function],
                    "CardWithHeader": [Function],
                    "Color": [Function],
                    "Date": [Function],
                    "DateTime": [Function],
                    "Email": [Function],
                    "ListItemTemplate": [Function],
                    "ModalUniformedArrayCard": [Function],
                    "ModalUniformedArrayInline": [Function],
                    "ModalVariedArrayCard": [Function],
                    "ModalVariedArrayInline": [Function],
                    "Number": [Function],
                    "Password": [Function],
                    "SingleSelect": [Function],
                    "Text": [Function],
                    "TextArea": [Function],
                    "UniformedArrayCard": [Function],
                    "UniformedArrayInline": [Function],
                    "VariedArrayCard": [Function],
                    "VariedArrayInline": [Function],
                  },
                  "prefix": "meta.vis",
                  "schema": Object {
                    "id": "VariedArrayCard",
                    "items": Object {
                      "anyOf": Array [
                        Object {
                          "id": "Bar",
                          "meta": Object {
                            "vis": Object {
                              "component": "CardItem",
                              "ordinal": 1,
                            },
                          },
                          "properties": Object {
                            "bar": Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Bar",
                              "type": "string",
                            },
                            "name": Object {
                              "it": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Bar",
                          "type": "object",
                        },
                        Object {
                          "id": "Baz",
                          "meta": Object {
                            "vis": Object {
                              "component": "CardItem",
                              "ordinal": 1,
                            },
                          },
                          "properties": Object {
                            "baz": Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Number",
                                  "ordinal": 2,
                                },
                              },
                              "title": "Baz",
                              "type": "number",
                            },
                            "name": Object {
                              "it": "Name",
                              "meta": Object {
                                "vis": Object {
                                  "component": "Text",
                                  "ordinal": 1,
                                },
                              },
                              "title": "Name",
                              "type": "string",
                            },
                          },
                          "title": "Baz",
                          "type": "object",
                        },
                      ],
                    },
                    "title": "Varied Array Card",
                    "type": "array",
                  },
                }
              }
              sheet={
                StyleSheet {
                  "attached": true,
                  "classes": Object {
                    ".select-0-8 select": "select-0-8 select",
                    "container": "container-0-6",
                    "header": "header-0-7",
                    "select": "select-0-8",
                  },
                  "deployed": true,
                  "linked": false,
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "renderer": DomRenderer {
                    "element": <style
                      data-jss=""
                      type="text/css"
                    >
                      
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                    </style>,
                    "getSelector": [Function],
                    "getStyle": [Function],
                    "hasInsertedRules": false,
                    "setSelector": [Function],
                    "setStyle": [Function],
                    "sheet": [Circular],
                  },
                  "rules": RuleList {
                    "classes": Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    },
                    "index": Array [
                      Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      Object {
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      Object {
                        "display": "inline-flex",
                        "width": "100%",
                      },
                      Object {
                        "margin-right": "5px",
                      },
                    ],
                    "map": Object {
                      ".container-0-6": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      ".header-0-7": Object {
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      ".select-0-8": Object {
                        "display": "inline-flex",
                        "width": "100%",
                      },
                      ".select-0-8 select": Object {
                        "margin-right": "5px",
                      },
                      "container": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      "header": Object {
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      "select": Object {
                        "display": "inline-flex",
                        "width": "100%",
                      },
                    },
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "raw": Object {
                      ".select-0-8 select": Object {
                        "marginRight": 5,
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "select": Object {
                        "@global select": Object {
                          "marginRight": 5,
                        },
                        "display": "inline-flex",
                        "width": "100%",
                      },
                    },
                  },
                }
              }
              styles={
                Object {
                  "container": Object {
                    "marginBottom": 10,
                    "marginTop": 15,
                  },
                  "header": Object {
                    "padding": 5,
                    "paddingLeft": 10,
                  },
                  "select": Object {
                    "@global select": Object {
                      "marginRight": 5,
                    },
                    "display": "inline-flex",
                    "width": "100%",
                  },
                }
              }
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              touch={[Function]}
              triggerSubmit={undefined}
              untouch={[Function]}
              valid={true}
              validate={[Function]}
              warning={undefined}
              withRef={true}
            >
              <Connect(ConnectedFieldArray)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": true,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "TestForm",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "name": "foobar",
                    "persistentSubmitErrors": false,
                    "pristine": false,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "foobar": Object {
                        "count": 1,
                        "name": "foobar",
                        "type": "FieldArray",
                      },
                    },
                    "reset": [Function],
                    "schemaVis": Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "CardItem",
                                  "ordinal": 1,
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "CardItem",
                                  "ordinal": 1,
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    },
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldError": [Function],
                    "shouldValidate": [Function],
                    "shouldWarn": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {
                      "foobar": Array [
                        Object {},
                      ],
                    },
                    "warning": undefined,
                    "withRef": true,
                  }
                }
                anyTouched={false}
                array={
                  Object {
                    "insert": [Function],
                    "move": [Function],
                    "pop": [Function],
                    "push": [Function],
                    "remove": [Function],
                    "removeAll": [Function],
                    "shift": [Function],
                    "splice": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                  }
                }
                asyncValidate={[Function]}
                asyncValidating={false}
                autofill={[Function]}
                blur={[Function]}
                change={[Function]}
                classes={
                  Object {
                    ".select-0-8 select": "select-0-8 select",
                    "container": "container-0-6",
                    "header": "header-0-7",
                    "select": "select-0-8",
                  }
                }
                clearAsyncError={[Function]}
                clearSubmit={[Function]}
                clearSubmitErrors={[Function]}
                component={[Function]}
                destroy={[Function]}
                dirty={true}
                dispatch={[Function]}
                error={undefined}
                form="TestForm"
                handleSubmit={[Function]}
                initialValues={undefined}
                initialize={[Function]}
                initialized={false}
                invalid={false}
                name="foobar"
                pristine={false}
                pure={true}
                reset={[Function]}
                schemaVis={
                  Object {
                    "components": Object {
                      "CardItem": [Function],
                      "CardWithHeader": [Function],
                      "Color": [Function],
                      "Date": [Function],
                      "DateTime": [Function],
                      "Email": [Function],
                      "ListItemTemplate": [Function],
                      "ModalUniformedArrayCard": [Function],
                      "ModalUniformedArrayInline": [Function],
                      "ModalVariedArrayCard": [Function],
                      "ModalVariedArrayInline": [Function],
                      "Number": [Function],
                      "Password": [Function],
                      "SingleSelect": [Function],
                      "Text": [Function],
                      "TextArea": [Function],
                      "UniformedArrayCard": [Function],
                      "UniformedArrayInline": [Function],
                      "VariedArrayCard": [Function],
                      "VariedArrayInline": [Function],
                    },
                    "prefix": "meta.vis",
                    "schema": Object {
                      "id": "VariedArrayCard",
                      "items": Object {
                        "anyOf": Array [
                          Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "CardItem",
                                "ordinal": 1,
                              },
                            },
                            "properties": Object {
                              "bar": Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Bar",
                                "type": "string",
                              },
                              "name": Object {
                                "it": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Bar",
                            "type": "object",
                          },
                          Object {
                            "id": "Baz",
                            "meta": Object {
                              "vis": Object {
                                "component": "CardItem",
                                "ordinal": 1,
                              },
                            },
                            "properties": Object {
                              "baz": Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Number",
                                    "ordinal": 2,
                                  },
                                },
                                "title": "Baz",
                                "type": "number",
                              },
                              "name": Object {
                                "it": "Name",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                    "ordinal": 1,
                                  },
                                },
                                "title": "Name",
                                "type": "string",
                              },
                            },
                            "title": "Baz",
                            "type": "object",
                          },
                        ],
                      },
                      "title": "Varied Array Card",
                      "type": "array",
                    },
                  }
                }
                sheet={
                  StyleSheet {
                    "attached": true,
                    "classes": Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    },
                    "deployed": true,
                    "linked": false,
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "renderer": DomRenderer {
                      "element": <style
                        data-jss=""
                        type="text/css"
                      >
                        
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                      </style>,
                      "getSelector": [Function],
                      "getStyle": [Function],
                      "hasInsertedRules": false,
                      "setSelector": [Function],
                      "setStyle": [Function],
                      "sheet": [Circular],
                    },
                    "rules": RuleList {
                      "classes": Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      },
                      "index": Array [
                        Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        Object {
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        Object {
                          "display": "inline-flex",
                          "width": "100%",
                        },
                        Object {
                          "margin-right": "5px",
                        },
                      ],
                      "map": Object {
                        ".container-0-6": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        ".header-0-7": Object {
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        ".select-0-8": Object {
                          "display": "inline-flex",
                          "width": "100%",
                        },
                        ".select-0-8 select": Object {
                          "margin-right": "5px",
                        },
                        "container": Object {
                          "margin-bottom": "10px",
                          "margin-top": "15px",
                        },
                        "header": Object {
                          "padding": "5px",
                          "padding-left": "10px",
                        },
                        "select": Object {
                          "display": "inline-flex",
                          "width": "100%",
                        },
                      },
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          ".select-0-8 select": "select-0-8 select",
                          "container": "container-0-6",
                          "header": "header-0-7",
                          "select": "select-0-8",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "raw": Object {
                        ".select-0-8 select": Object {
                          "marginRight": 5,
                        },
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "select": Object {
                          "@global select": Object {
                            "marginRight": 5,
                          },
                          "display": "inline-flex",
                          "width": "100%",
                        },
                      },
                    },
                  }
                }
                styles={
                  Object {
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "select": Object {
                      "@global select": Object {
                        "marginRight": 5,
                      },
                      "display": "inline-flex",
                      "width": "100%",
                    },
                  }
                }
                submit={[Function]}
                submitFailed={false}
                submitSucceeded={false}
                submitting={false}
                touch={[Function]}
                triggerSubmit={undefined}
                untouch={[Function]}
                valid={true}
                validate={[Function]}
                warning={undefined}
                withRef={true}
              >
                <ConnectedFieldArray
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": true,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "TestForm",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "name": "foobar",
                      "persistentSubmitErrors": false,
                      "pristine": false,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "foobar": Object {
                          "count": 1,
                          "name": "foobar",
                          "type": "FieldArray",
                        },
                      },
                      "reset": [Function],
                      "schemaVis": Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "CardItem",
                                    "ordinal": 1,
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "CardItem",
                                    "ordinal": 1,
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      },
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldError": [Function],
                      "shouldValidate": [Function],
                      "shouldWarn": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {
                        "foobar": Array [
                          Object {},
                        ],
                      },
                      "warning": undefined,
                      "withRef": true,
                    }
                  }
                  anyTouched={false}
                  array={
                    Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    }
                  }
                  arrayInsert={[Function]}
                  arrayMove={[Function]}
                  arrayPop={[Function]}
                  arrayPush={[Function]}
                  arrayRemove={[Function]}
                  arrayRemoveAll={[Function]}
                  arrayShift={[Function]}
                  arraySplice={[Function]}
                  arraySwap={[Function]}
                  arrayUnshift={[Function]}
                  asyncError={undefined}
                  asyncValidate={[Function]}
                  asyncValidating={false}
                  autofill={[Function]}
                  blur={[Function]}
                  change={[Function]}
                  classes={
                    Object {
                      ".select-0-8 select": "select-0-8 select",
                      "container": "container-0-6",
                      "header": "header-0-7",
                      "select": "select-0-8",
                    }
                  }
                  clearAsyncError={[Function]}
                  clearSubmit={[Function]}
                  clearSubmitErrors={[Function]}
                  component={[Function]}
                  destroy={[Function]}
                  dirty={true}
                  dispatch={[Function]}
                  error={undefined}
                  form="TestForm"
                  handleSubmit={[Function]}
                  initialValues={undefined}
                  initialize={[Function]}
                  initialized={false}
                  invalid={false}
                  length={0}
                  name="foobar"
                  pristine={false}
                  pure={true}
                  rerenderOnEveryChange={false}
                  reset={[Function]}
                  schemaVis={
                    Object {
                      "components": Object {
                        "CardItem": [Function],
                        "CardWithHeader": [Function],
                        "Color": [Function],
                        "Date": [Function],
                        "DateTime": [Function],
                        "Email": [Function],
                        "ListItemTemplate": [Function],
                        "ModalUniformedArrayCard": [Function],
                        "ModalUniformedArrayInline": [Function],
                        "ModalVariedArrayCard": [Function],
                        "ModalVariedArrayInline": [Function],
                        "Number": [Function],
                        "Password": [Function],
                        "SingleSelect": [Function],
                        "Text": [Function],
                        "TextArea": [Function],
                        "UniformedArrayCard": [Function],
                        "UniformedArrayInline": [Function],
                        "VariedArrayCard": [Function],
                        "VariedArrayInline": [Function],
                      },
                      "prefix": "meta.vis",
                      "schema": Object {
                        "id": "VariedArrayCard",
                        "items": Object {
                          "anyOf": Array [
                            Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "CardItem",
                                  "ordinal": 1,
                                },
                              },
                              "properties": Object {
                                "bar": Object {
                                  "id": "Bar",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Bar",
                                  "type": "string",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            Object {
                              "id": "Baz",
                              "meta": Object {
                                "vis": Object {
                                  "component": "CardItem",
                                  "ordinal": 1,
                                },
                              },
                              "properties": Object {
                                "baz": Object {
                                  "id": "Baz",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Number",
                                      "ordinal": 2,
                                    },
                                  },
                                  "title": "Baz",
                                  "type": "number",
                                },
                                "name": Object {
                                  "it": "Name",
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                      "ordinal": 1,
                                    },
                                  },
                                  "title": "Name",
                                  "type": "string",
                                },
                              },
                              "title": "Baz",
                              "type": "object",
                            },
                          ],
                        },
                        "title": "Varied Array Card",
                        "type": "array",
                      },
                    }
                  }
                  sheet={
                    StyleSheet {
                      "attached": true,
                      "classes": Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      },
                      "deployed": true,
                      "linked": false,
                      "options": Object {
                        "Renderer": [Function],
                        "classes": Object {
                          ".select-0-8 select": "select-0-8 select",
                          "container": "container-0-6",
                          "header": "header-0-7",
                          "select": "select-0-8",
                        },
                        "generateClassName": [Function],
                        "index": 0,
                        "insertionPoint": undefined,
                        "jss": Jss {
                          "generateClassName": [Function],
                          "options": Object {
                            "Renderer": [Function],
                            "createGenerateClassName": [Function],
                            "plugins": Array [
                              Object {
                                "onCreateRule": [Function],
                                "onProcessRule": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onChangeValue": [Function],
                                "onProcessRule": [Function],
                                "onProcessStyle": [Function],
                              },
                              Object {
                                "onProcessStyle": [Function],
                              },
                            ],
                          },
                          "plugins": PluginsRegistry {
                            "hooks": Object {
                              "onChangeValue": Array [
                                [Function],
                                [Function],
                              ],
                              "onCreateRule": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "onProcessRule": Array [
                                [Function],
                                [Function],
                              ],
                              "onProcessSheet": Array [],
                              "onProcessStyle": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                          },
                          "version": "8.1.0",
                        },
                        "parent": [Circular],
                        "sheet": [Circular],
                      },
                      "renderer": DomRenderer {
                        "element": <style
                          data-jss=""
                          type="text/css"
                        >
                          
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                        </style>,
                        "getSelector": [Function],
                        "getStyle": [Function],
                        "hasInsertedRules": false,
                        "setSelector": [Function],
                        "setStyle": [Function],
                        "sheet": [Circular],
                      },
                      "rules": RuleList {
                        "classes": Object {
                          ".select-0-8 select": "select-0-8 select",
                          "container": "container-0-6",
                          "header": "header-0-7",
                          "select": "select-0-8",
                        },
                        "index": Array [
                          Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          Object {
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          Object {
                            "display": "inline-flex",
                            "width": "100%",
                          },
                          Object {
                            "margin-right": "5px",
                          },
                        ],
                        "map": Object {
                          ".container-0-6": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          ".header-0-7": Object {
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          ".select-0-8": Object {
                            "display": "inline-flex",
                            "width": "100%",
                          },
                          ".select-0-8 select": Object {
                            "margin-right": "5px",
                          },
                          "container": Object {
                            "margin-bottom": "10px",
                            "margin-top": "15px",
                          },
                          "header": Object {
                            "padding": "5px",
                            "padding-left": "10px",
                          },
                          "select": Object {
                            "display": "inline-flex",
                            "width": "100%",
                          },
                        },
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            ".select-0-8 select": "select-0-8 select",
                            "container": "container-0-6",
                            "header": "header-0-7",
                            "select": "select-0-8",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "raw": Object {
                          ".select-0-8 select": Object {
                            "marginRight": 5,
                          },
                          "container": Object {
                            "marginBottom": 10,
                            "marginTop": 15,
                          },
                          "header": Object {
                            "padding": 5,
                            "paddingLeft": 10,
                          },
                          "select": Object {
                            "@global select": Object {
                              "marginRight": 5,
                            },
                            "display": "inline-flex",
                            "width": "100%",
                          },
                        },
                      },
                    }
                  }
                  state={undefined}
                  styles={
                    Object {
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "select": Object {
                        "@global select": Object {
                          "marginRight": 5,
                        },
                        "display": "inline-flex",
                        "width": "100%",
                      },
                    }
                  }
                  submit={[Function]}
                  submitError={undefined}
                  submitFailed={undefined}
                  submitSucceeded={false}
                  submitting={undefined}
                  syncError={undefined}
                  syncWarning={undefined}
                  touch={[Function]}
                  triggerSubmit={undefined}
                  untouch={[Function]}
                  valid={true}
                  validate={[Function]}
                  value={Array []}
                  warning={undefined}
                  withRef={true}
                >
                  <VariedArray
                    addBtnProps={Object {}}
                    anyTouched={false}
                    array={
                      Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    asyncValidate={[Function]}
                    asyncValidating={false}
                    autofill={[Function]}
                    blur={[Function]}
                    bodyTag={[Function]}
                    change={[Function]}
                    classes={
                      Object {
                        ".select-0-8 select": "select-0-8 select",
                        "container": "container-0-6",
                        "header": "header-0-7",
                        "select": "select-0-8",
                      }
                    }
                    clearAsyncError={[Function]}
                    clearSubmit={[Function]}
                    clearSubmitErrors={[Function]}
                    destroy={[Function]}
                    dispatch={[Function]}
                    error={undefined}
                    fields={
                      Object {
                        "_isFieldArray": true,
                        "forEach": [Function],
                        "get": [Function],
                        "getAll": [Function],
                        "insert": [Function],
                        "length": 0,
                        "map": [Function],
                        "move": [Function],
                        "name": "foobar",
                        "pop": [Function],
                        "push": [Function],
                        "reduce": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    form="TestForm"
                    handleSubmit={[Function]}
                    headerTag={[Function]}
                    initialValues={undefined}
                    initialize={[Function]}
                    initialized={false}
                    invalid={false}
                    meta={
                      Object {
                        "dirty": true,
                        "error": undefined,
                        "form": "TestForm",
                        "invalid": false,
                        "pristine": false,
                        "submitFailed": undefined,
                        "submitting": undefined,
                        "valid": true,
                        "warning": undefined,
                      }
                    }
                    pure={true}
                    required={false}
                    reset={[Function]}
                    schemaVis={
                      Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "ListItemTemplate": [Function],
                          "ModalUniformedArrayCard": [Function],
                          "ModalUniformedArrayInline": [Function],
                          "ModalVariedArrayCard": [Function],
                          "ModalVariedArrayInline": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                          "VariedArrayCard": [Function],
                          "VariedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "VariedArrayCard",
                          "items": Object {
                            "anyOf": Array [
                              Object {
                                "id": "Bar",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "CardItem",
                                    "ordinal": 1,
                                  },
                                },
                                "properties": Object {
                                  "bar": Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "string",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Bar",
                                "type": "object",
                              },
                              Object {
                                "id": "Baz",
                                "meta": Object {
                                  "vis": Object {
                                    "component": "CardItem",
                                    "ordinal": 1,
                                  },
                                },
                                "properties": Object {
                                  "baz": Object {
                                    "id": "Baz",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Number",
                                        "ordinal": 2,
                                      },
                                    },
                                    "title": "Baz",
                                    "type": "number",
                                  },
                                  "name": Object {
                                    "it": "Name",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "Text",
                                        "ordinal": 1,
                                      },
                                    },
                                    "title": "Name",
                                    "type": "string",
                                  },
                                },
                                "title": "Baz",
                                "type": "object",
                              },
                            ],
                          },
                          "title": "Varied Array Card",
                          "type": "array",
                        },
                      }
                    }
                    selectInputProps={Object {}}
                    sheet={
                      StyleSheet {
                        "attached": true,
                        "classes": Object {
                          ".select-0-8 select": "select-0-8 select",
                          "container": "container-0-6",
                          "header": "header-0-7",
                          "select": "select-0-8",
                        },
                        "deployed": true,
                        "linked": false,
                        "options": Object {
                          "Renderer": [Function],
                          "classes": Object {
                            ".select-0-8 select": "select-0-8 select",
                            "container": "container-0-6",
                            "header": "header-0-7",
                            "select": "select-0-8",
                          },
                          "generateClassName": [Function],
                          "index": 0,
                          "insertionPoint": undefined,
                          "jss": Jss {
                            "generateClassName": [Function],
                            "options": Object {
                              "Renderer": [Function],
                              "createGenerateClassName": [Function],
                              "plugins": Array [
                                Object {
                                  "onCreateRule": [Function],
                                  "onProcessRule": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onChangeValue": [Function],
                                  "onProcessRule": [Function],
                                  "onProcessStyle": [Function],
                                },
                                Object {
                                  "onProcessStyle": [Function],
                                },
                              ],
                            },
                            "plugins": PluginsRegistry {
                              "hooks": Object {
                                "onChangeValue": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onCreateRule": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "onProcessRule": Array [
                                  [Function],
                                  [Function],
                                ],
                                "onProcessSheet": Array [],
                                "onProcessStyle": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                            },
                            "version": "8.1.0",
                          },
                          "parent": [Circular],
                          "sheet": [Circular],
                        },
                        "renderer": DomRenderer {
                          "element": <style
                            data-jss=""
                            type="text/css"
                          >
                            
.container-0-6 {
  margin-top: 15px;
  margin-bottom: 10px;
}
.header-0-7 {
  padding: 5px;
  padding-left: 10px;
}
.select-0-8 {
  width: 100%;
  display: inline-flex;
}
.select-0-8 select {
  margin-right: 5px;
}

                          </style>,
                          "getSelector": [Function],
                          "getStyle": [Function],
                          "hasInsertedRules": false,
                          "setSelector": [Function],
                          "setStyle": [Function],
                          "sheet": [Circular],
                        },
                        "rules": RuleList {
                          "classes": Object {
                            ".select-0-8 select": "select-0-8 select",
                            "container": "container-0-6",
                            "header": "header-0-7",
                            "select": "select-0-8",
                          },
                          "index": Array [
                            Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            Object {
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            Object {
                              "display": "inline-flex",
                              "width": "100%",
                            },
                            Object {
                              "margin-right": "5px",
                            },
                          ],
                          "map": Object {
                            ".container-0-6": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            ".header-0-7": Object {
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            ".select-0-8": Object {
                              "display": "inline-flex",
                              "width": "100%",
                            },
                            ".select-0-8 select": Object {
                              "margin-right": "5px",
                            },
                            "container": Object {
                              "margin-bottom": "10px",
                              "margin-top": "15px",
                            },
                            "header": Object {
                              "padding": "5px",
                              "padding-left": "10px",
                            },
                            "select": Object {
                              "display": "inline-flex",
                              "width": "100%",
                            },
                          },
                          "options": Object {
                            "Renderer": [Function],
                            "classes": Object {
                              ".select-0-8 select": "select-0-8 select",
                              "container": "container-0-6",
                              "header": "header-0-7",
                              "select": "select-0-8",
                            },
                            "generateClassName": [Function],
                            "index": 0,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateClassName": [Function],
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateClassName": [Function],
                                "plugins": Array [
                                  Object {
                                    "onCreateRule": [Function],
                                    "onProcessRule": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onChangeValue": [Function],
                                    "onProcessRule": [Function],
                                    "onProcessStyle": [Function],
                                  },
                                  Object {
                                    "onProcessStyle": [Function],
                                  },
                                ],
                              },
                              "plugins": PluginsRegistry {
                                "hooks": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                              },
                              "version": "8.1.0",
                            },
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "raw": Object {
                            ".select-0-8 select": Object {
                              "marginRight": 5,
                            },
                            "container": Object {
                              "marginBottom": 10,
                              "marginTop": 15,
                            },
                            "header": Object {
                              "padding": 5,
                              "paddingLeft": 10,
                            },
                            "select": Object {
                              "@global select": Object {
                                "marginRight": 5,
                              },
                              "display": "inline-flex",
                              "width": "100%",
                            },
                          },
                        },
                      }
                    }
                    styles={
                      Object {
                        "container": Object {
                          "marginBottom": 10,
                          "marginTop": 15,
                        },
                        "header": Object {
                          "padding": 5,
                          "paddingLeft": 10,
                        },
                        "select": Object {
                          "@global select": Object {
                            "marginRight": 5,
                          },
                          "display": "inline-flex",
                          "width": "100%",
                        },
                      }
                    }
                    submit={[Function]}
                    submitSucceeded={false}
                    tag={[Function]}
                    touch={[Function]}
                    triggerSubmit={undefined}
                    untouch={[Function]}
                    valid={true}
                    warning={undefined}
                  >
                    <Card
                      className="container-0-6"
                      tag="div"
                    >
                      <div
                        className="container-0-6 card"
                      >
                        <CardHeader
                          className="header-0-7"
                          tag="div"
                        >
                          <div
                            className="header-0-7 card-header"
                          >
                            Varied Array Card
                          </div>
                        </CardHeader>
                        <CardBody
                          className={undefined}
                          tag="div"
                        >
                          <div
                            className="card-body"
                          >
                            <div
                              className="select-0-8"
                            >
                              <Input
                                id="selectItem"
                                onChange={[Function]}
                                tag="p"
                                type="select"
                                value="Bar"
                              >
                                <select
                                  className="form-control"
                                  id="selectItem"
                                  onChange={[Function]}
                                  value="Bar"
                                >
                                  <option
                                    disabled={true}
                                    value=""
                                  />
                                  <option
                                    key="selectOption-0"
                                    value="Bar"
                                  >
                                    Bar
                                  </option>
                                  <option
                                    key="selectOption-1"
                                    value="Baz"
                                  >
                                    Baz
                                  </option>
                                </select>
                              </Input>
                              <Button
                                color="primary"
                                disabled={false}
                                id="addItemBtn"
                                onClick={[Function]}
                                tag="button"
                              >
                                <button
                                  className="btn btn-primary"
                                  disabled={false}
                                  id="addItemBtn"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Add
                                </button>
                              </Button>
                            </div>
                            <div
                              className={undefined}
                            />
                          </div>
                        </CardBody>
                      </div>
                    </Card>
                  </VariedArray>
                </ConnectedFieldArray>
              </Connect(ConnectedFieldArray)>
            </FieldArray>
          </VariedArrayCard>
        </StyledComponent>
      </Form(StyledComponent)>
    </Connect(Form(StyledComponent))>
  </ReduxForm>
</Provider>
`;
