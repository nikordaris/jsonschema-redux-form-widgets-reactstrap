// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render ArrayFields Should render UniformedArrayCard 1`] = `
<div
  className="container-0-0 card"
>
  <div
    className="header-0-1 card-header"
  >
    <div
      className="headerTitle-0-3"
    >
      Uniformed Array Card
    </div>
    <div
      className="addButton-0-2"
    >
      <button
        className="btn btn-primary btn-sm"
        id="addItemBtn"
        onClick={[Function]}
        type="button"
      >
        Add
      </button>
    </div>
  </div>
  <div
    className="card-block"
  />
</div>
`;

exports[`Render ArrayFields Should render UniformedArrayInline 1`] = `
<div
  className="container-0-4"
>
  <div
    className="header-0-5"
  >
    <div
      className="headerTitle-0-7"
    >
      Uniformed Array Inline
    </div>
    <div
      className="addButton-0-6"
    >
      <button
        className="btn btn-primary btn-sm"
        id="addItemBtn"
        onClick={[Function]}
        type="button"
      >
        Add
      </button>
    </div>
  </div>
  <div
    className={undefined}
  />
</div>
`;

exports[`Render ArrayFields should handle add item and remove item 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    form="MyForm"
    name="foobar"
    schemaVis={
      Object {
        "components": Object {
          "CardItem": [Function],
          "CardWithHeader": [Function],
          "Color": [Function],
          "Date": [Function],
          "DateTime": [Function],
          "Email": [Function],
          "Number": [Function],
          "Password": [Function],
          "SingleSelect": [Function],
          "Text": [Function],
          "TextArea": [Function],
          "UniformedArrayCard": [Function],
          "UniformedArrayInline": [Function],
        },
        "prefix": "meta.vis",
        "schema": Object {
          "id": "UniformedArrayInline",
          "items": Object {
            "id": "Bar",
            "meta": Object {
              "vis": Object {
                "component": "CardItem",
              },
            },
            "properties": Object {
              "foo": Object {
                "meta": Object {
                  "vis": Object {
                    "component": "Text",
                  },
                },
                "type": "string",
              },
            },
            "title": "Bar",
            "type": "object",
          },
          "title": "Uniformed Array Inline",
          "type": "array",
        },
      }
    }
  >
    <Connect(Form(StyledComponent))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="MyForm"
      getFormState={[Function]}
      keepDirtyOnReinitialize={false}
      name="foobar"
      persistentSubmitErrors={false}
      pure={true}
      schemaVis={
        Object {
          "components": Object {
            "CardItem": [Function],
            "CardWithHeader": [Function],
            "Color": [Function],
            "Date": [Function],
            "DateTime": [Function],
            "Email": [Function],
            "Number": [Function],
            "Password": [Function],
            "SingleSelect": [Function],
            "Text": [Function],
            "TextArea": [Function],
            "UniformedArrayCard": [Function],
            "UniformedArrayInline": [Function],
          },
          "prefix": "meta.vis",
          "schema": Object {
            "id": "UniformedArrayInline",
            "items": Object {
              "id": "Bar",
              "meta": Object {
                "vis": Object {
                  "component": "CardItem",
                },
              },
              "properties": Object {
                "foo": Object {
                  "meta": Object {
                    "vis": Object {
                      "component": "Text",
                    },
                  },
                  "type": "string",
                },
              },
              "title": "Bar",
              "type": "object",
            },
            "title": "Uniformed Array Inline",
            "type": "array",
          },
        }
      }
      shouldAsyncValidate={[Function]}
      shouldValidate={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
    >
      <Form(StyledComponent)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={true}
        dispatch={[Function]}
        enableReinitialize={false}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="MyForm"
        getFormState={[Function]}
        initialize={[Function]}
        initialized={false}
        invalid={false}
        keepDirtyOnReinitialize={false}
        name="foobar"
        persistentSubmitErrors={false}
        pristine={false}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "foobar": Object {
              "count": 1,
              "name": "foobar",
              "type": "FieldArray",
            },
            "foobar[0].foo": Object {
              "count": 1,
              "name": "foobar[0].foo",
              "type": "Field",
            },
          }
        }
        reset={[Function]}
        schemaVis={
          Object {
            "components": Object {
              "CardItem": [Function],
              "CardWithHeader": [Function],
              "Color": [Function],
              "Date": [Function],
              "DateTime": [Function],
              "Email": [Function],
              "Number": [Function],
              "Password": [Function],
              "SingleSelect": [Function],
              "Text": [Function],
              "TextArea": [Function],
              "UniformedArrayCard": [Function],
              "UniformedArrayInline": [Function],
            },
            "prefix": "meta.vis",
            "schema": Object {
              "id": "UniformedArrayInline",
              "items": Object {
                "id": "Bar",
                "meta": Object {
                  "vis": Object {
                    "component": "CardItem",
                  },
                },
                "properties": Object {
                  "foo": Object {
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                      },
                    },
                    "type": "string",
                  },
                },
                "title": "Bar",
                "type": "object",
              },
              "title": "Uniformed Array Inline",
              "type": "array",
            },
          }
        }
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldValidate={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={Object {}}
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={true}
        validExceptSubmit={true}
        values={
          Object {
            "foobar": Array [
              Object {},
            ],
          }
        }
      >
        <StyledComponent
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={true}
          dispatch={[Function]}
          form="MyForm"
          handleSubmit={[Function]}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          name="foobar"
          pristine={false}
          pure={true}
          reset={[Function]}
          schemaVis={
            Object {
              "components": Object {
                "CardItem": [Function],
                "CardWithHeader": [Function],
                "Color": [Function],
                "Date": [Function],
                "DateTime": [Function],
                "Email": [Function],
                "Number": [Function],
                "Password": [Function],
                "SingleSelect": [Function],
                "Text": [Function],
                "TextArea": [Function],
                "UniformedArrayCard": [Function],
                "UniformedArrayInline": [Function],
              },
              "prefix": "meta.vis",
              "schema": Object {
                "id": "UniformedArrayInline",
                "items": Object {
                  "id": "Bar",
                  "meta": Object {
                    "vis": Object {
                      "component": "CardItem",
                    },
                  },
                  "properties": Object {
                    "foo": Object {
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                        },
                      },
                      "type": "string",
                    },
                  },
                  "title": "Bar",
                  "type": "object",
                },
                "title": "Uniformed Array Inline",
                "type": "array",
              },
            }
          }
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          untouch={[Function]}
          valid={true}
        >
          <UniformedArrayCard
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            classes={
              Object {
                "addButton": "addButton-0-10",
                "container": "container-0-8",
                "header": "header-0-9",
                "headerTitle": "headerTitle-0-11",
              }
            }
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={true}
            dispatch={[Function]}
            form="MyForm"
            handleSubmit={[Function]}
            initialize={[Function]}
            initialized={false}
            invalid={false}
            name="foobar"
            pristine={false}
            pure={true}
            reset={[Function]}
            schemaVis={
              Object {
                "components": Object {
                  "CardItem": [Function],
                  "CardWithHeader": [Function],
                  "Color": [Function],
                  "Date": [Function],
                  "DateTime": [Function],
                  "Email": [Function],
                  "Number": [Function],
                  "Password": [Function],
                  "SingleSelect": [Function],
                  "Text": [Function],
                  "TextArea": [Function],
                  "UniformedArrayCard": [Function],
                  "UniformedArrayInline": [Function],
                },
                "prefix": "meta.vis",
                "schema": Object {
                  "id": "UniformedArrayInline",
                  "items": Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "CardItem",
                      },
                    },
                    "properties": Object {
                      "foo": Object {
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                          },
                        },
                        "type": "string",
                      },
                    },
                    "title": "Bar",
                    "type": "object",
                  },
                  "title": "Uniformed Array Inline",
                  "type": "array",
                },
              }
            }
            sheet={
              StyleSheet {
                "attached": true,
                "classes": Object {
                  "addButton": "addButton-0-10",
                  "container": "container-0-8",
                  "header": "header-0-9",
                  "headerTitle": "headerTitle-0-11",
                },
                "deployed": true,
                "linked": false,
                "options": Object {
                  "Renderer": [Function],
                  "classes": Object {
                    "addButton": "addButton-0-10",
                    "container": "container-0-8",
                    "header": "header-0-9",
                    "headerTitle": "headerTitle-0-11",
                  },
                  "generateClassName": [Function],
                  "index": 0,
                  "insertionPoint": undefined,
                  "jss": Jss {
                    "generateClassName": [Function],
                    "options": Object {
                      "Renderer": [Function],
                      "createGenerateClassName": [Function],
                      "plugins": Array [
                        Object {
                          "onCreateRule": [Function],
                          "onProcessRule": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessRule": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                      ],
                    },
                    "plugins": PluginsRegistry {
                      "hooks": Object {
                        "onChangeValue": Array [
                          [Function],
                          [Function],
                        ],
                        "onCreateRule": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "onProcessRule": Array [
                          [Function],
                          [Function],
                        ],
                        "onProcessSheet": Array [],
                        "onProcessStyle": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                    },
                    "version": "8.1.0",
                  },
                  "parent": [Circular],
                  "sheet": [Circular],
                },
                "renderer": DomRenderer {
                  "element": <style
                    type="text/css"
                    data-jss=""
              >
                    .container-0-8 { margin-top: 15px; margin-bottom: 10px; } .header-0-9 { padding: 5px; display: inline-flex; padding-left: 10px; } .addButton-0-10 { margin-left: auto; } .headerTitle-0-11 { margin-top: auto; margin-bottom: auto; }
              </style>,
                  "getSelector": [Function],
                  "getStyle": [Function],
                  "hasInsertedRules": false,
                  "setSelector": [Function],
                  "setStyle": [Function],
                  "sheet": [Circular],
                },
                "rules": RuleList {
                  "classes": Object {
                    "addButton": "addButton-0-10",
                    "container": "container-0-8",
                    "header": "header-0-9",
                    "headerTitle": "headerTitle-0-11",
                  },
                  "index": Array [
                    Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    Object {
                      "margin-left": "auto",
                    },
                    Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  ],
                  "map": Object {
                    ".addButton-0-10": Object {
                      "margin-left": "auto",
                    },
                    ".container-0-8": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    ".header-0-9": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    ".headerTitle-0-11": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                    "addButton": Object {
                      "margin-left": "auto",
                    },
                    "container": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    "headerTitle": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  },
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-10",
                      "container": "container-0-8",
                      "header": "header-0-9",
                      "headerTitle": "headerTitle-0-11",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "raw": Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  },
                },
              }
            }
            styles={
              Object {
                "addButton": Object {
                  "marginLeft": "auto",
                },
                "container": Object {
                  "marginBottom": 10,
                  "marginTop": 15,
                },
                "header": Object {
                  "display": "inline-flex",
                  "padding": 5,
                  "paddingLeft": 10,
                },
                "headerTitle": Object {
                  "marginBottom": "auto",
                  "marginTop": "auto",
                },
              }
            }
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            touch={[Function]}
            untouch={[Function]}
            valid={true}
          >
            <UniformedArray
              addBtnProps={Object {}}
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              asyncValidate={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              bodyTag={[Function]}
              change={[Function]}
              classes={
                Object {
                  "addButton": "addButton-0-10",
                  "container": "container-0-8",
                  "header": "header-0-9",
                  "headerTitle": "headerTitle-0-11",
                }
              }
              clearAsyncError={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              destroy={[Function]}
              dirty={true}
              dispatch={[Function]}
              form="MyForm"
              handleSubmit={[Function]}
              headerTag={[Function]}
              initialize={[Function]}
              initialized={false}
              invalid={false}
              name="foobar"
              pristine={false}
              pure={true}
              required={false}
              reset={[Function]}
              schemaVis={
                Object {
                  "components": Object {
                    "CardItem": [Function],
                    "CardWithHeader": [Function],
                    "Color": [Function],
                    "Date": [Function],
                    "DateTime": [Function],
                    "Email": [Function],
                    "Number": [Function],
                    "Password": [Function],
                    "SingleSelect": [Function],
                    "Text": [Function],
                    "TextArea": [Function],
                    "UniformedArrayCard": [Function],
                    "UniformedArrayInline": [Function],
                  },
                  "prefix": "meta.vis",
                  "schema": Object {
                    "id": "UniformedArrayInline",
                    "items": Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "CardItem",
                        },
                      },
                      "properties": Object {
                        "foo": Object {
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                            },
                          },
                          "type": "string",
                        },
                      },
                      "title": "Bar",
                      "type": "object",
                    },
                    "title": "Uniformed Array Inline",
                    "type": "array",
                  },
                }
              }
              sheet={
                StyleSheet {
                  "attached": true,
                  "classes": Object {
                    "addButton": "addButton-0-10",
                    "container": "container-0-8",
                    "header": "header-0-9",
                    "headerTitle": "headerTitle-0-11",
                  },
                  "deployed": true,
                  "linked": false,
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-10",
                      "container": "container-0-8",
                      "header": "header-0-9",
                      "headerTitle": "headerTitle-0-11",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "renderer": DomRenderer {
                    "element": <style
                      type="text/css"
                      data-jss=""
                >
                      .container-0-8 { margin-top: 15px; margin-bottom: 10px; } .header-0-9 { padding: 5px; display: inline-flex; padding-left: 10px; } .addButton-0-10 { margin-left: auto; } .headerTitle-0-11 { margin-top: auto; margin-bottom: auto; }
                </style>,
                    "getSelector": [Function],
                    "getStyle": [Function],
                    "hasInsertedRules": false,
                    "setSelector": [Function],
                    "setStyle": [Function],
                    "sheet": [Circular],
                  },
                  "rules": RuleList {
                    "classes": Object {
                      "addButton": "addButton-0-10",
                      "container": "container-0-8",
                      "header": "header-0-9",
                      "headerTitle": "headerTitle-0-11",
                    },
                    "index": Array [
                      Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      Object {
                        "margin-left": "auto",
                      },
                      Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    ],
                    "map": Object {
                      ".addButton-0-10": Object {
                        "margin-left": "auto",
                      },
                      ".container-0-8": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      ".header-0-9": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      ".headerTitle-0-11": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                      "addButton": Object {
                        "margin-left": "auto",
                      },
                      "container": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      "headerTitle": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    },
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-10",
                        "container": "container-0-8",
                        "header": "header-0-9",
                        "headerTitle": "headerTitle-0-11",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "raw": Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    },
                  },
                }
              }
              styles={
                Object {
                  "addButton": Object {
                    "marginLeft": "auto",
                  },
                  "container": Object {
                    "marginBottom": 10,
                    "marginTop": 15,
                  },
                  "header": Object {
                    "display": "inline-flex",
                    "padding": 5,
                    "paddingLeft": 10,
                  },
                  "headerTitle": Object {
                    "marginBottom": "auto",
                    "marginTop": "auto",
                  },
                }
              }
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              tag={[Function]}
              touch={[Function]}
              untouch={[Function]}
              valid={true}
            >
              <FieldArray
                component={[Function]}
                name="foobar"
                validate={[Function]}
              >
                <Connect(ConnectedFieldArray)
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": true,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "MyForm",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "name": "foobar",
                      "persistentSubmitErrors": false,
                      "pristine": false,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "foobar": Object {
                          "count": 1,
                          "name": "foobar",
                          "type": "FieldArray",
                        },
                      },
                      "reset": [Function],
                      "schemaVis": Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "UniformedArrayInline",
                          "items": Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "CardItem",
                              },
                            },
                            "properties": Object {
                              "foo": Object {
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                  },
                                },
                                "type": "string",
                              },
                            },
                            "title": "Bar",
                            "type": "object",
                          },
                          "title": "Uniformed Array Inline",
                          "type": "array",
                        },
                      },
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {
                        "foobar": Array [
                          Object {},
                        ],
                      },
                      "warning": undefined,
                    }
                  }
                  component={[Function]}
                  name="foobar"
                  validate={[Function]}
                >
                  <ConnectedFieldArray
                    _reduxForm={
                      Object {
                        "anyTouched": false,
                        "array": Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "splice": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        },
                        "arrayInsert": [Function],
                        "arrayMove": [Function],
                        "arrayPop": [Function],
                        "arrayPush": [Function],
                        "arrayRemove": [Function],
                        "arrayRemoveAll": [Function],
                        "arrayShift": [Function],
                        "arraySplice": [Function],
                        "arraySwap": [Function],
                        "arrayUnshift": [Function],
                        "asyncErrors": undefined,
                        "asyncValidate": [Function],
                        "asyncValidating": false,
                        "autofill": [Function],
                        "blur": [Function],
                        "change": [Function],
                        "clearAsyncError": [Function],
                        "clearSubmit": [Function],
                        "clearSubmitErrors": [Function],
                        "destroy": [Function],
                        "destroyOnUnmount": true,
                        "dirty": true,
                        "dispatch": [Function],
                        "enableReinitialize": false,
                        "error": undefined,
                        "focus": [Function],
                        "forceUnregisterOnUnmount": false,
                        "form": "MyForm",
                        "getFormState": [Function],
                        "getValues": [Function],
                        "initialValues": undefined,
                        "initialize": [Function],
                        "initialized": false,
                        "invalid": false,
                        "keepDirtyOnReinitialize": false,
                        "name": "foobar",
                        "persistentSubmitErrors": false,
                        "pristine": false,
                        "pure": true,
                        "register": [Function],
                        "registerField": [Function],
                        "registerInnerOnSubmit": [Function],
                        "registeredFields": Object {
                          "foobar": Object {
                            "count": 1,
                            "name": "foobar",
                            "type": "FieldArray",
                          },
                        },
                        "reset": [Function],
                        "schemaVis": Object {
                          "components": Object {
                            "CardItem": [Function],
                            "CardWithHeader": [Function],
                            "Color": [Function],
                            "Date": [Function],
                            "DateTime": [Function],
                            "Email": [Function],
                            "Number": [Function],
                            "Password": [Function],
                            "SingleSelect": [Function],
                            "Text": [Function],
                            "TextArea": [Function],
                            "UniformedArrayCard": [Function],
                            "UniformedArrayInline": [Function],
                          },
                          "prefix": "meta.vis",
                          "schema": Object {
                            "id": "UniformedArrayInline",
                            "items": Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "CardItem",
                                },
                              },
                              "properties": Object {
                                "foo": Object {
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                    },
                                  },
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            "title": "Uniformed Array Inline",
                            "type": "array",
                          },
                        },
                        "sectionPrefix": undefined,
                        "setSubmitFailed": [Function],
                        "setSubmitSucceeded": [Function],
                        "shouldAsyncValidate": [Function],
                        "shouldValidate": [Function],
                        "startAsyncValidation": [Function],
                        "startSubmit": [Function],
                        "stopAsyncValidation": [Function],
                        "stopSubmit": [Function],
                        "submit": [Function],
                        "submitFailed": false,
                        "submitSucceeded": false,
                        "submitting": false,
                        "syncErrors": Object {},
                        "syncWarnings": Object {},
                        "touch": [Function],
                        "touchOnBlur": true,
                        "touchOnChange": false,
                        "triggerSubmit": undefined,
                        "unregister": [Function],
                        "unregisterField": [Function],
                        "untouch": [Function],
                        "updateSyncErrors": [Function],
                        "updateSyncWarnings": [Function],
                        "valid": true,
                        "validExceptSubmit": true,
                        "values": Object {
                          "foobar": Array [
                            Object {},
                          ],
                        },
                        "warning": undefined,
                      }
                    }
                    arrayInsert={[Function]}
                    arrayMove={[Function]}
                    arrayPop={[Function]}
                    arrayPush={[Function]}
                    arrayRemove={[Function]}
                    arrayRemoveAll={[Function]}
                    arrayShift={[Function]}
                    arraySplice={[Function]}
                    arraySwap={[Function]}
                    arrayUnshift={[Function]}
                    component={[Function]}
                    dirty={true}
                    length={1}
                    name="foobar"
                    pristine={false}
                    rerenderOnEveryChange={false}
                    validate={[Function]}
                    value={
                      Array [
                        Object {},
                      ]
                    }
                  >
                    <Component
                      fields={
                        Object {
                          "_isFieldArray": true,
                          "forEach": [Function],
                          "get": [Function],
                          "getAll": [Function],
                          "insert": [Function],
                          "length": 1,
                          "map": [Function],
                          "move": [Function],
                          "name": "foobar",
                          "pop": [Function],
                          "push": [Function],
                          "reduce": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      meta={
                        Object {
                          "dirty": true,
                          "error": undefined,
                          "form": "MyForm",
                          "invalid": false,
                          "pristine": false,
                          "submitFailed": undefined,
                          "submitting": undefined,
                          "valid": true,
                          "warning": undefined,
                        }
                      }
                    >
                      <Card
                        className="container-0-8"
                        tag="div"
                      >
                        <div
                          className="container-0-8 card"
                        >
                          <CardHeader
                            className="header-0-9"
                            tag="div"
                          >
                            <div
                              className="header-0-9 card-header"
                            >
                              <div
                                className="headerTitle-0-11"
                              >
                                Uniformed Array Inline
                              </div>
                              <div
                                className="addButton-0-10"
                              >
                                <Button
                                  color="primary"
                                  id="addItemBtn"
                                  onClick={[Function]}
                                  size="sm"
                                  tag="button"
                                >
                                  <button
                                    className="btn btn-primary btn-sm"
                                    id="addItemBtn"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Add
                                  </button>
                                </Button>
                              </div>
                            </div>
                          </CardHeader>
                          <CardBlock
                            tag="div"
                          >
                            <div
                              className="card-block"
                            >
                              <SchemaVis
                                components={
                                  Object {
                                    "CardItem": [Function],
                                    "CardWithHeader": [Function],
                                    "Color": [Function],
                                    "Date": [Function],
                                    "DateTime": [Function],
                                    "Email": [Function],
                                    "Number": [Function],
                                    "Password": [Function],
                                    "SingleSelect": [Function],
                                    "Text": [Function],
                                    "TextArea": [Function],
                                    "UniformedArrayCard": [Function],
                                    "UniformedArrayInline": [Function],
                                  }
                                }
                                id="schemaVis"
                                namespace="foobar[0]"
                                onRemove={[Function]}
                                prefix="meta.vis"
                                schema={
                                  Object {
                                    "id": "Bar",
                                    "meta": Object {
                                      "vis": Object {
                                        "component": "CardItem",
                                      },
                                    },
                                    "properties": Object {
                                      "foo": Object {
                                        "meta": Object {
                                          "vis": Object {
                                            "component": "Text",
                                          },
                                        },
                                        "type": "string",
                                      },
                                    },
                                    "title": "Bar",
                                    "type": "object",
                                  }
                                }
                                styles={Object {}}
                                tag="div"
                              >
                                <StyledComponent
                                  id="schemaVis"
                                  name="foobar[0]"
                                  onRemove={[Function]}
                                  required={false}
                                  schemaVis={
                                    Object {
                                      "componentProps": undefined,
                                      "components": Object {
                                        "CardItem": [Function],
                                        "CardWithHeader": [Function],
                                        "Color": [Function],
                                        "Date": [Function],
                                        "DateTime": [Function],
                                        "Email": [Function],
                                        "Number": [Function],
                                        "Password": [Function],
                                        "SingleSelect": [Function],
                                        "Text": [Function],
                                        "TextArea": [Function],
                                        "UniformedArrayCard": [Function],
                                        "UniformedArrayInline": [Function],
                                      },
                                      "defaultComponents": undefined,
                                      "prefix": "meta.vis",
                                      "schema": Object {
                                        "id": "Bar",
                                        "meta": Object {
                                          "vis": Object {
                                            "component": "CardItem",
                                          },
                                        },
                                        "properties": Object {
                                          "foo": Object {
                                            "meta": Object {
                                              "vis": Object {
                                                "component": "Text",
                                              },
                                            },
                                            "type": "string",
                                          },
                                        },
                                        "title": "Bar",
                                        "type": "object",
                                      },
                                    }
                                  }
                                  styles={Object {}}
                                >
                                  <CardItem
                                    classes={
                                      Object {
                                        "card": "card-0-12",
                                        "header": "header-0-13",
                                        "headerTitle": "headerTitle-0-15",
                                        "removeButton": "removeButton-0-14",
                                      }
                                    }
                                    id="schemaVis"
                                    name="foobar[0]"
                                    onRemove={[Function]}
                                    required={false}
                                    schemaVis={
                                      Object {
                                        "componentProps": undefined,
                                        "components": Object {
                                          "CardItem": [Function],
                                          "CardWithHeader": [Function],
                                          "Color": [Function],
                                          "Date": [Function],
                                          "DateTime": [Function],
                                          "Email": [Function],
                                          "Number": [Function],
                                          "Password": [Function],
                                          "SingleSelect": [Function],
                                          "Text": [Function],
                                          "TextArea": [Function],
                                          "UniformedArrayCard": [Function],
                                          "UniformedArrayInline": [Function],
                                        },
                                        "defaultComponents": undefined,
                                        "prefix": "meta.vis",
                                        "schema": Object {
                                          "id": "Bar",
                                          "meta": Object {
                                            "vis": Object {
                                              "component": "CardItem",
                                            },
                                          },
                                          "properties": Object {
                                            "foo": Object {
                                              "meta": Object {
                                                "vis": Object {
                                                  "component": "Text",
                                                },
                                              },
                                              "type": "string",
                                            },
                                          },
                                          "title": "Bar",
                                          "type": "object",
                                        },
                                      }
                                    }
                                    sheet={
                                      StyleSheet {
                                        "attached": true,
                                        "classes": Object {
                                          "card": "card-0-12",
                                          "header": "header-0-13",
                                          "headerTitle": "headerTitle-0-15",
                                          "removeButton": "removeButton-0-14",
                                        },
                                        "deployed": true,
                                        "linked": false,
                                        "options": Object {
                                          "Renderer": [Function],
                                          "classes": Object {
                                            "card": "card-0-12",
                                            "header": "header-0-13",
                                            "headerTitle": "headerTitle-0-15",
                                            "removeButton": "removeButton-0-14",
                                          },
                                          "generateClassName": [Function],
                                          "index": 0,
                                          "insertionPoint": undefined,
                                          "jss": Jss {
                                            "generateClassName": [Function],
                                            "options": Object {
                                              "Renderer": [Function],
                                              "createGenerateClassName": [Function],
                                              "plugins": Array [
                                                Object {
                                                  "onCreateRule": [Function],
                                                  "onProcessRule": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessRule": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                              ],
                                            },
                                            "plugins": PluginsRegistry {
                                              "hooks": Object {
                                                "onChangeValue": Array [
                                                  [Function],
                                                  [Function],
                                                ],
                                                "onCreateRule": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "onProcessRule": Array [
                                                  [Function],
                                                  [Function],
                                                ],
                                                "onProcessSheet": Array [],
                                                "onProcessStyle": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                            },
                                            "version": "8.1.0",
                                          },
                                          "parent": [Circular],
                                          "sheet": [Circular],
                                        },
                                        "renderer": DomRenderer {
                                          "element": <style
                                            type="text/css"
                                            data-jss=""
                                      >
                                            .card-0-12 { margin-top: 15px; margin-bottom: 10px; } .header-0-13 { padding: 5px; display: inline-flex; padding-left: 10px; } .removeButton-0-14 { margin-left: auto; } .headerTitle-0-15 { margin-top: auto; margin-bottom: auto; }
                                      </style>,
                                          "getSelector": [Function],
                                          "getStyle": [Function],
                                          "hasInsertedRules": false,
                                          "setSelector": [Function],
                                          "setStyle": [Function],
                                          "sheet": [Circular],
                                        },
                                        "rules": RuleList {
                                          "classes": Object {
                                            "card": "card-0-12",
                                            "header": "header-0-13",
                                            "headerTitle": "headerTitle-0-15",
                                            "removeButton": "removeButton-0-14",
                                          },
                                          "index": Array [
                                            Object {
                                              "margin-bottom": "10px",
                                              "margin-top": "15px",
                                            },
                                            Object {
                                              "display": "inline-flex",
                                              "padding": "5px",
                                              "padding-left": "10px",
                                            },
                                            Object {
                                              "margin-left": "auto",
                                            },
                                            Object {
                                              "margin-bottom": "auto",
                                              "margin-top": "auto",
                                            },
                                          ],
                                          "map": Object {
                                            ".card-0-12": Object {
                                              "margin-bottom": "10px",
                                              "margin-top": "15px",
                                            },
                                            ".header-0-13": Object {
                                              "display": "inline-flex",
                                              "padding": "5px",
                                              "padding-left": "10px",
                                            },
                                            ".headerTitle-0-15": Object {
                                              "margin-bottom": "auto",
                                              "margin-top": "auto",
                                            },
                                            ".removeButton-0-14": Object {
                                              "margin-left": "auto",
                                            },
                                            "card": Object {
                                              "margin-bottom": "10px",
                                              "margin-top": "15px",
                                            },
                                            "header": Object {
                                              "display": "inline-flex",
                                              "padding": "5px",
                                              "padding-left": "10px",
                                            },
                                            "headerTitle": Object {
                                              "margin-bottom": "auto",
                                              "margin-top": "auto",
                                            },
                                            "removeButton": Object {
                                              "margin-left": "auto",
                                            },
                                          },
                                          "options": Object {
                                            "Renderer": [Function],
                                            "classes": Object {
                                              "card": "card-0-12",
                                              "header": "header-0-13",
                                              "headerTitle": "headerTitle-0-15",
                                              "removeButton": "removeButton-0-14",
                                            },
                                            "generateClassName": [Function],
                                            "index": 0,
                                            "insertionPoint": undefined,
                                            "jss": Jss {
                                              "generateClassName": [Function],
                                              "options": Object {
                                                "Renderer": [Function],
                                                "createGenerateClassName": [Function],
                                                "plugins": Array [
                                                  Object {
                                                    "onCreateRule": [Function],
                                                    "onProcessRule": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessRule": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                ],
                                              },
                                              "plugins": PluginsRegistry {
                                                "hooks": Object {
                                                  "onChangeValue": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onCreateRule": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onProcessRule": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "onProcessSheet": Array [],
                                                  "onProcessStyle": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                              },
                                              "version": "8.1.0",
                                            },
                                            "parent": [Circular],
                                            "sheet": [Circular],
                                          },
                                          "raw": Object {
                                            "card": Object {
                                              "marginBottom": 10,
                                              "marginTop": 15,
                                            },
                                            "header": Object {
                                              "display": "inline-flex",
                                              "padding": 5,
                                              "paddingLeft": 10,
                                            },
                                            "headerTitle": Object {
                                              "marginBottom": "auto",
                                              "marginTop": "auto",
                                            },
                                            "removeButton": Object {
                                              "marginLeft": "auto",
                                            },
                                          },
                                        },
                                      }
                                    }
                                    styles={
                                      Object {
                                        "card": Object {
                                          "marginBottom": 10,
                                          "marginTop": 15,
                                        },
                                        "header": Object {
                                          "display": "inline-flex",
                                          "padding": 5,
                                          "paddingLeft": 10,
                                        },
                                        "headerTitle": Object {
                                          "marginBottom": "auto",
                                          "marginTop": "auto",
                                        },
                                        "removeButton": Object {
                                          "marginLeft": "auto",
                                        },
                                      }
                                    }
                                  >
                                    <Card
                                      className="card-0-12"
                                      tag="div"
                                    >
                                      <div
                                        className="card-0-12 card"
                                      >
                                        <CardHeader
                                          className="header-0-13"
                                          tag="div"
                                        >
                                          <div
                                            className="header-0-13 card-header"
                                          >
                                            <div
                                              className="headerTitle-0-15"
                                            >
                                              Bar
                                            </div>
                                            <div
                                              className="removeButton-0-14"
                                            >
                                              <Button
                                                color="danger"
                                                id="removeItemBtn"
                                                onClick={[Function]}
                                                size="sm"
                                                tag="button"
                                              >
                                                <button
                                                  className="btn btn-danger btn-sm"
                                                  id="removeItemBtn"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  Remove
                                                </button>
                                              </Button>
                                            </div>
                                          </div>
                                        </CardHeader>
                                        <SchemaVis
                                          components={
                                            Object {
                                              "CardItem": [Function],
                                              "CardWithHeader": [Function],
                                              "Color": [Function],
                                              "Date": [Function],
                                              "DateTime": [Function],
                                              "Email": [Function],
                                              "Number": [Function],
                                              "Password": [Function],
                                              "SingleSelect": [Function],
                                              "Text": [Function],
                                              "TextArea": [Function],
                                              "UniformedArrayCard": [Function],
                                              "UniformedArrayInline": [Function],
                                            }
                                          }
                                          id="schemaVis"
                                          namespace="foobar[0]"
                                          prefix="meta.vis"
                                          required={false}
                                          schema={
                                            Object {
                                              "id": "Bar",
                                              "meta": Object {
                                                "vis": undefined,
                                              },
                                              "properties": Object {
                                                "foo": Object {
                                                  "meta": Object {
                                                    "vis": Object {
                                                      "component": "Text",
                                                    },
                                                  },
                                                  "type": "string",
                                                },
                                              },
                                              "title": "Bar",
                                              "type": "object",
                                            }
                                          }
                                          styles={Object {}}
                                          tag={[Function]}
                                        >
                                          <CardBlock
                                            id="schemaVis"
                                            required={false}
                                            tag="div"
                                          >
                                            <div
                                              className="card-block"
                                              id="schemaVis"
                                              required={false}
                                            >
                                              <StyledComponent
                                                id="schemaVis"
                                                name="foobar[0].foo"
                                                required={false}
                                                schemaVis={
                                                  Object {
                                                    "componentProps": undefined,
                                                    "components": Object {
                                                      "CardItem": [Function],
                                                      "CardWithHeader": [Function],
                                                      "Color": [Function],
                                                      "Date": [Function],
                                                      "DateTime": [Function],
                                                      "Email": [Function],
                                                      "Number": [Function],
                                                      "Password": [Function],
                                                      "SingleSelect": [Function],
                                                      "Text": [Function],
                                                      "TextArea": [Function],
                                                      "UniformedArrayCard": [Function],
                                                      "UniformedArrayInline": [Function],
                                                    },
                                                    "defaultComponents": undefined,
                                                    "prefix": "meta.vis",
                                                    "schema": Object {
                                                      "meta": Object {
                                                        "vis": Object {
                                                          "component": "Text",
                                                        },
                                                      },
                                                      "type": "string",
                                                    },
                                                  }
                                                }
                                                styles={Object {}}
                                              >
                                                <CreatedInputField
                                                  classes={Object {}}
                                                  id="schemaVis"
                                                  name="foobar[0].foo"
                                                  required={false}
                                                  schemaVis={
                                                    Object {
                                                      "componentProps": undefined,
                                                      "components": Object {
                                                        "CardItem": [Function],
                                                        "CardWithHeader": [Function],
                                                        "Color": [Function],
                                                        "Date": [Function],
                                                        "DateTime": [Function],
                                                        "Email": [Function],
                                                        "Number": [Function],
                                                        "Password": [Function],
                                                        "SingleSelect": [Function],
                                                        "Text": [Function],
                                                        "TextArea": [Function],
                                                        "UniformedArrayCard": [Function],
                                                        "UniformedArrayInline": [Function],
                                                      },
                                                      "defaultComponents": undefined,
                                                      "prefix": "meta.vis",
                                                      "schema": Object {
                                                        "meta": Object {
                                                          "vis": Object {
                                                            "component": "Text",
                                                          },
                                                        },
                                                        "type": "string",
                                                      },
                                                    }
                                                  }
                                                  sheet={
                                                    StyleSheet {
                                                      "attached": true,
                                                      "classes": Object {},
                                                      "deployed": true,
                                                      "linked": false,
                                                      "options": Object {
                                                        "Renderer": [Function],
                                                        "classes": Object {},
                                                        "generateClassName": [Function],
                                                        "index": 0,
                                                        "insertionPoint": undefined,
                                                        "jss": Jss {
                                                          "generateClassName": [Function],
                                                          "options": Object {
                                                            "Renderer": [Function],
                                                            "createGenerateClassName": [Function],
                                                            "plugins": Array [
                                                              Object {
                                                                "onCreateRule": [Function],
                                                                "onProcessRule": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onChangeValue": [Function],
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onChangeValue": [Function],
                                                                "onProcessRule": [Function],
                                                                "onProcessStyle": [Function],
                                                              },
                                                              Object {
                                                                "onProcessStyle": [Function],
                                                              },
                                                            ],
                                                          },
                                                          "plugins": PluginsRegistry {
                                                            "hooks": Object {
                                                              "onChangeValue": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                              "onCreateRule": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                              "onProcessRule": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                              "onProcessSheet": Array [],
                                                              "onProcessStyle": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                          },
                                                          "version": "8.1.0",
                                                        },
                                                        "parent": [Circular],
                                                        "sheet": [Circular],
                                                      },
                                                      "renderer": DomRenderer {
                                                        "element": <style
                                                          type="text/css"
                                                          data-jss=""
                                                    >
                                                          
                                                    </style>,
                                                        "getSelector": [Function],
                                                        "getStyle": [Function],
                                                        "hasInsertedRules": false,
                                                        "setSelector": [Function],
                                                        "setStyle": [Function],
                                                        "sheet": [Circular],
                                                      },
                                                      "rules": RuleList {
                                                        "classes": Object {},
                                                        "index": Array [],
                                                        "map": Object {},
                                                        "options": Object {
                                                          "Renderer": [Function],
                                                          "classes": Object {},
                                                          "generateClassName": [Function],
                                                          "index": 0,
                                                          "insertionPoint": undefined,
                                                          "jss": Jss {
                                                            "generateClassName": [Function],
                                                            "options": Object {
                                                              "Renderer": [Function],
                                                              "createGenerateClassName": [Function],
                                                              "plugins": Array [
                                                                Object {
                                                                  "onCreateRule": [Function],
                                                                  "onProcessRule": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onChangeValue": [Function],
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onChangeValue": [Function],
                                                                  "onProcessRule": [Function],
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                              ],
                                                            },
                                                            "plugins": PluginsRegistry {
                                                              "hooks": Object {
                                                                "onChangeValue": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onCreateRule": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onProcessRule": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onProcessSheet": Array [],
                                                                "onProcessStyle": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                            },
                                                            "version": "8.1.0",
                                                          },
                                                          "parent": [Circular],
                                                          "sheet": [Circular],
                                                        },
                                                        "raw": Object {},
                                                      },
                                                    }
                                                  }
                                                  styles={Object {}}
                                                >
                                                  <InputField
                                                    classes={Object {}}
                                                    component={[Function]}
                                                    id="schemaVis"
                                                    name="foobar[0].foo"
                                                    required={false}
                                                    schemaVis={
                                                      Object {
                                                        "componentProps": undefined,
                                                        "components": Object {
                                                          "CardItem": [Function],
                                                          "CardWithHeader": [Function],
                                                          "Color": [Function],
                                                          "Date": [Function],
                                                          "DateTime": [Function],
                                                          "Email": [Function],
                                                          "Number": [Function],
                                                          "Password": [Function],
                                                          "SingleSelect": [Function],
                                                          "Text": [Function],
                                                          "TextArea": [Function],
                                                          "UniformedArrayCard": [Function],
                                                          "UniformedArrayInline": [Function],
                                                        },
                                                        "defaultComponents": undefined,
                                                        "prefix": "meta.vis",
                                                        "schema": Object {
                                                          "meta": Object {
                                                            "vis": Object {
                                                              "component": "Text",
                                                            },
                                                          },
                                                          "type": "string",
                                                        },
                                                      }
                                                    }
                                                    sheet={
                                                      StyleSheet {
                                                        "attached": true,
                                                        "classes": Object {},
                                                        "deployed": true,
                                                        "linked": false,
                                                        "options": Object {
                                                          "Renderer": [Function],
                                                          "classes": Object {},
                                                          "generateClassName": [Function],
                                                          "index": 0,
                                                          "insertionPoint": undefined,
                                                          "jss": Jss {
                                                            "generateClassName": [Function],
                                                            "options": Object {
                                                              "Renderer": [Function],
                                                              "createGenerateClassName": [Function],
                                                              "plugins": Array [
                                                                Object {
                                                                  "onCreateRule": [Function],
                                                                  "onProcessRule": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onChangeValue": [Function],
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onChangeValue": [Function],
                                                                  "onProcessRule": [Function],
                                                                  "onProcessStyle": [Function],
                                                                },
                                                                Object {
                                                                  "onProcessStyle": [Function],
                                                                },
                                                              ],
                                                            },
                                                            "plugins": PluginsRegistry {
                                                              "hooks": Object {
                                                                "onChangeValue": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onCreateRule": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onProcessRule": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "onProcessSheet": Array [],
                                                                "onProcessStyle": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                            },
                                                            "version": "8.1.0",
                                                          },
                                                          "parent": [Circular],
                                                          "sheet": [Circular],
                                                        },
                                                        "renderer": DomRenderer {
                                                          "element": <style
                                                            type="text/css"
                                                            data-jss=""
                                                      >
                                                            
                                                      </style>,
                                                          "getSelector": [Function],
                                                          "getStyle": [Function],
                                                          "hasInsertedRules": false,
                                                          "setSelector": [Function],
                                                          "setStyle": [Function],
                                                          "sheet": [Circular],
                                                        },
                                                        "rules": RuleList {
                                                          "classes": Object {},
                                                          "index": Array [],
                                                          "map": Object {},
                                                          "options": Object {
                                                            "Renderer": [Function],
                                                            "classes": Object {},
                                                            "generateClassName": [Function],
                                                            "index": 0,
                                                            "insertionPoint": undefined,
                                                            "jss": Jss {
                                                              "generateClassName": [Function],
                                                              "options": Object {
                                                                "Renderer": [Function],
                                                                "createGenerateClassName": [Function],
                                                                "plugins": Array [
                                                                  Object {
                                                                    "onCreateRule": [Function],
                                                                    "onProcessRule": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onChangeValue": [Function],
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onChangeValue": [Function],
                                                                    "onProcessRule": [Function],
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                ],
                                                              },
                                                              "plugins": PluginsRegistry {
                                                                "hooks": Object {
                                                                  "onChangeValue": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onCreateRule": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onProcessRule": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onProcessSheet": Array [],
                                                                  "onProcessStyle": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                              },
                                                              "version": "8.1.0",
                                                            },
                                                            "parent": [Circular],
                                                            "sheet": [Circular],
                                                          },
                                                          "raw": Object {},
                                                        },
                                                      }
                                                    }
                                                    styles={Object {}}
                                                    type="text"
                                                  >
                                                    <Field
                                                      classes={Object {}}
                                                      component={[Function]}
                                                      id="schemaVis"
                                                      name="foobar[0].foo"
                                                      required={false}
                                                      schemaVis={
                                                        Object {
                                                          "componentProps": undefined,
                                                          "components": Object {
                                                            "CardItem": [Function],
                                                            "CardWithHeader": [Function],
                                                            "Color": [Function],
                                                            "Date": [Function],
                                                            "DateTime": [Function],
                                                            "Email": [Function],
                                                            "Number": [Function],
                                                            "Password": [Function],
                                                            "SingleSelect": [Function],
                                                            "Text": [Function],
                                                            "TextArea": [Function],
                                                            "UniformedArrayCard": [Function],
                                                            "UniformedArrayInline": [Function],
                                                          },
                                                          "defaultComponents": undefined,
                                                          "prefix": "meta.vis",
                                                          "schema": Object {
                                                            "meta": Object {
                                                              "vis": Object {
                                                                "component": "Text",
                                                              },
                                                            },
                                                            "type": "string",
                                                          },
                                                        }
                                                      }
                                                      sheet={
                                                        StyleSheet {
                                                          "attached": true,
                                                          "classes": Object {},
                                                          "deployed": true,
                                                          "linked": false,
                                                          "options": Object {
                                                            "Renderer": [Function],
                                                            "classes": Object {},
                                                            "generateClassName": [Function],
                                                            "index": 0,
                                                            "insertionPoint": undefined,
                                                            "jss": Jss {
                                                              "generateClassName": [Function],
                                                              "options": Object {
                                                                "Renderer": [Function],
                                                                "createGenerateClassName": [Function],
                                                                "plugins": Array [
                                                                  Object {
                                                                    "onCreateRule": [Function],
                                                                    "onProcessRule": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onChangeValue": [Function],
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onChangeValue": [Function],
                                                                    "onProcessRule": [Function],
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                  Object {
                                                                    "onProcessStyle": [Function],
                                                                  },
                                                                ],
                                                              },
                                                              "plugins": PluginsRegistry {
                                                                "hooks": Object {
                                                                  "onChangeValue": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onCreateRule": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onProcessRule": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                  "onProcessSheet": Array [],
                                                                  "onProcessStyle": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                              },
                                                              "version": "8.1.0",
                                                            },
                                                            "parent": [Circular],
                                                            "sheet": [Circular],
                                                          },
                                                          "renderer": DomRenderer {
                                                            "element": <style
                                                              type="text/css"
                                                              data-jss=""
                                                        >
                                                              
                                                        </style>,
                                                            "getSelector": [Function],
                                                            "getStyle": [Function],
                                                            "hasInsertedRules": false,
                                                            "setSelector": [Function],
                                                            "setStyle": [Function],
                                                            "sheet": [Circular],
                                                          },
                                                          "rules": RuleList {
                                                            "classes": Object {},
                                                            "index": Array [],
                                                            "map": Object {},
                                                            "options": Object {
                                                              "Renderer": [Function],
                                                              "classes": Object {},
                                                              "generateClassName": [Function],
                                                              "index": 0,
                                                              "insertionPoint": undefined,
                                                              "jss": Jss {
                                                                "generateClassName": [Function],
                                                                "options": Object {
                                                                  "Renderer": [Function],
                                                                  "createGenerateClassName": [Function],
                                                                  "plugins": Array [
                                                                    Object {
                                                                      "onCreateRule": [Function],
                                                                      "onProcessRule": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onChangeValue": [Function],
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onChangeValue": [Function],
                                                                      "onProcessRule": [Function],
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                  ],
                                                                },
                                                                "plugins": PluginsRegistry {
                                                                  "hooks": Object {
                                                                    "onChangeValue": Array [
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onCreateRule": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onProcessRule": Array [
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onProcessSheet": Array [],
                                                                    "onProcessStyle": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                  },
                                                                },
                                                                "version": "8.1.0",
                                                              },
                                                              "parent": [Circular],
                                                              "sheet": [Circular],
                                                            },
                                                            "raw": Object {},
                                                          },
                                                        }
                                                      }
                                                      styles={Object {}}
                                                      type="text"
                                                      validate={[Function]}
                                                    >
                                                      <Connect(ConnectedField)
                                                        _reduxForm={
                                                          Object {
                                                            "anyTouched": false,
                                                            "array": Object {
                                                              "insert": [Function],
                                                              "move": [Function],
                                                              "pop": [Function],
                                                              "push": [Function],
                                                              "remove": [Function],
                                                              "removeAll": [Function],
                                                              "shift": [Function],
                                                              "splice": [Function],
                                                              "swap": [Function],
                                                              "unshift": [Function],
                                                            },
                                                            "arrayInsert": [Function],
                                                            "arrayMove": [Function],
                                                            "arrayPop": [Function],
                                                            "arrayPush": [Function],
                                                            "arrayRemove": [Function],
                                                            "arrayRemoveAll": [Function],
                                                            "arrayShift": [Function],
                                                            "arraySplice": [Function],
                                                            "arraySwap": [Function],
                                                            "arrayUnshift": [Function],
                                                            "asyncErrors": undefined,
                                                            "asyncValidate": [Function],
                                                            "asyncValidating": false,
                                                            "autofill": [Function],
                                                            "blur": [Function],
                                                            "change": [Function],
                                                            "clearAsyncError": [Function],
                                                            "clearSubmit": [Function],
                                                            "clearSubmitErrors": [Function],
                                                            "destroy": [Function],
                                                            "destroyOnUnmount": true,
                                                            "dirty": true,
                                                            "dispatch": [Function],
                                                            "enableReinitialize": false,
                                                            "error": undefined,
                                                            "focus": [Function],
                                                            "forceUnregisterOnUnmount": false,
                                                            "form": "MyForm",
                                                            "getFormState": [Function],
                                                            "getValues": [Function],
                                                            "initialValues": undefined,
                                                            "initialize": [Function],
                                                            "initialized": false,
                                                            "invalid": false,
                                                            "keepDirtyOnReinitialize": false,
                                                            "name": "foobar",
                                                            "persistentSubmitErrors": false,
                                                            "pristine": false,
                                                            "pure": true,
                                                            "register": [Function],
                                                            "registerField": [Function],
                                                            "registerInnerOnSubmit": [Function],
                                                            "registeredFields": Object {
                                                              "foobar": Object {
                                                                "count": 1,
                                                                "name": "foobar",
                                                                "type": "FieldArray",
                                                              },
                                                            },
                                                            "reset": [Function],
                                                            "schemaVis": Object {
                                                              "components": Object {
                                                                "CardItem": [Function],
                                                                "CardWithHeader": [Function],
                                                                "Color": [Function],
                                                                "Date": [Function],
                                                                "DateTime": [Function],
                                                                "Email": [Function],
                                                                "Number": [Function],
                                                                "Password": [Function],
                                                                "SingleSelect": [Function],
                                                                "Text": [Function],
                                                                "TextArea": [Function],
                                                                "UniformedArrayCard": [Function],
                                                                "UniformedArrayInline": [Function],
                                                              },
                                                              "prefix": "meta.vis",
                                                              "schema": Object {
                                                                "id": "UniformedArrayInline",
                                                                "items": Object {
                                                                  "id": "Bar",
                                                                  "meta": Object {
                                                                    "vis": Object {
                                                                      "component": "CardItem",
                                                                    },
                                                                  },
                                                                  "properties": Object {
                                                                    "foo": Object {
                                                                      "meta": Object {
                                                                        "vis": Object {
                                                                          "component": "Text",
                                                                        },
                                                                      },
                                                                      "type": "string",
                                                                    },
                                                                  },
                                                                  "title": "Bar",
                                                                  "type": "object",
                                                                },
                                                                "title": "Uniformed Array Inline",
                                                                "type": "array",
                                                              },
                                                            },
                                                            "sectionPrefix": undefined,
                                                            "setSubmitFailed": [Function],
                                                            "setSubmitSucceeded": [Function],
                                                            "shouldAsyncValidate": [Function],
                                                            "shouldValidate": [Function],
                                                            "startAsyncValidation": [Function],
                                                            "startSubmit": [Function],
                                                            "stopAsyncValidation": [Function],
                                                            "stopSubmit": [Function],
                                                            "submit": [Function],
                                                            "submitFailed": false,
                                                            "submitSucceeded": false,
                                                            "submitting": false,
                                                            "syncErrors": Object {},
                                                            "syncWarnings": Object {},
                                                            "touch": [Function],
                                                            "touchOnBlur": true,
                                                            "touchOnChange": false,
                                                            "triggerSubmit": undefined,
                                                            "unregister": [Function],
                                                            "unregisterField": [Function],
                                                            "untouch": [Function],
                                                            "updateSyncErrors": [Function],
                                                            "updateSyncWarnings": [Function],
                                                            "valid": true,
                                                            "validExceptSubmit": true,
                                                            "values": Object {
                                                              "foobar": Array [
                                                                Object {},
                                                              ],
                                                            },
                                                            "warning": undefined,
                                                          }
                                                        }
                                                        classes={Object {}}
                                                        component={[Function]}
                                                        id="schemaVis"
                                                        name="foobar[0].foo"
                                                        normalize={[Function]}
                                                        required={false}
                                                        schemaVis={
                                                          Object {
                                                            "componentProps": undefined,
                                                            "components": Object {
                                                              "CardItem": [Function],
                                                              "CardWithHeader": [Function],
                                                              "Color": [Function],
                                                              "Date": [Function],
                                                              "DateTime": [Function],
                                                              "Email": [Function],
                                                              "Number": [Function],
                                                              "Password": [Function],
                                                              "SingleSelect": [Function],
                                                              "Text": [Function],
                                                              "TextArea": [Function],
                                                              "UniformedArrayCard": [Function],
                                                              "UniformedArrayInline": [Function],
                                                            },
                                                            "defaultComponents": undefined,
                                                            "prefix": "meta.vis",
                                                            "schema": Object {
                                                              "meta": Object {
                                                                "vis": Object {
                                                                  "component": "Text",
                                                                },
                                                              },
                                                              "type": "string",
                                                            },
                                                          }
                                                        }
                                                        sheet={
                                                          StyleSheet {
                                                            "attached": true,
                                                            "classes": Object {},
                                                            "deployed": true,
                                                            "linked": false,
                                                            "options": Object {
                                                              "Renderer": [Function],
                                                              "classes": Object {},
                                                              "generateClassName": [Function],
                                                              "index": 0,
                                                              "insertionPoint": undefined,
                                                              "jss": Jss {
                                                                "generateClassName": [Function],
                                                                "options": Object {
                                                                  "Renderer": [Function],
                                                                  "createGenerateClassName": [Function],
                                                                  "plugins": Array [
                                                                    Object {
                                                                      "onCreateRule": [Function],
                                                                      "onProcessRule": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onChangeValue": [Function],
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onChangeValue": [Function],
                                                                      "onProcessRule": [Function],
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                    Object {
                                                                      "onProcessStyle": [Function],
                                                                    },
                                                                  ],
                                                                },
                                                                "plugins": PluginsRegistry {
                                                                  "hooks": Object {
                                                                    "onChangeValue": Array [
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onCreateRule": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onProcessRule": Array [
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "onProcessSheet": Array [],
                                                                    "onProcessStyle": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                  },
                                                                },
                                                                "version": "8.1.0",
                                                              },
                                                              "parent": [Circular],
                                                              "sheet": [Circular],
                                                            },
                                                            "renderer": DomRenderer {
                                                              "element": <style
                                                                type="text/css"
                                                                data-jss=""
                                                          >
                                                                
                                                          </style>,
                                                              "getSelector": [Function],
                                                              "getStyle": [Function],
                                                              "hasInsertedRules": false,
                                                              "setSelector": [Function],
                                                              "setStyle": [Function],
                                                              "sheet": [Circular],
                                                            },
                                                            "rules": RuleList {
                                                              "classes": Object {},
                                                              "index": Array [],
                                                              "map": Object {},
                                                              "options": Object {
                                                                "Renderer": [Function],
                                                                "classes": Object {},
                                                                "generateClassName": [Function],
                                                                "index": 0,
                                                                "insertionPoint": undefined,
                                                                "jss": Jss {
                                                                  "generateClassName": [Function],
                                                                  "options": Object {
                                                                    "Renderer": [Function],
                                                                    "createGenerateClassName": [Function],
                                                                    "plugins": Array [
                                                                      Object {
                                                                        "onCreateRule": [Function],
                                                                        "onProcessRule": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onChangeValue": [Function],
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onChangeValue": [Function],
                                                                        "onProcessRule": [Function],
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                    ],
                                                                  },
                                                                  "plugins": PluginsRegistry {
                                                                    "hooks": Object {
                                                                      "onChangeValue": Array [
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onCreateRule": Array [
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onProcessRule": Array [
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onProcessSheet": Array [],
                                                                      "onProcessStyle": Array [
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                    },
                                                                  },
                                                                  "version": "8.1.0",
                                                                },
                                                                "parent": [Circular],
                                                                "sheet": [Circular],
                                                              },
                                                              "raw": Object {},
                                                            },
                                                          }
                                                        }
                                                        styles={Object {}}
                                                        type="text"
                                                        validate={[Function]}
                                                      >
                                                        <ConnectedField
                                                          _reduxForm={
                                                            Object {
                                                              "anyTouched": false,
                                                              "array": Object {
                                                                "insert": [Function],
                                                                "move": [Function],
                                                                "pop": [Function],
                                                                "push": [Function],
                                                                "remove": [Function],
                                                                "removeAll": [Function],
                                                                "shift": [Function],
                                                                "splice": [Function],
                                                                "swap": [Function],
                                                                "unshift": [Function],
                                                              },
                                                              "arrayInsert": [Function],
                                                              "arrayMove": [Function],
                                                              "arrayPop": [Function],
                                                              "arrayPush": [Function],
                                                              "arrayRemove": [Function],
                                                              "arrayRemoveAll": [Function],
                                                              "arrayShift": [Function],
                                                              "arraySplice": [Function],
                                                              "arraySwap": [Function],
                                                              "arrayUnshift": [Function],
                                                              "asyncErrors": undefined,
                                                              "asyncValidate": [Function],
                                                              "asyncValidating": false,
                                                              "autofill": [Function],
                                                              "blur": [Function],
                                                              "change": [Function],
                                                              "clearAsyncError": [Function],
                                                              "clearSubmit": [Function],
                                                              "clearSubmitErrors": [Function],
                                                              "destroy": [Function],
                                                              "destroyOnUnmount": true,
                                                              "dirty": true,
                                                              "dispatch": [Function],
                                                              "enableReinitialize": false,
                                                              "error": undefined,
                                                              "focus": [Function],
                                                              "forceUnregisterOnUnmount": false,
                                                              "form": "MyForm",
                                                              "getFormState": [Function],
                                                              "getValues": [Function],
                                                              "initialValues": undefined,
                                                              "initialize": [Function],
                                                              "initialized": false,
                                                              "invalid": false,
                                                              "keepDirtyOnReinitialize": false,
                                                              "name": "foobar",
                                                              "persistentSubmitErrors": false,
                                                              "pristine": false,
                                                              "pure": true,
                                                              "register": [Function],
                                                              "registerField": [Function],
                                                              "registerInnerOnSubmit": [Function],
                                                              "registeredFields": Object {
                                                                "foobar": Object {
                                                                  "count": 1,
                                                                  "name": "foobar",
                                                                  "type": "FieldArray",
                                                                },
                                                              },
                                                              "reset": [Function],
                                                              "schemaVis": Object {
                                                                "components": Object {
                                                                  "CardItem": [Function],
                                                                  "CardWithHeader": [Function],
                                                                  "Color": [Function],
                                                                  "Date": [Function],
                                                                  "DateTime": [Function],
                                                                  "Email": [Function],
                                                                  "Number": [Function],
                                                                  "Password": [Function],
                                                                  "SingleSelect": [Function],
                                                                  "Text": [Function],
                                                                  "TextArea": [Function],
                                                                  "UniformedArrayCard": [Function],
                                                                  "UniformedArrayInline": [Function],
                                                                },
                                                                "prefix": "meta.vis",
                                                                "schema": Object {
                                                                  "id": "UniformedArrayInline",
                                                                  "items": Object {
                                                                    "id": "Bar",
                                                                    "meta": Object {
                                                                      "vis": Object {
                                                                        "component": "CardItem",
                                                                      },
                                                                    },
                                                                    "properties": Object {
                                                                      "foo": Object {
                                                                        "meta": Object {
                                                                          "vis": Object {
                                                                            "component": "Text",
                                                                          },
                                                                        },
                                                                        "type": "string",
                                                                      },
                                                                    },
                                                                    "title": "Bar",
                                                                    "type": "object",
                                                                  },
                                                                  "title": "Uniformed Array Inline",
                                                                  "type": "array",
                                                                },
                                                              },
                                                              "sectionPrefix": undefined,
                                                              "setSubmitFailed": [Function],
                                                              "setSubmitSucceeded": [Function],
                                                              "shouldAsyncValidate": [Function],
                                                              "shouldValidate": [Function],
                                                              "startAsyncValidation": [Function],
                                                              "startSubmit": [Function],
                                                              "stopAsyncValidation": [Function],
                                                              "stopSubmit": [Function],
                                                              "submit": [Function],
                                                              "submitFailed": false,
                                                              "submitSucceeded": false,
                                                              "submitting": false,
                                                              "syncErrors": Object {},
                                                              "syncWarnings": Object {},
                                                              "touch": [Function],
                                                              "touchOnBlur": true,
                                                              "touchOnChange": false,
                                                              "triggerSubmit": undefined,
                                                              "unregister": [Function],
                                                              "unregisterField": [Function],
                                                              "untouch": [Function],
                                                              "updateSyncErrors": [Function],
                                                              "updateSyncWarnings": [Function],
                                                              "valid": true,
                                                              "validExceptSubmit": true,
                                                              "values": Object {
                                                                "foobar": Array [
                                                                  Object {},
                                                                ],
                                                              },
                                                              "warning": undefined,
                                                            }
                                                          }
                                                          asyncValidating={false}
                                                          classes={Object {}}
                                                          component={[Function]}
                                                          dirty={false}
                                                          dispatch={[Function]}
                                                          id="schemaVis"
                                                          name="foobar[0].foo"
                                                          normalize={[Function]}
                                                          pristine={true}
                                                          required={false}
                                                          schemaVis={
                                                            Object {
                                                              "componentProps": undefined,
                                                              "components": Object {
                                                                "CardItem": [Function],
                                                                "CardWithHeader": [Function],
                                                                "Color": [Function],
                                                                "Date": [Function],
                                                                "DateTime": [Function],
                                                                "Email": [Function],
                                                                "Number": [Function],
                                                                "Password": [Function],
                                                                "SingleSelect": [Function],
                                                                "Text": [Function],
                                                                "TextArea": [Function],
                                                                "UniformedArrayCard": [Function],
                                                                "UniformedArrayInline": [Function],
                                                              },
                                                              "defaultComponents": undefined,
                                                              "prefix": "meta.vis",
                                                              "schema": Object {
                                                                "meta": Object {
                                                                  "vis": Object {
                                                                    "component": "Text",
                                                                  },
                                                                },
                                                                "type": "string",
                                                              },
                                                            }
                                                          }
                                                          sheet={
                                                            StyleSheet {
                                                              "attached": true,
                                                              "classes": Object {},
                                                              "deployed": true,
                                                              "linked": false,
                                                              "options": Object {
                                                                "Renderer": [Function],
                                                                "classes": Object {},
                                                                "generateClassName": [Function],
                                                                "index": 0,
                                                                "insertionPoint": undefined,
                                                                "jss": Jss {
                                                                  "generateClassName": [Function],
                                                                  "options": Object {
                                                                    "Renderer": [Function],
                                                                    "createGenerateClassName": [Function],
                                                                    "plugins": Array [
                                                                      Object {
                                                                        "onCreateRule": [Function],
                                                                        "onProcessRule": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onChangeValue": [Function],
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onChangeValue": [Function],
                                                                        "onProcessRule": [Function],
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                      Object {
                                                                        "onProcessStyle": [Function],
                                                                      },
                                                                    ],
                                                                  },
                                                                  "plugins": PluginsRegistry {
                                                                    "hooks": Object {
                                                                      "onChangeValue": Array [
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onCreateRule": Array [
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onProcessRule": Array [
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "onProcessSheet": Array [],
                                                                      "onProcessStyle": Array [
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                    },
                                                                  },
                                                                  "version": "8.1.0",
                                                                },
                                                                "parent": [Circular],
                                                                "sheet": [Circular],
                                                              },
                                                              "renderer": DomRenderer {
                                                                "element": <style
                                                                  type="text/css"
                                                                  data-jss=""
                                                            >
                                                                  
                                                            </style>,
                                                                "getSelector": [Function],
                                                                "getStyle": [Function],
                                                                "hasInsertedRules": false,
                                                                "setSelector": [Function],
                                                                "setStyle": [Function],
                                                                "sheet": [Circular],
                                                              },
                                                              "rules": RuleList {
                                                                "classes": Object {},
                                                                "index": Array [],
                                                                "map": Object {},
                                                                "options": Object {
                                                                  "Renderer": [Function],
                                                                  "classes": Object {},
                                                                  "generateClassName": [Function],
                                                                  "index": 0,
                                                                  "insertionPoint": undefined,
                                                                  "jss": Jss {
                                                                    "generateClassName": [Function],
                                                                    "options": Object {
                                                                      "Renderer": [Function],
                                                                      "createGenerateClassName": [Function],
                                                                      "plugins": Array [
                                                                        Object {
                                                                          "onCreateRule": [Function],
                                                                          "onProcessRule": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onChangeValue": [Function],
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onChangeValue": [Function],
                                                                          "onProcessRule": [Function],
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                      ],
                                                                    },
                                                                    "plugins": PluginsRegistry {
                                                                      "hooks": Object {
                                                                        "onChangeValue": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onCreateRule": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onProcessRule": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onProcessSheet": Array [],
                                                                        "onProcessStyle": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                    },
                                                                    "version": "8.1.0",
                                                                  },
                                                                  "parent": [Circular],
                                                                  "sheet": [Circular],
                                                                },
                                                                "raw": Object {},
                                                              },
                                                            }
                                                          }
                                                          styles={Object {}}
                                                          type="text"
                                                          validate={[Function]}
                                                        >
                                                          <InputComponent
                                                            classes={Object {}}
                                                            id="schemaVis"
                                                            input={
                                                              Object {
                                                                "name": "foobar[0].foo",
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onDragStart": [Function],
                                                                "onDrop": [Function],
                                                                "onFocus": [Function],
                                                                "value": "",
                                                              }
                                                            }
                                                            meta={
                                                              Object {
                                                                "active": false,
                                                                "asyncValidating": false,
                                                                "autofilled": false,
                                                                "dirty": false,
                                                                "dispatch": [Function],
                                                                "error": undefined,
                                                                "form": "MyForm",
                                                                "initial": undefined,
                                                                "invalid": false,
                                                                "pristine": true,
                                                                "submitFailed": false,
                                                                "submitting": false,
                                                                "touched": false,
                                                                "valid": true,
                                                                "visited": false,
                                                                "warning": undefined,
                                                              }
                                                            }
                                                            required={false}
                                                            schemaVis={
                                                              Object {
                                                                "componentProps": undefined,
                                                                "components": Object {
                                                                  "CardItem": [Function],
                                                                  "CardWithHeader": [Function],
                                                                  "Color": [Function],
                                                                  "Date": [Function],
                                                                  "DateTime": [Function],
                                                                  "Email": [Function],
                                                                  "Number": [Function],
                                                                  "Password": [Function],
                                                                  "SingleSelect": [Function],
                                                                  "Text": [Function],
                                                                  "TextArea": [Function],
                                                                  "UniformedArrayCard": [Function],
                                                                  "UniformedArrayInline": [Function],
                                                                },
                                                                "defaultComponents": undefined,
                                                                "prefix": "meta.vis",
                                                                "schema": Object {
                                                                  "meta": Object {
                                                                    "vis": Object {
                                                                      "component": "Text",
                                                                    },
                                                                  },
                                                                  "type": "string",
                                                                },
                                                              }
                                                            }
                                                            sheet={
                                                              StyleSheet {
                                                                "attached": true,
                                                                "classes": Object {},
                                                                "deployed": true,
                                                                "linked": false,
                                                                "options": Object {
                                                                  "Renderer": [Function],
                                                                  "classes": Object {},
                                                                  "generateClassName": [Function],
                                                                  "index": 0,
                                                                  "insertionPoint": undefined,
                                                                  "jss": Jss {
                                                                    "generateClassName": [Function],
                                                                    "options": Object {
                                                                      "Renderer": [Function],
                                                                      "createGenerateClassName": [Function],
                                                                      "plugins": Array [
                                                                        Object {
                                                                          "onCreateRule": [Function],
                                                                          "onProcessRule": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onChangeValue": [Function],
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onChangeValue": [Function],
                                                                          "onProcessRule": [Function],
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                        Object {
                                                                          "onProcessStyle": [Function],
                                                                        },
                                                                      ],
                                                                    },
                                                                    "plugins": PluginsRegistry {
                                                                      "hooks": Object {
                                                                        "onChangeValue": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onCreateRule": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onProcessRule": Array [
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                        "onProcessSheet": Array [],
                                                                        "onProcessStyle": Array [
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                    },
                                                                    "version": "8.1.0",
                                                                  },
                                                                  "parent": [Circular],
                                                                  "sheet": [Circular],
                                                                },
                                                                "renderer": DomRenderer {
                                                                  "element": <style
                                                                    type="text/css"
                                                                    data-jss=""
                                                              >
                                                                    
                                                              </style>,
                                                                  "getSelector": [Function],
                                                                  "getStyle": [Function],
                                                                  "hasInsertedRules": false,
                                                                  "setSelector": [Function],
                                                                  "setStyle": [Function],
                                                                  "sheet": [Circular],
                                                                },
                                                                "rules": RuleList {
                                                                  "classes": Object {},
                                                                  "index": Array [],
                                                                  "map": Object {},
                                                                  "options": Object {
                                                                    "Renderer": [Function],
                                                                    "classes": Object {},
                                                                    "generateClassName": [Function],
                                                                    "index": 0,
                                                                    "insertionPoint": undefined,
                                                                    "jss": Jss {
                                                                      "generateClassName": [Function],
                                                                      "options": Object {
                                                                        "Renderer": [Function],
                                                                        "createGenerateClassName": [Function],
                                                                        "plugins": Array [
                                                                          Object {
                                                                            "onCreateRule": [Function],
                                                                            "onProcessRule": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onChangeValue": [Function],
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onChangeValue": [Function],
                                                                            "onProcessRule": [Function],
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                        ],
                                                                      },
                                                                      "plugins": PluginsRegistry {
                                                                        "hooks": Object {
                                                                          "onChangeValue": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onCreateRule": Array [
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onProcessRule": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onProcessSheet": Array [],
                                                                          "onProcessStyle": Array [
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                      },
                                                                      "version": "8.1.0",
                                                                    },
                                                                    "parent": [Circular],
                                                                    "sheet": [Circular],
                                                                  },
                                                                  "raw": Object {},
                                                                },
                                                              }
                                                            }
                                                            styles={Object {}}
                                                            type="text"
                                                          >
                                                            <FormField
                                                              classes={Object {}}
                                                              id="schemaVis"
                                                              input={
                                                                Object {
                                                                  "name": "foobar[0].foo",
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onDragStart": [Function],
                                                                  "onDrop": [Function],
                                                                  "onFocus": [Function],
                                                                  "value": "",
                                                                }
                                                              }
                                                              labelProps={Object {}}
                                                              meta={
                                                                Object {
                                                                  "active": false,
                                                                  "asyncValidating": false,
                                                                  "autofilled": false,
                                                                  "dirty": false,
                                                                  "dispatch": [Function],
                                                                  "error": undefined,
                                                                  "form": "MyForm",
                                                                  "initial": undefined,
                                                                  "invalid": false,
                                                                  "pristine": true,
                                                                  "submitFailed": false,
                                                                  "submitting": false,
                                                                  "touched": false,
                                                                  "valid": true,
                                                                  "visited": false,
                                                                  "warning": undefined,
                                                                }
                                                              }
                                                              required={false}
                                                              schema={
                                                                Object {
                                                                  "meta": Object {
                                                                    "vis": Object {
                                                                      "component": "Text",
                                                                    },
                                                                  },
                                                                  "type": "string",
                                                                }
                                                              }
                                                              sheet={
                                                                StyleSheet {
                                                                  "attached": true,
                                                                  "classes": Object {},
                                                                  "deployed": true,
                                                                  "linked": false,
                                                                  "options": Object {
                                                                    "Renderer": [Function],
                                                                    "classes": Object {},
                                                                    "generateClassName": [Function],
                                                                    "index": 0,
                                                                    "insertionPoint": undefined,
                                                                    "jss": Jss {
                                                                      "generateClassName": [Function],
                                                                      "options": Object {
                                                                        "Renderer": [Function],
                                                                        "createGenerateClassName": [Function],
                                                                        "plugins": Array [
                                                                          Object {
                                                                            "onCreateRule": [Function],
                                                                            "onProcessRule": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onChangeValue": [Function],
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onChangeValue": [Function],
                                                                            "onProcessRule": [Function],
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                          Object {
                                                                            "onProcessStyle": [Function],
                                                                          },
                                                                        ],
                                                                      },
                                                                      "plugins": PluginsRegistry {
                                                                        "hooks": Object {
                                                                          "onChangeValue": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onCreateRule": Array [
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onProcessRule": Array [
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "onProcessSheet": Array [],
                                                                          "onProcessStyle": Array [
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                        },
                                                                      },
                                                                      "version": "8.1.0",
                                                                    },
                                                                    "parent": [Circular],
                                                                    "sheet": [Circular],
                                                                  },
                                                                  "renderer": DomRenderer {
                                                                    "element": <style
                                                                      type="text/css"
                                                                      data-jss=""
                                                                >
                                                                      
                                                                </style>,
                                                                    "getSelector": [Function],
                                                                    "getStyle": [Function],
                                                                    "hasInsertedRules": false,
                                                                    "setSelector": [Function],
                                                                    "setStyle": [Function],
                                                                    "sheet": [Circular],
                                                                  },
                                                                  "rules": RuleList {
                                                                    "classes": Object {},
                                                                    "index": Array [],
                                                                    "map": Object {},
                                                                    "options": Object {
                                                                      "Renderer": [Function],
                                                                      "classes": Object {},
                                                                      "generateClassName": [Function],
                                                                      "index": 0,
                                                                      "insertionPoint": undefined,
                                                                      "jss": Jss {
                                                                        "generateClassName": [Function],
                                                                        "options": Object {
                                                                          "Renderer": [Function],
                                                                          "createGenerateClassName": [Function],
                                                                          "plugins": Array [
                                                                            Object {
                                                                              "onCreateRule": [Function],
                                                                              "onProcessRule": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onChangeValue": [Function],
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onChangeValue": [Function],
                                                                              "onProcessRule": [Function],
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                            Object {
                                                                              "onProcessStyle": [Function],
                                                                            },
                                                                          ],
                                                                        },
                                                                        "plugins": PluginsRegistry {
                                                                          "hooks": Object {
                                                                            "onChangeValue": Array [
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                            "onCreateRule": Array [
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                            "onProcessRule": Array [
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                            "onProcessSheet": Array [],
                                                                            "onProcessStyle": Array [
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                        },
                                                                        "version": "8.1.0",
                                                                      },
                                                                      "parent": [Circular],
                                                                      "sheet": [Circular],
                                                                    },
                                                                    "raw": Object {},
                                                                  },
                                                                }
                                                              }
                                                              showFeedback={[Function]}
                                                              styles={Object {}}
                                                              tag={[Function]}
                                                              tooltipProps={Object {}}
                                                            >
                                                              <FormGroup
                                                                id="schemaVis"
                                                                tag="div"
                                                              >
                                                                <div
                                                                  className="form-group"
                                                                  id="schemaVis"
                                                                >
                                                                  <Label
                                                                    for="foobar[0].foo"
                                                                    id="foobar[0].foo-label"
                                                                    tag="label"
                                                                  >
                                                                    <label
                                                                      className=" form-control-label"
                                                                      htmlFor="foobar[0].foo"
                                                                      id="foobar[0].foo-label"
                                                                    />
                                                                  </Label>
                                                                  <Input
                                                                    id="schemaVis"
                                                                    name="foobar[0].foo"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onDrop={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    tag="p"
                                                                    type="text"
                                                                    value=""
                                                                  >
                                                                    <input
                                                                      className="form-control"
                                                                      id="schemaVis"
                                                                      name="foobar[0].foo"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onDrop={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={false}
                                                                      type="text"
                                                                      value=""
                                                                    />
                                                                  </Input>
                                                                </div>
                                                              </FormGroup>
                                                            </FormField>
                                                          </InputComponent>
                                                        </ConnectedField>
                                                      </Connect(ConnectedField)>
                                                    </Field>
                                                  </InputField>
                                                </CreatedInputField>
                                              </StyledComponent>
                                            </div>
                                          </CardBlock>
                                        </SchemaVis>
                                      </div>
                                    </Card>
                                  </CardItem>
                                </StyledComponent>
                              </SchemaVis>
                            </div>
                          </CardBlock>
                        </div>
                      </Card>
                    </Component>
                  </ConnectedFieldArray>
                </Connect(ConnectedFieldArray)>
              </FieldArray>
            </UniformedArray>
          </UniformedArrayCard>
        </StyledComponent>
      </Form(StyledComponent)>
    </Connect(Form(StyledComponent))>
  </ReduxForm>
</Provider>
`;

exports[`Render ArrayFields should handle add item and remove item 2`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    form="MyForm"
    name="foobar"
    schemaVis={
      Object {
        "components": Object {
          "CardItem": [Function],
          "CardWithHeader": [Function],
          "Color": [Function],
          "Date": [Function],
          "DateTime": [Function],
          "Email": [Function],
          "Number": [Function],
          "Password": [Function],
          "SingleSelect": [Function],
          "Text": [Function],
          "TextArea": [Function],
          "UniformedArrayCard": [Function],
          "UniformedArrayInline": [Function],
        },
        "prefix": "meta.vis",
        "schema": Object {
          "id": "UniformedArrayInline",
          "items": Object {
            "id": "Bar",
            "meta": Object {
              "vis": Object {
                "component": "CardItem",
              },
            },
            "properties": Object {
              "foo": Object {
                "meta": Object {
                  "vis": Object {
                    "component": "Text",
                  },
                },
                "type": "string",
              },
            },
            "title": "Bar",
            "type": "object",
          },
          "title": "Uniformed Array Inline",
          "type": "array",
        },
      }
    }
  >
    <Connect(Form(StyledComponent))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="MyForm"
      getFormState={[Function]}
      keepDirtyOnReinitialize={false}
      name="foobar"
      persistentSubmitErrors={false}
      pure={true}
      schemaVis={
        Object {
          "components": Object {
            "CardItem": [Function],
            "CardWithHeader": [Function],
            "Color": [Function],
            "Date": [Function],
            "DateTime": [Function],
            "Email": [Function],
            "Number": [Function],
            "Password": [Function],
            "SingleSelect": [Function],
            "Text": [Function],
            "TextArea": [Function],
            "UniformedArrayCard": [Function],
            "UniformedArrayInline": [Function],
          },
          "prefix": "meta.vis",
          "schema": Object {
            "id": "UniformedArrayInline",
            "items": Object {
              "id": "Bar",
              "meta": Object {
                "vis": Object {
                  "component": "CardItem",
                },
              },
              "properties": Object {
                "foo": Object {
                  "meta": Object {
                    "vis": Object {
                      "component": "Text",
                    },
                  },
                  "type": "string",
                },
              },
              "title": "Bar",
              "type": "object",
            },
            "title": "Uniformed Array Inline",
            "type": "array",
          },
        }
      }
      shouldAsyncValidate={[Function]}
      shouldValidate={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
    >
      <Form(StyledComponent)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={true}
        dispatch={[Function]}
        enableReinitialize={false}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="MyForm"
        getFormState={[Function]}
        initialize={[Function]}
        initialized={false}
        invalid={false}
        keepDirtyOnReinitialize={false}
        name="foobar"
        persistentSubmitErrors={false}
        pristine={false}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "foobar": Object {
              "count": 1,
              "name": "foobar",
              "type": "FieldArray",
            },
          }
        }
        reset={[Function]}
        schemaVis={
          Object {
            "components": Object {
              "CardItem": [Function],
              "CardWithHeader": [Function],
              "Color": [Function],
              "Date": [Function],
              "DateTime": [Function],
              "Email": [Function],
              "Number": [Function],
              "Password": [Function],
              "SingleSelect": [Function],
              "Text": [Function],
              "TextArea": [Function],
              "UniformedArrayCard": [Function],
              "UniformedArrayInline": [Function],
            },
            "prefix": "meta.vis",
            "schema": Object {
              "id": "UniformedArrayInline",
              "items": Object {
                "id": "Bar",
                "meta": Object {
                  "vis": Object {
                    "component": "CardItem",
                  },
                },
                "properties": Object {
                  "foo": Object {
                    "meta": Object {
                      "vis": Object {
                        "component": "Text",
                      },
                    },
                    "type": "string",
                  },
                },
                "title": "Bar",
                "type": "object",
              },
              "title": "Uniformed Array Inline",
              "type": "array",
            },
          }
        }
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldValidate={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={Object {}}
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={true}
        validExceptSubmit={true}
        values={
          Object {
            "foobar": Array [],
          }
        }
      >
        <StyledComponent
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={true}
          dispatch={[Function]}
          form="MyForm"
          handleSubmit={[Function]}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          name="foobar"
          pristine={false}
          pure={true}
          reset={[Function]}
          schemaVis={
            Object {
              "components": Object {
                "CardItem": [Function],
                "CardWithHeader": [Function],
                "Color": [Function],
                "Date": [Function],
                "DateTime": [Function],
                "Email": [Function],
                "Number": [Function],
                "Password": [Function],
                "SingleSelect": [Function],
                "Text": [Function],
                "TextArea": [Function],
                "UniformedArrayCard": [Function],
                "UniformedArrayInline": [Function],
              },
              "prefix": "meta.vis",
              "schema": Object {
                "id": "UniformedArrayInline",
                "items": Object {
                  "id": "Bar",
                  "meta": Object {
                    "vis": Object {
                      "component": "CardItem",
                    },
                  },
                  "properties": Object {
                    "foo": Object {
                      "meta": Object {
                        "vis": Object {
                          "component": "Text",
                        },
                      },
                      "type": "string",
                    },
                  },
                  "title": "Bar",
                  "type": "object",
                },
                "title": "Uniformed Array Inline",
                "type": "array",
              },
            }
          }
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          untouch={[Function]}
          valid={true}
        >
          <UniformedArrayCard
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            classes={
              Object {
                "addButton": "addButton-0-10",
                "container": "container-0-8",
                "header": "header-0-9",
                "headerTitle": "headerTitle-0-11",
              }
            }
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={true}
            dispatch={[Function]}
            form="MyForm"
            handleSubmit={[Function]}
            initialize={[Function]}
            initialized={false}
            invalid={false}
            name="foobar"
            pristine={false}
            pure={true}
            reset={[Function]}
            schemaVis={
              Object {
                "components": Object {
                  "CardItem": [Function],
                  "CardWithHeader": [Function],
                  "Color": [Function],
                  "Date": [Function],
                  "DateTime": [Function],
                  "Email": [Function],
                  "Number": [Function],
                  "Password": [Function],
                  "SingleSelect": [Function],
                  "Text": [Function],
                  "TextArea": [Function],
                  "UniformedArrayCard": [Function],
                  "UniformedArrayInline": [Function],
                },
                "prefix": "meta.vis",
                "schema": Object {
                  "id": "UniformedArrayInline",
                  "items": Object {
                    "id": "Bar",
                    "meta": Object {
                      "vis": Object {
                        "component": "CardItem",
                      },
                    },
                    "properties": Object {
                      "foo": Object {
                        "meta": Object {
                          "vis": Object {
                            "component": "Text",
                          },
                        },
                        "type": "string",
                      },
                    },
                    "title": "Bar",
                    "type": "object",
                  },
                  "title": "Uniformed Array Inline",
                  "type": "array",
                },
              }
            }
            sheet={
              StyleSheet {
                "attached": true,
                "classes": Object {
                  "addButton": "addButton-0-10",
                  "container": "container-0-8",
                  "header": "header-0-9",
                  "headerTitle": "headerTitle-0-11",
                },
                "deployed": true,
                "linked": false,
                "options": Object {
                  "Renderer": [Function],
                  "classes": Object {
                    "addButton": "addButton-0-10",
                    "container": "container-0-8",
                    "header": "header-0-9",
                    "headerTitle": "headerTitle-0-11",
                  },
                  "generateClassName": [Function],
                  "index": 0,
                  "insertionPoint": undefined,
                  "jss": Jss {
                    "generateClassName": [Function],
                    "options": Object {
                      "Renderer": [Function],
                      "createGenerateClassName": [Function],
                      "plugins": Array [
                        Object {
                          "onCreateRule": [Function],
                          "onProcessRule": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onChangeValue": [Function],
                          "onProcessRule": [Function],
                          "onProcessStyle": [Function],
                        },
                        Object {
                          "onProcessStyle": [Function],
                        },
                      ],
                    },
                    "plugins": PluginsRegistry {
                      "hooks": Object {
                        "onChangeValue": Array [
                          [Function],
                          [Function],
                        ],
                        "onCreateRule": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "onProcessRule": Array [
                          [Function],
                          [Function],
                        ],
                        "onProcessSheet": Array [],
                        "onProcessStyle": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                    },
                    "version": "8.1.0",
                  },
                  "parent": [Circular],
                  "sheet": [Circular],
                },
                "renderer": DomRenderer {
                  "element": <style
                    type="text/css"
                    data-jss=""
              >
                    .container-0-8 { margin-top: 15px; margin-bottom: 10px; } .header-0-9 { padding: 5px; display: inline-flex; padding-left: 10px; } .addButton-0-10 { margin-left: auto; } .headerTitle-0-11 { margin-top: auto; margin-bottom: auto; }
              </style>,
                  "getSelector": [Function],
                  "getStyle": [Function],
                  "hasInsertedRules": false,
                  "setSelector": [Function],
                  "setStyle": [Function],
                  "sheet": [Circular],
                },
                "rules": RuleList {
                  "classes": Object {
                    "addButton": "addButton-0-10",
                    "container": "container-0-8",
                    "header": "header-0-9",
                    "headerTitle": "headerTitle-0-11",
                  },
                  "index": Array [
                    Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    Object {
                      "margin-left": "auto",
                    },
                    Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  ],
                  "map": Object {
                    ".addButton-0-10": Object {
                      "margin-left": "auto",
                    },
                    ".container-0-8": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    ".header-0-9": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    ".headerTitle-0-11": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                    "addButton": Object {
                      "margin-left": "auto",
                    },
                    "container": Object {
                      "margin-bottom": "10px",
                      "margin-top": "15px",
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": "5px",
                      "padding-left": "10px",
                    },
                    "headerTitle": Object {
                      "margin-bottom": "auto",
                      "margin-top": "auto",
                    },
                  },
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-10",
                      "container": "container-0-8",
                      "header": "header-0-9",
                      "headerTitle": "headerTitle-0-11",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "raw": Object {
                    "addButton": Object {
                      "marginLeft": "auto",
                    },
                    "container": Object {
                      "marginBottom": 10,
                      "marginTop": 15,
                    },
                    "header": Object {
                      "display": "inline-flex",
                      "padding": 5,
                      "paddingLeft": 10,
                    },
                    "headerTitle": Object {
                      "marginBottom": "auto",
                      "marginTop": "auto",
                    },
                  },
                },
              }
            }
            styles={
              Object {
                "addButton": Object {
                  "marginLeft": "auto",
                },
                "container": Object {
                  "marginBottom": 10,
                  "marginTop": 15,
                },
                "header": Object {
                  "display": "inline-flex",
                  "padding": 5,
                  "paddingLeft": 10,
                },
                "headerTitle": Object {
                  "marginBottom": "auto",
                  "marginTop": "auto",
                },
              }
            }
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            touch={[Function]}
            untouch={[Function]}
            valid={true}
          >
            <UniformedArray
              addBtnProps={Object {}}
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              asyncValidate={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              bodyTag={[Function]}
              change={[Function]}
              classes={
                Object {
                  "addButton": "addButton-0-10",
                  "container": "container-0-8",
                  "header": "header-0-9",
                  "headerTitle": "headerTitle-0-11",
                }
              }
              clearAsyncError={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              destroy={[Function]}
              dirty={true}
              dispatch={[Function]}
              form="MyForm"
              handleSubmit={[Function]}
              headerTag={[Function]}
              initialize={[Function]}
              initialized={false}
              invalid={false}
              name="foobar"
              pristine={false}
              pure={true}
              required={false}
              reset={[Function]}
              schemaVis={
                Object {
                  "components": Object {
                    "CardItem": [Function],
                    "CardWithHeader": [Function],
                    "Color": [Function],
                    "Date": [Function],
                    "DateTime": [Function],
                    "Email": [Function],
                    "Number": [Function],
                    "Password": [Function],
                    "SingleSelect": [Function],
                    "Text": [Function],
                    "TextArea": [Function],
                    "UniformedArrayCard": [Function],
                    "UniformedArrayInline": [Function],
                  },
                  "prefix": "meta.vis",
                  "schema": Object {
                    "id": "UniformedArrayInline",
                    "items": Object {
                      "id": "Bar",
                      "meta": Object {
                        "vis": Object {
                          "component": "CardItem",
                        },
                      },
                      "properties": Object {
                        "foo": Object {
                          "meta": Object {
                            "vis": Object {
                              "component": "Text",
                            },
                          },
                          "type": "string",
                        },
                      },
                      "title": "Bar",
                      "type": "object",
                    },
                    "title": "Uniformed Array Inline",
                    "type": "array",
                  },
                }
              }
              sheet={
                StyleSheet {
                  "attached": true,
                  "classes": Object {
                    "addButton": "addButton-0-10",
                    "container": "container-0-8",
                    "header": "header-0-9",
                    "headerTitle": "headerTitle-0-11",
                  },
                  "deployed": true,
                  "linked": false,
                  "options": Object {
                    "Renderer": [Function],
                    "classes": Object {
                      "addButton": "addButton-0-10",
                      "container": "container-0-8",
                      "header": "header-0-9",
                      "headerTitle": "headerTitle-0-11",
                    },
                    "generateClassName": [Function],
                    "index": 0,
                    "insertionPoint": undefined,
                    "jss": Jss {
                      "generateClassName": [Function],
                      "options": Object {
                        "Renderer": [Function],
                        "createGenerateClassName": [Function],
                        "plugins": Array [
                          Object {
                            "onCreateRule": [Function],
                            "onProcessRule": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onChangeValue": [Function],
                            "onProcessRule": [Function],
                            "onProcessStyle": [Function],
                          },
                          Object {
                            "onProcessStyle": [Function],
                          },
                        ],
                      },
                      "plugins": PluginsRegistry {
                        "hooks": Object {
                          "onChangeValue": Array [
                            [Function],
                            [Function],
                          ],
                          "onCreateRule": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "onProcessRule": Array [
                            [Function],
                            [Function],
                          ],
                          "onProcessSheet": Array [],
                          "onProcessStyle": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                      },
                      "version": "8.1.0",
                    },
                    "parent": [Circular],
                    "sheet": [Circular],
                  },
                  "renderer": DomRenderer {
                    "element": <style
                      type="text/css"
                      data-jss=""
                >
                      .container-0-8 { margin-top: 15px; margin-bottom: 10px; } .header-0-9 { padding: 5px; display: inline-flex; padding-left: 10px; } .addButton-0-10 { margin-left: auto; } .headerTitle-0-11 { margin-top: auto; margin-bottom: auto; }
                </style>,
                    "getSelector": [Function],
                    "getStyle": [Function],
                    "hasInsertedRules": false,
                    "setSelector": [Function],
                    "setStyle": [Function],
                    "sheet": [Circular],
                  },
                  "rules": RuleList {
                    "classes": Object {
                      "addButton": "addButton-0-10",
                      "container": "container-0-8",
                      "header": "header-0-9",
                      "headerTitle": "headerTitle-0-11",
                    },
                    "index": Array [
                      Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      Object {
                        "margin-left": "auto",
                      },
                      Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    ],
                    "map": Object {
                      ".addButton-0-10": Object {
                        "margin-left": "auto",
                      },
                      ".container-0-8": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      ".header-0-9": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      ".headerTitle-0-11": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                      "addButton": Object {
                        "margin-left": "auto",
                      },
                      "container": Object {
                        "margin-bottom": "10px",
                        "margin-top": "15px",
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": "5px",
                        "padding-left": "10px",
                      },
                      "headerTitle": Object {
                        "margin-bottom": "auto",
                        "margin-top": "auto",
                      },
                    },
                    "options": Object {
                      "Renderer": [Function],
                      "classes": Object {
                        "addButton": "addButton-0-10",
                        "container": "container-0-8",
                        "header": "header-0-9",
                        "headerTitle": "headerTitle-0-11",
                      },
                      "generateClassName": [Function],
                      "index": 0,
                      "insertionPoint": undefined,
                      "jss": Jss {
                        "generateClassName": [Function],
                        "options": Object {
                          "Renderer": [Function],
                          "createGenerateClassName": [Function],
                          "plugins": Array [
                            Object {
                              "onCreateRule": [Function],
                              "onProcessRule": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onChangeValue": [Function],
                              "onProcessRule": [Function],
                              "onProcessStyle": [Function],
                            },
                            Object {
                              "onProcessStyle": [Function],
                            },
                          ],
                        },
                        "plugins": PluginsRegistry {
                          "hooks": Object {
                            "onChangeValue": Array [
                              [Function],
                              [Function],
                            ],
                            "onCreateRule": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "onProcessRule": Array [
                              [Function],
                              [Function],
                            ],
                            "onProcessSheet": Array [],
                            "onProcessStyle": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                          },
                        },
                        "version": "8.1.0",
                      },
                      "parent": [Circular],
                      "sheet": [Circular],
                    },
                    "raw": Object {
                      "addButton": Object {
                        "marginLeft": "auto",
                      },
                      "container": Object {
                        "marginBottom": 10,
                        "marginTop": 15,
                      },
                      "header": Object {
                        "display": "inline-flex",
                        "padding": 5,
                        "paddingLeft": 10,
                      },
                      "headerTitle": Object {
                        "marginBottom": "auto",
                        "marginTop": "auto",
                      },
                    },
                  },
                }
              }
              styles={
                Object {
                  "addButton": Object {
                    "marginLeft": "auto",
                  },
                  "container": Object {
                    "marginBottom": 10,
                    "marginTop": 15,
                  },
                  "header": Object {
                    "display": "inline-flex",
                    "padding": 5,
                    "paddingLeft": 10,
                  },
                  "headerTitle": Object {
                    "marginBottom": "auto",
                    "marginTop": "auto",
                  },
                }
              }
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              tag={[Function]}
              touch={[Function]}
              untouch={[Function]}
              valid={true}
            >
              <FieldArray
                component={[Function]}
                name="foobar"
                validate={[Function]}
              >
                <Connect(ConnectedFieldArray)
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": true,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "MyForm",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "name": "foobar",
                      "persistentSubmitErrors": false,
                      "pristine": false,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "foobar": Object {
                          "count": 1,
                          "name": "foobar",
                          "type": "FieldArray",
                        },
                      },
                      "reset": [Function],
                      "schemaVis": Object {
                        "components": Object {
                          "CardItem": [Function],
                          "CardWithHeader": [Function],
                          "Color": [Function],
                          "Date": [Function],
                          "DateTime": [Function],
                          "Email": [Function],
                          "Number": [Function],
                          "Password": [Function],
                          "SingleSelect": [Function],
                          "Text": [Function],
                          "TextArea": [Function],
                          "UniformedArrayCard": [Function],
                          "UniformedArrayInline": [Function],
                        },
                        "prefix": "meta.vis",
                        "schema": Object {
                          "id": "UniformedArrayInline",
                          "items": Object {
                            "id": "Bar",
                            "meta": Object {
                              "vis": Object {
                                "component": "CardItem",
                              },
                            },
                            "properties": Object {
                              "foo": Object {
                                "meta": Object {
                                  "vis": Object {
                                    "component": "Text",
                                  },
                                },
                                "type": "string",
                              },
                            },
                            "title": "Bar",
                            "type": "object",
                          },
                          "title": "Uniformed Array Inline",
                          "type": "array",
                        },
                      },
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {
                        "foobar": Array [
                          Object {},
                        ],
                      },
                      "warning": undefined,
                    }
                  }
                  component={[Function]}
                  name="foobar"
                  validate={[Function]}
                >
                  <ConnectedFieldArray
                    _reduxForm={
                      Object {
                        "anyTouched": false,
                        "array": Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "splice": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        },
                        "arrayInsert": [Function],
                        "arrayMove": [Function],
                        "arrayPop": [Function],
                        "arrayPush": [Function],
                        "arrayRemove": [Function],
                        "arrayRemoveAll": [Function],
                        "arrayShift": [Function],
                        "arraySplice": [Function],
                        "arraySwap": [Function],
                        "arrayUnshift": [Function],
                        "asyncErrors": undefined,
                        "asyncValidate": [Function],
                        "asyncValidating": false,
                        "autofill": [Function],
                        "blur": [Function],
                        "change": [Function],
                        "clearAsyncError": [Function],
                        "clearSubmit": [Function],
                        "clearSubmitErrors": [Function],
                        "destroy": [Function],
                        "destroyOnUnmount": true,
                        "dirty": true,
                        "dispatch": [Function],
                        "enableReinitialize": false,
                        "error": undefined,
                        "focus": [Function],
                        "forceUnregisterOnUnmount": false,
                        "form": "MyForm",
                        "getFormState": [Function],
                        "getValues": [Function],
                        "initialValues": undefined,
                        "initialize": [Function],
                        "initialized": false,
                        "invalid": false,
                        "keepDirtyOnReinitialize": false,
                        "name": "foobar",
                        "persistentSubmitErrors": false,
                        "pristine": false,
                        "pure": true,
                        "register": [Function],
                        "registerField": [Function],
                        "registerInnerOnSubmit": [Function],
                        "registeredFields": Object {
                          "foobar": Object {
                            "count": 1,
                            "name": "foobar",
                            "type": "FieldArray",
                          },
                        },
                        "reset": [Function],
                        "schemaVis": Object {
                          "components": Object {
                            "CardItem": [Function],
                            "CardWithHeader": [Function],
                            "Color": [Function],
                            "Date": [Function],
                            "DateTime": [Function],
                            "Email": [Function],
                            "Number": [Function],
                            "Password": [Function],
                            "SingleSelect": [Function],
                            "Text": [Function],
                            "TextArea": [Function],
                            "UniformedArrayCard": [Function],
                            "UniformedArrayInline": [Function],
                          },
                          "prefix": "meta.vis",
                          "schema": Object {
                            "id": "UniformedArrayInline",
                            "items": Object {
                              "id": "Bar",
                              "meta": Object {
                                "vis": Object {
                                  "component": "CardItem",
                                },
                              },
                              "properties": Object {
                                "foo": Object {
                                  "meta": Object {
                                    "vis": Object {
                                      "component": "Text",
                                    },
                                  },
                                  "type": "string",
                                },
                              },
                              "title": "Bar",
                              "type": "object",
                            },
                            "title": "Uniformed Array Inline",
                            "type": "array",
                          },
                        },
                        "sectionPrefix": undefined,
                        "setSubmitFailed": [Function],
                        "setSubmitSucceeded": [Function],
                        "shouldAsyncValidate": [Function],
                        "shouldValidate": [Function],
                        "startAsyncValidation": [Function],
                        "startSubmit": [Function],
                        "stopAsyncValidation": [Function],
                        "stopSubmit": [Function],
                        "submit": [Function],
                        "submitFailed": false,
                        "submitSucceeded": false,
                        "submitting": false,
                        "syncErrors": Object {},
                        "syncWarnings": Object {},
                        "touch": [Function],
                        "touchOnBlur": true,
                        "touchOnChange": false,
                        "triggerSubmit": undefined,
                        "unregister": [Function],
                        "unregisterField": [Function],
                        "untouch": [Function],
                        "updateSyncErrors": [Function],
                        "updateSyncWarnings": [Function],
                        "valid": true,
                        "validExceptSubmit": true,
                        "values": Object {
                          "foobar": Array [
                            Object {},
                          ],
                        },
                        "warning": undefined,
                      }
                    }
                    arrayInsert={[Function]}
                    arrayMove={[Function]}
                    arrayPop={[Function]}
                    arrayPush={[Function]}
                    arrayRemove={[Function]}
                    arrayRemoveAll={[Function]}
                    arrayShift={[Function]}
                    arraySplice={[Function]}
                    arraySwap={[Function]}
                    arrayUnshift={[Function]}
                    component={[Function]}
                    dirty={true}
                    length={0}
                    name="foobar"
                    pristine={false}
                    rerenderOnEveryChange={false}
                    validate={[Function]}
                    value={Array []}
                  >
                    <Component
                      fields={
                        Object {
                          "_isFieldArray": true,
                          "forEach": [Function],
                          "get": [Function],
                          "getAll": [Function],
                          "insert": [Function],
                          "length": 0,
                          "map": [Function],
                          "move": [Function],
                          "name": "foobar",
                          "pop": [Function],
                          "push": [Function],
                          "reduce": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      meta={
                        Object {
                          "dirty": true,
                          "error": undefined,
                          "form": "MyForm",
                          "invalid": false,
                          "pristine": false,
                          "submitFailed": undefined,
                          "submitting": undefined,
                          "valid": true,
                          "warning": undefined,
                        }
                      }
                    >
                      <Card
                        className="container-0-8"
                        tag="div"
                      >
                        <div
                          className="container-0-8 card"
                        >
                          <CardHeader
                            className="header-0-9"
                            tag="div"
                          >
                            <div
                              className="header-0-9 card-header"
                            >
                              <div
                                className="headerTitle-0-11"
                              >
                                Uniformed Array Inline
                              </div>
                              <div
                                className="addButton-0-10"
                              >
                                <Button
                                  color="primary"
                                  id="addItemBtn"
                                  onClick={[Function]}
                                  size="sm"
                                  tag="button"
                                >
                                  <button
                                    className="btn btn-primary btn-sm"
                                    id="addItemBtn"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Add
                                  </button>
                                </Button>
                              </div>
                            </div>
                          </CardHeader>
                          <CardBlock
                            tag="div"
                          >
                            <div
                              className="card-block"
                            />
                          </CardBlock>
                        </div>
                      </Card>
                    </Component>
                  </ConnectedFieldArray>
                </Connect(ConnectedFieldArray)>
              </FieldArray>
            </UniformedArray>
          </UniformedArrayCard>
        </StyledComponent>
      </Form(StyledComponent)>
    </Connect(Form(StyledComponent))>
  </ReduxForm>
</Provider>
`;
